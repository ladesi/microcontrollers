

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Wed Sep 13 09:22:05 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	intentry,global,class=CODE,delta=2
    12                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15     0000                     
    16                           ; Version 2.20
    17                           ; Generated 12/02/2020 GMT
    18                           ; 
    19                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F877A Definitions
    48                           ; 
    49                           ; SFR Addresses
    50     0000                     	;# 
    51     0001                     	;# 
    52     0002                     	;# 
    53     0003                     	;# 
    54     0004                     	;# 
    55     0005                     	;# 
    56     0006                     	;# 
    57     0007                     	;# 
    58     0008                     	;# 
    59     0009                     	;# 
    60     000A                     	;# 
    61     000B                     	;# 
    62     000C                     	;# 
    63     000D                     	;# 
    64     000E                     	;# 
    65     000E                     	;# 
    66     000F                     	;# 
    67     0010                     	;# 
    68     0011                     	;# 
    69     0012                     	;# 
    70     0013                     	;# 
    71     0014                     	;# 
    72     0015                     	;# 
    73     0015                     	;# 
    74     0016                     	;# 
    75     0017                     	;# 
    76     0018                     	;# 
    77     0019                     	;# 
    78     001A                     	;# 
    79     001B                     	;# 
    80     001B                     	;# 
    81     001C                     	;# 
    82     001D                     	;# 
    83     001E                     	;# 
    84     001F                     	;# 
    85     0081                     	;# 
    86     0085                     	;# 
    87     0086                     	;# 
    88     0087                     	;# 
    89     0088                     	;# 
    90     0089                     	;# 
    91     008C                     	;# 
    92     008D                     	;# 
    93     008E                     	;# 
    94     0091                     	;# 
    95     0092                     	;# 
    96     0093                     	;# 
    97     0094                     	;# 
    98     0098                     	;# 
    99     0099                     	;# 
   100     009C                     	;# 
   101     009D                     	;# 
   102     009E                     	;# 
   103     009F                     	;# 
   104     010C                     	;# 
   105     010D                     	;# 
   106     010E                     	;# 
   107     010F                     	;# 
   108     018C                     	;# 
   109     018D                     	;# 
   110     0000                     	;# 
   111     0001                     	;# 
   112     0002                     	;# 
   113     0003                     	;# 
   114     0004                     	;# 
   115     0005                     	;# 
   116     0006                     	;# 
   117     0007                     	;# 
   118     0008                     	;# 
   119     0009                     	;# 
   120     000A                     	;# 
   121     000B                     	;# 
   122     000C                     	;# 
   123     000D                     	;# 
   124     000E                     	;# 
   125     000E                     	;# 
   126     000F                     	;# 
   127     0010                     	;# 
   128     0011                     	;# 
   129     0012                     	;# 
   130     0013                     	;# 
   131     0014                     	;# 
   132     0015                     	;# 
   133     0015                     	;# 
   134     0016                     	;# 
   135     0017                     	;# 
   136     0018                     	;# 
   137     0019                     	;# 
   138     001A                     	;# 
   139     001B                     	;# 
   140     001B                     	;# 
   141     001C                     	;# 
   142     001D                     	;# 
   143     001E                     	;# 
   144     001F                     	;# 
   145     0081                     	;# 
   146     0085                     	;# 
   147     0086                     	;# 
   148     0087                     	;# 
   149     0088                     	;# 
   150     0089                     	;# 
   151     008C                     	;# 
   152     008D                     	;# 
   153     008E                     	;# 
   154     0091                     	;# 
   155     0092                     	;# 
   156     0093                     	;# 
   157     0094                     	;# 
   158     0098                     	;# 
   159     0099                     	;# 
   160     009C                     	;# 
   161     009D                     	;# 
   162     009E                     	;# 
   163     009F                     	;# 
   164     010C                     	;# 
   165     010D                     	;# 
   166     010E                     	;# 
   167     010F                     	;# 
   168     018C                     	;# 
   169     018D                     	;# 
   170                           
   171                           	psect	nvCOMMON
   172     0071                     __pnvCOMMON:
   173     0071                     _duty2:
   174     0071                     	ds	2
   175     0073                     _duty1:
   176     0073                     	ds	2
   177     000E                     _TMR1	set	14
   178     0010                     _T1CON	set	16
   179     000B                     _INTCON	set	11
   180     0008                     _PORTD	set	8
   181     0009                     _PORTE	set	9
   182     0007                     _PORTC	set	7
   183     0006                     _PORTB	set	6
   184     0005                     _PORTA	set	5
   185     0001                     _TMR0	set	1
   186     0007                     _PORTCbits	set	7
   187     000B                     _INTCONbits	set	11
   188     0006                     _PORTBbits	set	6
   189     000C                     _PIR1bits	set	12
   190     0081                     _OPTION_REG	set	129
   191     0089                     _TRISE	set	137
   192     0087                     _TRISC	set	135
   193     0086                     _TRISB	set	134
   194     0085                     _TRISA	set	133
   195     0088                     _TRISD	set	136
   196     008C                     _PIE1bits	set	140
   197                           
   198                           	psect	cinit
   199     07FA                     start_initialization:	
   200                           ; #config settings
   201                           
   202     07FA                     __initialization:
   203                           
   204                           ; Clear objects allocated to COMMON
   205     07FA  01F9               	clrf	__pbssCOMMON& (0+127)
   206     07FB  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   207     07FC                     end_of_initialization:	
   208                           ;End of C runtime variable initialization code
   209                           
   210     07FC                     __end_of__initialization:
   211     07FC  0183               	clrf	3
   212     07FD  120A  118A  2F24   	ljmp	_main	;jump to C main() function
   213                           
   214                           	psect	bssCOMMON
   215     0079                     __pbssCOMMON:
   216     0079                     _cont:
   217     0079                     	ds	2
   218                           
   219                           	psect	cstackCOMMON
   220     0075                     __pcstackCOMMON:
   221     0075                     ?_myIsr:
   222     0075                     ??_myIsr:	
   223                           ; 1 bytes @ 0x0
   224                           
   225     0075                     ?_init:	
   226                           ; 1 bytes @ 0x0
   227                           
   228     0075                     ?_main:	
   229                           ; 1 bytes @ 0x0
   230                           
   231                           
   232                           ; 1 bytes @ 0x0
   233     0075                     	ds	4
   234     0079                     ??_init:
   235     0079                     ??_main:	
   236                           ; 1 bytes @ 0x4
   237                           
   238                           
   239                           	psect	maintext
   240     0724                     __pmaintext:	
   241                           ; 1 bytes @ 0x4
   242 ;;
   243 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   244 ;;
   245 ;; *************** function _main *****************
   246 ;; Defined at:
   247 ;;		line 118 in file "main.c"
   248 ;; Parameters:    Size  Location     Type
   249 ;;		None
   250 ;; Auto vars:     Size  Location     Type
   251 ;;		None
   252 ;; Return value:  Size  Location     Type
   253 ;;                  1    wreg      void 
   254 ;; Registers used:
   255 ;;		wreg, status,2, status,0, pclath, cstack
   256 ;; Tracked objects:
   257 ;;		On entry : B00/0
   258 ;;		On exit  : 0/0
   259 ;;		Unchanged: 0/0
   260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   261 ;;      Params:         0       0       0       0       0
   262 ;;      Locals:         0       0       0       0       0
   263 ;;      Temps:          0       0       0       0       0
   264 ;;      Totals:         0       0       0       0       0
   265 ;;Total ram usage:        0 bytes
   266 ;; Hardware stack levels required when called: 2
   267 ;; This function calls:
   268 ;;		_init
   269 ;; This function is called by:
   270 ;;		Startup code after reset
   271 ;; This function uses a non-reentrant model
   272 ;;
   273                           
   274     0724                     _main:	
   275                           ;psect for function _main
   276                           
   277     0724                     l730:	
   278                           ;incstack = 0
   279                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   280                           
   281                           
   282                           ;main.c: 121:     INTCONbits.GIE = 0;
   283     0724  138B               	bcf	11,7	;volatile
   284     0725                     l732:
   285                           
   286                           ;main.c: 124:     init();
   287     0725  120A  118A  26F0  120A  118A  	fcall	_init
   288     072A                     l734:
   289                           
   290                           ;main.c: 127:     INTCONbits.GIE = 1;
   291     072A  178B               	bsf	11,7	;volatile
   292     072B                     l736:
   293                           
   294                           ;main.c: 131:     {;main.c: 133:         if (!PORTBbits.RB4 && duty1 < 40)
   295     072B  1283               	bcf	3,5	;RP0=0, select bank0
   296     072C  1303               	bcf	3,6	;RP1=0, select bank0
   297     072D  1A06               	btfsc	6,4	;volatile
   298     072E  2F30               	goto	u111
   299     072F  2F31               	goto	u110
   300     0730                     u111:
   301     0730  2F44               	goto	l744
   302     0731                     u110:
   303     0731                     l738:
   304     0731  3000               	movlw	0
   305     0732  0274               	subwf	_duty1+1,w
   306     0733  3028               	movlw	40
   307     0734  1903               	skipnz
   308     0735  0273               	subwf	_duty1,w
   309     0736  1803               	skipnc
   310     0737  2F39               	goto	u121
   311     0738  2F3A               	goto	u120
   312     0739                     u121:
   313     0739  2F44               	goto	l744
   314     073A                     u120:
   315     073A                     l67:
   316     073A  1E06               	btfss	6,4	;volatile
   317     073B  2F3D               	goto	u131
   318     073C  2F3E               	goto	u130
   319     073D                     u131:
   320     073D  2F3A               	goto	l67
   321     073E                     u130:
   322     073E                     l742:
   323                           
   324                           ;main.c: 136:             duty1++;
   325     073E  3001               	movlw	1
   326     073F  07F3               	addwf	_duty1,f
   327     0740  1803               	skipnc
   328     0741  0AF4               	incf	_duty1+1,f
   329     0742  3000               	movlw	0
   330     0743  07F4               	addwf	_duty1+1,f
   331     0744                     l744:
   332                           
   333                           ;main.c: 138:         if (!PORTBbits.RB5 && duty1 > 20)
   334     0744  1A86               	btfsc	6,5	;volatile
   335     0745  2F47               	goto	u141
   336     0746  2F48               	goto	u140
   337     0747                     u141:
   338     0747  2F5B               	goto	l752
   339     0748                     u140:
   340     0748                     l746:
   341     0748  3000               	movlw	0
   342     0749  0274               	subwf	_duty1+1,w
   343     074A  3015               	movlw	21
   344     074B  1903               	skipnz
   345     074C  0273               	subwf	_duty1,w
   346     074D  1C03               	skipc
   347     074E  2F50               	goto	u151
   348     074F  2F51               	goto	u150
   349     0750                     u151:
   350     0750  2F5B               	goto	l752
   351     0751                     u150:
   352     0751                     l71:
   353     0751  1E86               	btfss	6,5	;volatile
   354     0752  2F54               	goto	u161
   355     0753  2F55               	goto	u160
   356     0754                     u161:
   357     0754  2F51               	goto	l71
   358     0755                     u160:
   359     0755                     l750:
   360                           
   361                           ;main.c: 141:             duty1--;
   362     0755  3001               	movlw	1
   363     0756  02F3               	subwf	_duty1,f
   364     0757  3000               	movlw	0
   365     0758  1C03               	skipc
   366     0759  03F4               	decf	_duty1+1,f
   367     075A  02F4               	subwf	_duty1+1,f
   368     075B                     l752:
   369                           
   370                           ;main.c: 145:         if (!PORTBbits.RB6 && duty2 < 40)
   371     075B  1B06               	btfsc	6,6	;volatile
   372     075C  2F5E               	goto	u171
   373     075D  2F5F               	goto	u170
   374     075E                     u171:
   375     075E  2F72               	goto	l760
   376     075F                     u170:
   377     075F                     l754:
   378     075F  3000               	movlw	0
   379     0760  0272               	subwf	_duty2+1,w
   380     0761  3028               	movlw	40
   381     0762  1903               	skipnz
   382     0763  0271               	subwf	_duty2,w
   383     0764  1803               	skipnc
   384     0765  2F67               	goto	u181
   385     0766  2F68               	goto	u180
   386     0767                     u181:
   387     0767  2F72               	goto	l760
   388     0768                     u180:
   389     0768                     l75:
   390     0768  1F06               	btfss	6,6	;volatile
   391     0769  2F6B               	goto	u191
   392     076A  2F6C               	goto	u190
   393     076B                     u191:
   394     076B  2F68               	goto	l75
   395     076C                     u190:
   396     076C                     l758:
   397                           
   398                           ;main.c: 148:             duty2++;
   399     076C  3001               	movlw	1
   400     076D  07F1               	addwf	_duty2,f
   401     076E  1803               	skipnc
   402     076F  0AF2               	incf	_duty2+1,f
   403     0770  3000               	movlw	0
   404     0771  07F2               	addwf	_duty2+1,f
   405     0772                     l760:
   406                           
   407                           ;main.c: 150:         if (!PORTBbits.RB7 && duty2 > 20)
   408     0772  1B86               	btfsc	6,7	;volatile
   409     0773  2F75               	goto	u201
   410     0774  2F76               	goto	u200
   411     0775                     u201:
   412     0775  2F2B               	goto	l736
   413     0776                     u200:
   414     0776                     l762:
   415     0776  3000               	movlw	0
   416     0777  0272               	subwf	_duty2+1,w
   417     0778  3015               	movlw	21
   418     0779  1903               	skipnz
   419     077A  0271               	subwf	_duty2,w
   420     077B  1C03               	skipc
   421     077C  2F7E               	goto	u211
   422     077D  2F7F               	goto	u210
   423     077E                     u211:
   424     077E  2F2B               	goto	l736
   425     077F                     u210:
   426     077F                     l79:
   427     077F  1F86               	btfss	6,7	;volatile
   428     0780  2F82               	goto	u221
   429     0781  2F83               	goto	u220
   430     0782                     u221:
   431     0782  2F7F               	goto	l79
   432     0783                     u220:
   433     0783                     l766:
   434                           
   435                           ;main.c: 153:             duty2--;
   436     0783  3001               	movlw	1
   437     0784  02F1               	subwf	_duty2,f
   438     0785  3000               	movlw	0
   439     0786  1C03               	skipc
   440     0787  03F2               	decf	_duty2+1,f
   441     0788  02F2               	subwf	_duty2+1,f
   442     0789  2F2B               	goto	l736
   443     078A  120A  118A  280C   	ljmp	start
   444     078D                     __end_of_main:
   445                           
   446                           	psect	text1
   447     06F0                     __ptext1:	
   448 ;; *************** function _init *****************
   449 ;; Defined at:
   450 ;;		line 50 in file "main.c"
   451 ;; Parameters:    Size  Location     Type
   452 ;;		None
   453 ;; Auto vars:     Size  Location     Type
   454 ;;		None
   455 ;; Return value:  Size  Location     Type
   456 ;;                  1    wreg      void 
   457 ;; Registers used:
   458 ;;		wreg, status,2
   459 ;; Tracked objects:
   460 ;;		On entry : 0/0
   461 ;;		On exit  : 0/0
   462 ;;		Unchanged: 0/0
   463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   464 ;;      Params:         0       0       0       0       0
   465 ;;      Locals:         0       0       0       0       0
   466 ;;      Temps:          0       0       0       0       0
   467 ;;      Totals:         0       0       0       0       0
   468 ;;Total ram usage:        0 bytes
   469 ;; Hardware stack levels used: 1
   470 ;; Hardware stack levels required when called: 1
   471 ;; This function calls:
   472 ;;		Nothing
   473 ;; This function is called by:
   474 ;;		_main
   475 ;; This function uses a non-reentrant model
   476 ;;
   477                           
   478     06F0                     _init:	
   479                           ;psect for function _init
   480                           
   481     06F0                     l676:	
   482                           ;incstack = 0
   483                           ; Regs used in _init: [wreg+status,2]
   484                           
   485                           
   486                           ;main.c: 54:     PORTA = 0b00000000;
   487     06F0  1283               	bcf	3,5	;RP0=0, select bank0
   488     06F1  1303               	bcf	3,6	;RP1=0, select bank0
   489     06F2  0185               	clrf	5	;volatile
   490                           
   491                           ;main.c: 55:     PORTB = 0b00000000;
   492     06F3  0186               	clrf	6	;volatile
   493                           
   494                           ;main.c: 56:     PORTC = 0b00000000;
   495     06F4  0187               	clrf	7	;volatile
   496                           
   497                           ;main.c: 57:     TRISD = 0b00000000;
   498     06F5  1683               	bsf	3,5	;RP0=1, select bank1
   499     06F6  1303               	bcf	3,6	;RP1=0, select bank1
   500     06F7  0188               	clrf	8	;volatile
   501                           
   502                           ;main.c: 58:     PORTE = 0b00000000;
   503     06F8  1283               	bcf	3,5	;RP0=0, select bank0
   504     06F9  1303               	bcf	3,6	;RP1=0, select bank0
   505     06FA  0189               	clrf	9	;volatile
   506                           
   507                           ;main.c: 60:     TRISA = 0b00000000;
   508     06FB  1683               	bsf	3,5	;RP0=1, select bank1
   509     06FC  1303               	bcf	3,6	;RP1=0, select bank1
   510     06FD  0185               	clrf	5	;volatile
   511     06FE                     l678:
   512                           
   513                           ;main.c: 61:     TRISB = 0b11110001;
   514     06FE  30F1               	movlw	241
   515     06FF  0086               	movwf	6	;volatile
   516     0700                     l680:
   517                           
   518                           ;main.c: 62:     TRISC = 0b10000000;
   519     0700  3080               	movlw	128
   520     0701  0087               	movwf	7	;volatile
   521                           
   522                           ;main.c: 63:     PORTD = 0b00000000;
   523     0702  1283               	bcf	3,5	;RP0=0, select bank0
   524     0703  1303               	bcf	3,6	;RP1=0, select bank0
   525     0704  0188               	clrf	8	;volatile
   526                           
   527                           ;main.c: 64:     TRISE = 0b00000000;
   528     0705  1683               	bsf	3,5	;RP0=1, select bank1
   529     0706  1303               	bcf	3,6	;RP1=0, select bank1
   530     0707  0189               	clrf	9	;volatile
   531     0708                     l682:
   532                           
   533                           ;main.c: 68:     OPTION_REG = 0b10000000;
   534     0708  3080               	movlw	128
   535     0709  0081               	movwf	1	;volatile
   536     070A                     l684:
   537                           
   538                           ;main.c: 79:     INTCON = 0b01100000;
   539     070A  3060               	movlw	96
   540     070B  008B               	movwf	11	;volatile
   541     070C                     l686:
   542                           
   543                           ;main.c: 90:     TMR0 = 256 - 125;
   544     070C  3083               	movlw	131
   545     070D  1283               	bcf	3,5	;RP0=0, select bank0
   546     070E  1303               	bcf	3,6	;RP1=0, select bank0
   547     070F  0081               	movwf	1	;volatile
   548     0710                     l688:
   549                           
   550                           ;main.c: 95:     T1CON = 0b00010001;
   551     0710  3011               	movlw	17
   552     0711  0090               	movwf	16	;volatile
   553     0712                     l690:
   554                           
   555                           ;main.c: 106:     TMR1 = 65536 - 50000;
   556     0712  303C               	movlw	60
   557     0713  008F               	movwf	15	;volatile
   558     0714  30B0               	movlw	176
   559     0715  008E               	movwf	14	;volatile
   560     0716                     l692:
   561                           
   562                           ;main.c: 109:     PIE1bits.TMR1IE = 1;
   563     0716  1683               	bsf	3,5	;RP0=1, select bank1
   564     0717  1303               	bcf	3,6	;RP1=0, select bank1
   565     0718  140C               	bsf	12,0	;volatile
   566                           
   567                           ;main.c: 111:     cont = 0;
   568     0719  01F9               	clrf	_cont
   569     071A  01FA               	clrf	_cont+1
   570     071B                     l694:
   571                           
   572                           ;main.c: 112:     duty1 = 20;
   573     071B  3014               	movlw	20
   574     071C  00F3               	movwf	_duty1
   575     071D  3000               	movlw	0
   576     071E  00F4               	movwf	_duty1+1
   577     071F                     l696:
   578                           
   579                           ;main.c: 113:     duty2 = 40;
   580     071F  3028               	movlw	40
   581     0720  00F1               	movwf	_duty2
   582     0721  3000               	movlw	0
   583     0722  00F2               	movwf	_duty2+1
   584     0723                     l60:
   585     0723  0008               	return
   586     0724                     __end_of_init:
   587                           
   588                           	psect	text2
   589     078D                     __ptext2:	
   590 ;; *************** function _myIsr *****************
   591 ;; Defined at:
   592 ;;		line 16 in file "main.c"
   593 ;; Parameters:    Size  Location     Type
   594 ;;		None
   595 ;; Auto vars:     Size  Location     Type
   596 ;;		None
   597 ;; Return value:  Size  Location     Type
   598 ;;                  1    wreg      void 
   599 ;; Registers used:
   600 ;;		wreg, status,2, status,0
   601 ;; Tracked objects:
   602 ;;		On entry : 0/0
   603 ;;		On exit  : 0/0
   604 ;;		Unchanged: 0/0
   605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   606 ;;      Params:         0       0       0       0       0
   607 ;;      Locals:         0       0       0       0       0
   608 ;;      Temps:          4       0       0       0       0
   609 ;;      Totals:         4       0       0       0       0
   610 ;;Total ram usage:        4 bytes
   611 ;; Hardware stack levels used: 1
   612 ;; This function calls:
   613 ;;		Nothing
   614 ;; This function is called by:
   615 ;;		Interrupt level 1
   616 ;; This function uses a non-reentrant model
   617 ;;
   618                           
   619     078D                     _myIsr:	
   620                           ;psect for function _myIsr
   621                           
   622     078D                     i1l698:
   623                           
   624                           ;main.c: 18:     if (PIR1bits.TMR1IF && PIE1bits.TMR1IE)
   625     078D  1283               	bcf	3,5	;RP0=0, select bank0
   626     078E  1303               	bcf	3,6	;RP1=0, select bank0
   627     078F  1C0C               	btfss	12,0	;volatile
   628     0790  2F92               	goto	u1_21
   629     0791  2F93               	goto	u1_20
   630     0792                     u1_21:
   631     0792  2FB7               	goto	i1l710
   632     0793                     u1_20:
   633     0793                     i1l700:
   634     0793  1683               	bsf	3,5	;RP0=1, select bank1
   635     0794  1303               	bcf	3,6	;RP1=0, select bank1
   636     0795  1C0C               	btfss	12,0	;volatile
   637     0796  2F98               	goto	u2_21
   638     0797  2F99               	goto	u2_20
   639     0798                     u2_21:
   640     0798  2FB7               	goto	i1l710
   641     0799                     u2_20:
   642     0799                     i1l702:
   643                           
   644                           ;main.c: 19:     {;main.c: 20:         PIR1bits.TMR1IF = 0;
   645     0799  1283               	bcf	3,5	;RP0=0, select bank0
   646     079A  1303               	bcf	3,6	;RP1=0, select bank0
   647     079B  100C               	bcf	12,0	;volatile
   648     079C                     i1l704:
   649                           
   650                           ;main.c: 21:         PORTBbits.RB2 = !PORTBbits.RB2;
   651     079C  1003               	clrc
   652     079D  1D06               	btfss	6,2	;volatile
   653     079E  1403               	setc
   654     079F  1803               	btfsc	3,0
   655     07A0  2FA2               	goto	u3_21
   656     07A1  2FA6               	goto	u3_20
   657     07A2                     u3_21:
   658     07A2  1283               	bcf	3,5	;RP0=0, select bank0
   659     07A3  1303               	bcf	3,6	;RP1=0, select bank0
   660     07A4  1506               	bsf	6,2	;volatile
   661     07A5  2FA9               	goto	u4_24
   662     07A6                     u3_20:
   663     07A6  1283               	bcf	3,5	;RP0=0, select bank0
   664     07A7  1303               	bcf	3,6	;RP1=0, select bank0
   665     07A8  1106               	bcf	6,2	;volatile
   666     07A9                     u4_24:
   667     07A9                     i1l706:
   668                           
   669                           ;main.c: 22:         cont = 0;
   670     07A9  01F9               	clrf	_cont
   671     07AA  01FA               	clrf	_cont+1
   672     07AB                     i1l708:
   673                           
   674                           ;main.c: 23:         TMR1 = 65536 - 50000 + TMR1;
   675     07AB  080E               	movf	14,w	;volatile
   676     07AC  3EB0               	addlw	176
   677     07AD  00F5               	movwf	??_myIsr
   678     07AE  080F               	movf	15,w	;volatile
   679     07AF  1803               	skipnc
   680     07B0  3E01               	addlw	1
   681     07B1  3E3C               	addlw	60
   682     07B2  00F6               	movwf	??_myIsr+1
   683     07B3  0875               	movf	??_myIsr,w
   684     07B4  008E               	movwf	14	;volatile
   685     07B5  0876               	movf	??_myIsr+1,w
   686     07B6  008F               	movwf	15	;volatile
   687     07B7                     i1l710:
   688                           
   689                           ;main.c: 26:     if (INTCONbits.TMR0IF && INTCONbits.TMR0IE)
   690     07B7  1D0B               	btfss	11,2	;volatile
   691     07B8  2FBA               	goto	u5_21
   692     07B9  2FBB               	goto	u5_20
   693     07BA                     u5_21:
   694     07BA  2FF3               	goto	i1l57
   695     07BB                     u5_20:
   696     07BB                     i1l712:
   697     07BB  1E8B               	btfss	11,5	;volatile
   698     07BC  2FBE               	goto	u6_21
   699     07BD  2FBF               	goto	u6_20
   700     07BE                     u6_21:
   701     07BE  2FF3               	goto	i1l57
   702     07BF                     u6_20:
   703     07BF                     i1l714:
   704                           
   705                           ;main.c: 27:     {;main.c: 28:         INTCONbits.TMR0IF = 0;
   706     07BF  110B               	bcf	11,2	;volatile
   707     07C0                     i1l716:
   708                           
   709                           ;main.c: 29:         PORTBbits.RB1 = !PORTBbits.RB1;
   710     07C0  1003               	clrc
   711     07C1  1283               	bcf	3,5	;RP0=0, select bank0
   712     07C2  1C86               	btfss	6,1	;volatile
   713     07C3  1403               	setc
   714     07C4  1803               	btfsc	3,0
   715     07C5  2FC7               	goto	u7_21
   716     07C6  2FCB               	goto	u7_20
   717     07C7                     u7_21:
   718     07C7  1283               	bcf	3,5	;RP0=0, select bank0
   719     07C8  1303               	bcf	3,6	;RP1=0, select bank0
   720     07C9  1486               	bsf	6,1	;volatile
   721     07CA  2FCE               	goto	u8_24
   722     07CB                     u7_20:
   723     07CB  1283               	bcf	3,5	;RP0=0, select bank0
   724     07CC  1303               	bcf	3,6	;RP1=0, select bank0
   725     07CD  1086               	bcf	6,1	;volatile
   726     07CE                     u8_24:
   727     07CE                     i1l718:
   728                           
   729                           ;main.c: 30:         cont = cont+1;
   730     07CE  0879               	movf	_cont,w
   731     07CF  3E01               	addlw	1
   732     07D0  00F9               	movwf	_cont
   733     07D1  087A               	movf	_cont+1,w
   734     07D2  1803               	skipnc
   735     07D3  3E01               	addlw	1
   736     07D4  3E00               	addlw	0
   737     07D5  00FA               	movwf	_cont+1
   738     07D6                     i1l720:
   739                           
   740                           ;main.c: 33:         if (cont <= duty1)
   741     07D6  087A               	movf	_cont+1,w
   742     07D7  0274               	subwf	_duty1+1,w
   743     07D8  1D03               	skipz
   744     07D9  2FDC               	goto	u9_25
   745     07DA  0879               	movf	_cont,w
   746     07DB  0273               	subwf	_duty1,w
   747     07DC                     u9_25:
   748     07DC  1C03               	skipc
   749     07DD  2FDF               	goto	u9_21
   750     07DE  2FE0               	goto	u9_20
   751     07DF                     u9_21:
   752     07DF  2FE2               	goto	i1l53
   753     07E0                     u9_20:
   754     07E0                     i1l722:
   755                           
   756                           ;main.c: 34:             PORTCbits.RC0 = 1;
   757     07E0  1407               	bsf	7,0	;volatile
   758     07E1  2FE3               	goto	i1l724
   759     07E2                     i1l53:	
   760                           ;main.c: 35:         else
   761                           
   762                           
   763                           ;main.c: 36:             PORTCbits.RC0 = 0;
   764     07E2  1007               	bcf	7,0	;volatile
   765     07E3                     i1l724:
   766                           
   767                           ;main.c: 39:         if (cont <= duty2)
   768     07E3  087A               	movf	_cont+1,w
   769     07E4  0272               	subwf	_duty2+1,w
   770     07E5  1D03               	skipz
   771     07E6  2FE9               	goto	u10_25
   772     07E7  0879               	movf	_cont,w
   773     07E8  0271               	subwf	_duty2,w
   774     07E9                     u10_25:
   775     07E9  1C03               	skipc
   776     07EA  2FEC               	goto	u10_21
   777     07EB  2FED               	goto	u10_20
   778     07EC                     u10_21:
   779     07EC  2FEF               	goto	i1l55
   780     07ED                     u10_20:
   781     07ED                     i1l726:
   782                           
   783                           ;main.c: 40:             PORTCbits.RC1 = 1;
   784     07ED  1487               	bsf	7,1	;volatile
   785     07EE  2FF0               	goto	i1l728
   786     07EF                     i1l55:	
   787                           ;main.c: 41:         else
   788                           
   789                           
   790                           ;main.c: 42:             PORTCbits.RC1 = 0;
   791     07EF  1087               	bcf	7,1	;volatile
   792     07F0                     i1l728:
   793                           
   794                           ;main.c: 45:         TMR0 = 256 - 125 + TMR0;
   795     07F0  0801               	movf	1,w	;volatile
   796     07F1  3E83               	addlw	131
   797     07F2  0081               	movwf	1	;volatile
   798     07F3                     i1l57:
   799     07F3  0878               	movf	??_myIsr+3,w
   800     07F4  008A               	movwf	10
   801     07F5  0E77               	swapf	??_myIsr+2,w
   802     07F6  0083               	movwf	3
   803     07F7  0EFE               	swapf	btemp,f
   804     07F8  0E7E               	swapf	btemp,w
   805     07F9  0009               	retfie
   806     07FA                     __end_of_myIsr:
   807     007E                     btemp	set	126	;btemp
   808     007E                     wtemp0	set	126
   809                           
   810                           	psect	intentry
   811     0004                     __pintentry:	
   812                           ;incstack = 0
   813                           ; Regs used in _myIsr: [wreg+status,2+status,0]
   814                           
   815     0004                     interrupt_function:
   816     007E                     saved_w	set	btemp
   817     0004  00FE               	movwf	btemp
   818     0005  0E03               	swapf	3,w
   819     0006  00F7               	movwf	??_myIsr+2
   820     0007  080A               	movf	10,w
   821     0008  00F8               	movwf	??_myIsr+3
   822     0009  120A  118A  2F8D   	ljmp	_myIsr
   823                           
   824                           	psect	idloc
   825                           
   826                           ;Config register IDLOC0 @ 0x2000
   827                           ;	unspecified, using default values
   828     2000                     	org	8192
   829     2000  3FFF               	dw	16383
   830                           
   831                           ;Config register IDLOC1 @ 0x2001
   832                           ;	unspecified, using default values
   833     2001                     	org	8193
   834     2001  3FFF               	dw	16383
   835                           
   836                           ;Config register IDLOC2 @ 0x2002
   837                           ;	unspecified, using default values
   838     2002                     	org	8194
   839     2002  3FFF               	dw	16383
   840                           
   841                           ;Config register IDLOC3 @ 0x2003
   842                           ;	unspecified, using default values
   843     2003                     	org	8195
   844     2003  3FFF               	dw	16383
   845                           
   846                           	psect	config
   847                           
   848                           ;Config register CONFIG @ 0x2007
   849                           ;	Oscillator Selection bits
   850                           ;	FOSC = HS, HS oscillator
   851                           ;	Watchdog Timer Enable bit
   852                           ;	WDTE = OFF, WDT disabled
   853                           ;	Power-up Timer Enable bit
   854                           ;	PWRTE = ON, PWRT enabled
   855                           ;	Brown-out Reset Enable bit
   856                           ;	BOREN = ON, BOR enabled
   857                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   858                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
   859                           ;	Data EEPROM Memory Code Protection bit
   860                           ;	CPD = OFF, Data EEPROM code protection off
   861                           ;	Flash Program Memory Write Enable bits
   862                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   863                           ;	In-Circuit Debugger Mode bit
   864                           ;	DEBUG = 0x1, unprogrammed default
   865                           ;	Flash Program Memory Code Protection bit
   866                           ;	CP = OFF, Code protection off
   867     2007                     	org	8199
   868     2007  3FF2               	dw	16370

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           13      4      10
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            85      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _myIsr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _myIsr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _myIsr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myIsr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myIsr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                               _init
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _myIsr                                                4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init

 _myIsr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            D      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               D      4       A       1       76.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            55      0       0       8        0.0%
BANK3               55      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       A      12        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Wed Sep 13 09:22:05 2023

                     l60 0723                       l71 0751                       l75 0768  
                     l67 073A                       l79 077F                      l730 0724  
                    l732 0725                      l750 0755                      l742 073E  
                    l734 072A                      l680 0700                      l760 0772  
                    l752 075B                      l744 0744                      l736 072B  
                    l690 0712                      l682 0708                      l762 0776  
                    l754 075F                      l746 0748                      l738 0731  
                    l692 0716                      l684 070A                      l676 06F0  
                    l694 071B                      l686 070C                      l678 06FE  
                    l766 0783                      l758 076C                      l696 071F  
                    l688 0710                      u110 0731                      u111 0730  
                    u200 0776                      u120 073A                      u201 0775  
                    u121 0739                      u210 077F                      u130 073E  
                    u211 077E                      u131 073D                      u220 0783  
                    u140 0748                      u221 0782                      u141 0747  
                    u150 0751                      u151 0750                      u160 0755  
                    u161 0754                      u170 075F                      u171 075E  
                    u180 0768                      u181 0767                      u190 076C  
                    u191 076B                     i1l53 07E2                     i1l55 07EF  
                   i1l57 07F3                     _TMR0 0001                     _TMR1 000E  
                   u1_20 0793                     u1_21 0792                     u2_20 0799  
                   u2_21 0798                     u3_20 07A6                     u3_21 07A2  
                   u4_24 07A9                     u5_20 07BB                     u5_21 07BA  
                   u6_20 07BF                     u6_21 07BE                     u7_20 07CB  
                   u7_21 07C7                     u8_24 07CE                     u9_20 07E0  
                   u9_21 07DF                     u9_25 07DC                     _cont 0079  
                   _main 0724                     _init 06F0                     btemp 007E  
                   start 000C                    ?_main 0075                    ?_init 0075  
                  _T1CON 0010                    i1l700 0793                    i1l702 0799  
                  i1l710 07B7                    i1l720 07D6                    i1l712 07BB  
                  i1l704 079C                    i1l722 07E0                    i1l714 07BF  
                  i1l706 07A9                    i1l724 07E3                    i1l716 07C0  
                  i1l708 07AB                    i1l726 07ED                    i1l718 07CE  
                  i1l728 07F0                    i1l698 078D                    u10_20 07ED  
                  u10_21 07EC                    u10_25 07E9                    _PORTA 0005  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  _PORTE 0009                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    _TRISE 0089  
                  _duty1 0073                    _duty2 0071                    _myIsr 078D  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 07FA             __end_of_main 078D             __end_of_init 0724  
                 ??_main 0079                   ??_init 0079                   ?_myIsr 0075  
                 _INTCON 000B                   saved_w 007E  __end_of__initialization 07FC  
         __pcstackCOMMON 0075            __end_of_myIsr 07FA                  ??_myIsr 0075  
             __pnvCOMMON 0071               __pmaintext 0724               __pintentry 0004  
                __ptext1 06F0                  __ptext2 078D     end_of_initialization 07FC  
              _PORTBbits 0006                _PORTCbits 0007      start_initialization 07FA  
            __pbssCOMMON 0079                ___latbits 0002        interrupt_function 0004  
               _PIE1bits 008C                 _PIR1bits 000C               _INTCONbits 000B  
               intlevel1 0000               _OPTION_REG 0081  
