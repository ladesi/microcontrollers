

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Wed Sep 13 09:13:24 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	intentry,global,class=CODE,delta=2
    12                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15     0000                     
    16                           ; Version 2.20
    17                           ; Generated 12/02/2020 GMT
    18                           ; 
    19                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F877A Definitions
    48                           ; 
    49                           ; SFR Addresses
    50     0000                     	;# 
    51     0001                     	;# 
    52     0002                     	;# 
    53     0003                     	;# 
    54     0004                     	;# 
    55     0005                     	;# 
    56     0006                     	;# 
    57     0007                     	;# 
    58     0008                     	;# 
    59     0009                     	;# 
    60     000A                     	;# 
    61     000B                     	;# 
    62     000C                     	;# 
    63     000D                     	;# 
    64     000E                     	;# 
    65     000E                     	;# 
    66     000F                     	;# 
    67     0010                     	;# 
    68     0011                     	;# 
    69     0012                     	;# 
    70     0013                     	;# 
    71     0014                     	;# 
    72     0015                     	;# 
    73     0015                     	;# 
    74     0016                     	;# 
    75     0017                     	;# 
    76     0018                     	;# 
    77     0019                     	;# 
    78     001A                     	;# 
    79     001B                     	;# 
    80     001B                     	;# 
    81     001C                     	;# 
    82     001D                     	;# 
    83     001E                     	;# 
    84     001F                     	;# 
    85     0081                     	;# 
    86     0085                     	;# 
    87     0086                     	;# 
    88     0087                     	;# 
    89     0088                     	;# 
    90     0089                     	;# 
    91     008C                     	;# 
    92     008D                     	;# 
    93     008E                     	;# 
    94     0091                     	;# 
    95     0092                     	;# 
    96     0093                     	;# 
    97     0094                     	;# 
    98     0098                     	;# 
    99     0099                     	;# 
   100     009C                     	;# 
   101     009D                     	;# 
   102     009E                     	;# 
   103     009F                     	;# 
   104     010C                     	;# 
   105     010D                     	;# 
   106     010E                     	;# 
   107     010F                     	;# 
   108     018C                     	;# 
   109     018D                     	;# 
   110     0000                     	;# 
   111     0001                     	;# 
   112     0002                     	;# 
   113     0003                     	;# 
   114     0004                     	;# 
   115     0005                     	;# 
   116     0006                     	;# 
   117     0007                     	;# 
   118     0008                     	;# 
   119     0009                     	;# 
   120     000A                     	;# 
   121     000B                     	;# 
   122     000C                     	;# 
   123     000D                     	;# 
   124     000E                     	;# 
   125     000E                     	;# 
   126     000F                     	;# 
   127     0010                     	;# 
   128     0011                     	;# 
   129     0012                     	;# 
   130     0013                     	;# 
   131     0014                     	;# 
   132     0015                     	;# 
   133     0015                     	;# 
   134     0016                     	;# 
   135     0017                     	;# 
   136     0018                     	;# 
   137     0019                     	;# 
   138     001A                     	;# 
   139     001B                     	;# 
   140     001B                     	;# 
   141     001C                     	;# 
   142     001D                     	;# 
   143     001E                     	;# 
   144     001F                     	;# 
   145     0081                     	;# 
   146     0085                     	;# 
   147     0086                     	;# 
   148     0087                     	;# 
   149     0088                     	;# 
   150     0089                     	;# 
   151     008C                     	;# 
   152     008D                     	;# 
   153     008E                     	;# 
   154     0091                     	;# 
   155     0092                     	;# 
   156     0093                     	;# 
   157     0094                     	;# 
   158     0098                     	;# 
   159     0099                     	;# 
   160     009C                     	;# 
   161     009D                     	;# 
   162     009E                     	;# 
   163     009F                     	;# 
   164     010C                     	;# 
   165     010D                     	;# 
   166     010E                     	;# 
   167     010F                     	;# 
   168     018C                     	;# 
   169     018D                     	;# 
   170                           
   171                           	psect	nvCOMMON
   172     0070                     __pnvCOMMON:
   173     0070                     _duty2:
   174     0070                     	ds	2
   175     0072                     _duty1:
   176     0072                     	ds	2
   177     000E                     _TMR1	set	14
   178     0010                     _T1CON	set	16
   179     000B                     _INTCON	set	11
   180     0008                     _PORTD	set	8
   181     0009                     _PORTE	set	9
   182     0007                     _PORTC	set	7
   183     0006                     _PORTB	set	6
   184     0005                     _PORTA	set	5
   185     0001                     _TMR0	set	1
   186     0007                     _PORTCbits	set	7
   187     000B                     _INTCONbits	set	11
   188     0006                     _PORTBbits	set	6
   189     000C                     _PIR1bits	set	12
   190     0081                     _OPTION_REG	set	129
   191     0089                     _TRISE	set	137
   192     0087                     _TRISC	set	135
   193     0086                     _TRISB	set	134
   194     0085                     _TRISA	set	133
   195     0088                     _TRISD	set	136
   196     008C                     _PIE1bits	set	140
   197                           
   198                           	psect	cinit
   199     000F                     start_initialization:	
   200                           ; #config settings
   201                           
   202     000F                     __initialization:
   203                           
   204                           ; Clear objects allocated to COMMON
   205     000F  01F8               	clrf	__pbssCOMMON& (0+127)
   206     0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   207     0011                     end_of_initialization:	
   208                           ;End of C runtime variable initialization code
   209                           
   210     0011                     __end_of__initialization:
   211     0011  0183               	clrf	3
   212     0012  120A  118A  2882   	ljmp	_main	;jump to C main() function
   213                           
   214                           	psect	bssCOMMON
   215     0078                     __pbssCOMMON:
   216     0078                     _cont:
   217     0078                     	ds	2
   218                           
   219                           	psect	cstackCOMMON
   220     0074                     __pcstackCOMMON:
   221     0074                     ?_myIsr:
   222     0074                     ??_myIsr:	
   223                           ; 1 bytes @ 0x0
   224                           
   225     0074                     ?_init:	
   226                           ; 1 bytes @ 0x0
   227                           
   228     0074                     ?_main:	
   229                           ; 1 bytes @ 0x0
   230                           
   231                           
   232                           ; 1 bytes @ 0x0
   233     0074                     	ds	4
   234     0078                     ??_init:
   235     0078                     ??_main:	
   236                           ; 1 bytes @ 0x4
   237                           
   238                           
   239                           	psect	maintext
   240     0082                     __pmaintext:	
   241                           ; 1 bytes @ 0x4
   242 ;;
   243 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   244 ;;
   245 ;; *************** function _main *****************
   246 ;; Defined at:
   247 ;;		line 118 in file "main.c"
   248 ;; Parameters:    Size  Location     Type
   249 ;;		None
   250 ;; Auto vars:     Size  Location     Type
   251 ;;		None
   252 ;; Return value:  Size  Location     Type
   253 ;;                  1    wreg      void 
   254 ;; Registers used:
   255 ;;		wreg, status,2, status,0, pclath, cstack
   256 ;; Tracked objects:
   257 ;;		On entry : B00/0
   258 ;;		On exit  : 0/0
   259 ;;		Unchanged: 0/0
   260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   261 ;;      Params:         0       0       0       0       0
   262 ;;      Locals:         0       0       0       0       0
   263 ;;      Temps:          0       0       0       0       0
   264 ;;      Totals:         0       0       0       0       0
   265 ;;Total ram usage:        0 bytes
   266 ;; Hardware stack levels required when called: 2
   267 ;; This function calls:
   268 ;;		_init
   269 ;; This function is called by:
   270 ;;		Startup code after reset
   271 ;; This function uses a non-reentrant model
   272 ;;
   273                           
   274     0082                     _main:	
   275                           ;psect for function _main
   276                           
   277     0082                     l730:	
   278                           ;incstack = 0
   279                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   280                           
   281                           
   282                           ;main.c: 121:     INTCONbits.GIE = 0;
   283     0082  138B               	bcf	11,7	;volatile
   284     0083                     l732:
   285                           
   286                           ;main.c: 124:     init();
   287     0083  120A  118A  20EB  120A  118A  	fcall	_init
   288     0088                     l734:
   289                           
   290                           ;main.c: 127:     INTCONbits.GIE = 1;
   291     0088  178B               	bsf	11,7	;volatile
   292     0089                     l736:
   293                           
   294                           ;main.c: 131:     {;main.c: 133:         if (!PORTBbits.RB4 && duty1 < 40)
   295     0089  1283               	bcf	3,5	;RP0=0, select bank0
   296     008A  1303               	bcf	3,6	;RP1=0, select bank0
   297     008B  1A06               	btfsc	6,4	;volatile
   298     008C  288E               	goto	u111
   299     008D  288F               	goto	u110
   300     008E                     u111:
   301     008E  28A2               	goto	l744
   302     008F                     u110:
   303     008F                     l738:
   304     008F  3000               	movlw	0
   305     0090  0273               	subwf	_duty1+1,w
   306     0091  3028               	movlw	40
   307     0092  1903               	skipnz
   308     0093  0272               	subwf	_duty1,w
   309     0094  1803               	skipnc
   310     0095  2897               	goto	u121
   311     0096  2898               	goto	u120
   312     0097                     u121:
   313     0097  28A2               	goto	l744
   314     0098                     u120:
   315     0098                     l67:
   316     0098  1E06               	btfss	6,4	;volatile
   317     0099  289B               	goto	u131
   318     009A  289C               	goto	u130
   319     009B                     u131:
   320     009B  2898               	goto	l67
   321     009C                     u130:
   322     009C                     l742:
   323                           
   324                           ;main.c: 136:             duty1++;
   325     009C  3001               	movlw	1
   326     009D  07F2               	addwf	_duty1,f
   327     009E  1803               	skipnc
   328     009F  0AF3               	incf	_duty1+1,f
   329     00A0  3000               	movlw	0
   330     00A1  07F3               	addwf	_duty1+1,f
   331     00A2                     l744:
   332                           
   333                           ;main.c: 138:         if (!PORTBbits.RB5 && duty1 > 20)
   334     00A2  1A86               	btfsc	6,5	;volatile
   335     00A3  28A5               	goto	u141
   336     00A4  28A6               	goto	u140
   337     00A5                     u141:
   338     00A5  28B9               	goto	l752
   339     00A6                     u140:
   340     00A6                     l746:
   341     00A6  3000               	movlw	0
   342     00A7  0273               	subwf	_duty1+1,w
   343     00A8  3015               	movlw	21
   344     00A9  1903               	skipnz
   345     00AA  0272               	subwf	_duty1,w
   346     00AB  1C03               	skipc
   347     00AC  28AE               	goto	u151
   348     00AD  28AF               	goto	u150
   349     00AE                     u151:
   350     00AE  28B9               	goto	l752
   351     00AF                     u150:
   352     00AF                     l71:
   353     00AF  1E86               	btfss	6,5	;volatile
   354     00B0  28B2               	goto	u161
   355     00B1  28B3               	goto	u160
   356     00B2                     u161:
   357     00B2  28AF               	goto	l71
   358     00B3                     u160:
   359     00B3                     l750:
   360                           
   361                           ;main.c: 141:             duty1--;
   362     00B3  3001               	movlw	1
   363     00B4  02F2               	subwf	_duty1,f
   364     00B5  3000               	movlw	0
   365     00B6  1C03               	skipc
   366     00B7  03F3               	decf	_duty1+1,f
   367     00B8  02F3               	subwf	_duty1+1,f
   368     00B9                     l752:
   369                           
   370                           ;main.c: 145:         if (!PORTBbits.RB6 && duty2 < 40)
   371     00B9  1B06               	btfsc	6,6	;volatile
   372     00BA  28BC               	goto	u171
   373     00BB  28BD               	goto	u170
   374     00BC                     u171:
   375     00BC  28D0               	goto	l760
   376     00BD                     u170:
   377     00BD                     l754:
   378     00BD  3000               	movlw	0
   379     00BE  0271               	subwf	_duty2+1,w
   380     00BF  3028               	movlw	40
   381     00C0  1903               	skipnz
   382     00C1  0270               	subwf	_duty2,w
   383     00C2  1803               	skipnc
   384     00C3  28C5               	goto	u181
   385     00C4  28C6               	goto	u180
   386     00C5                     u181:
   387     00C5  28D0               	goto	l760
   388     00C6                     u180:
   389     00C6                     l75:
   390     00C6  1F06               	btfss	6,6	;volatile
   391     00C7  28C9               	goto	u191
   392     00C8  28CA               	goto	u190
   393     00C9                     u191:
   394     00C9  28C6               	goto	l75
   395     00CA                     u190:
   396     00CA                     l758:
   397                           
   398                           ;main.c: 148:             duty2++;
   399     00CA  3001               	movlw	1
   400     00CB  07F0               	addwf	_duty2,f
   401     00CC  1803               	skipnc
   402     00CD  0AF1               	incf	_duty2+1,f
   403     00CE  3000               	movlw	0
   404     00CF  07F1               	addwf	_duty2+1,f
   405     00D0                     l760:
   406                           
   407                           ;main.c: 150:         if (!PORTBbits.RB7 && duty2 > 20)
   408     00D0  1B86               	btfsc	6,7	;volatile
   409     00D1  28D3               	goto	u201
   410     00D2  28D4               	goto	u200
   411     00D3                     u201:
   412     00D3  2889               	goto	l736
   413     00D4                     u200:
   414     00D4                     l762:
   415     00D4  3000               	movlw	0
   416     00D5  0271               	subwf	_duty2+1,w
   417     00D6  3015               	movlw	21
   418     00D7  1903               	skipnz
   419     00D8  0270               	subwf	_duty2,w
   420     00D9  1C03               	skipc
   421     00DA  28DC               	goto	u211
   422     00DB  28DD               	goto	u210
   423     00DC                     u211:
   424     00DC  2889               	goto	l736
   425     00DD                     u210:
   426     00DD                     l79:
   427     00DD  1F86               	btfss	6,7	;volatile
   428     00DE  28E0               	goto	u221
   429     00DF  28E1               	goto	u220
   430     00E0                     u221:
   431     00E0  28DD               	goto	l79
   432     00E1                     u220:
   433     00E1                     l766:
   434                           
   435                           ;main.c: 153:             duty2--;
   436     00E1  3001               	movlw	1
   437     00E2  02F0               	subwf	_duty2,f
   438     00E3  3000               	movlw	0
   439     00E4  1C03               	skipc
   440     00E5  03F1               	decf	_duty2+1,f
   441     00E6  02F1               	subwf	_duty2+1,f
   442     00E7  2889               	goto	l736
   443     00E8  120A  118A  280C   	ljmp	start
   444     00EB                     __end_of_main:
   445                           
   446                           	psect	text1
   447     00EB                     __ptext1:	
   448 ;; *************** function _init *****************
   449 ;; Defined at:
   450 ;;		line 50 in file "main.c"
   451 ;; Parameters:    Size  Location     Type
   452 ;;		None
   453 ;; Auto vars:     Size  Location     Type
   454 ;;		None
   455 ;; Return value:  Size  Location     Type
   456 ;;                  1    wreg      void 
   457 ;; Registers used:
   458 ;;		wreg, status,2
   459 ;; Tracked objects:
   460 ;;		On entry : 0/0
   461 ;;		On exit  : 0/0
   462 ;;		Unchanged: 0/0
   463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   464 ;;      Params:         0       0       0       0       0
   465 ;;      Locals:         0       0       0       0       0
   466 ;;      Temps:          0       0       0       0       0
   467 ;;      Totals:         0       0       0       0       0
   468 ;;Total ram usage:        0 bytes
   469 ;; Hardware stack levels used: 1
   470 ;; Hardware stack levels required when called: 1
   471 ;; This function calls:
   472 ;;		Nothing
   473 ;; This function is called by:
   474 ;;		_main
   475 ;; This function uses a non-reentrant model
   476 ;;
   477                           
   478     00EB                     _init:	
   479                           ;psect for function _init
   480                           
   481     00EB                     l676:	
   482                           ;incstack = 0
   483                           ; Regs used in _init: [wreg+status,2]
   484                           
   485                           
   486                           ;main.c: 54:     PORTA = 0b00000000;
   487     00EB  1283               	bcf	3,5	;RP0=0, select bank0
   488     00EC  1303               	bcf	3,6	;RP1=0, select bank0
   489     00ED  0185               	clrf	5	;volatile
   490                           
   491                           ;main.c: 55:     PORTB = 0b00000000;
   492     00EE  0186               	clrf	6	;volatile
   493                           
   494                           ;main.c: 56:     PORTC = 0b00000000;
   495     00EF  0187               	clrf	7	;volatile
   496                           
   497                           ;main.c: 57:     TRISD = 0b00000000;
   498     00F0  1683               	bsf	3,5	;RP0=1, select bank1
   499     00F1  1303               	bcf	3,6	;RP1=0, select bank1
   500     00F2  0188               	clrf	8	;volatile
   501                           
   502                           ;main.c: 58:     PORTE = 0b00000000;
   503     00F3  1283               	bcf	3,5	;RP0=0, select bank0
   504     00F4  1303               	bcf	3,6	;RP1=0, select bank0
   505     00F5  0189               	clrf	9	;volatile
   506                           
   507                           ;main.c: 60:     TRISA = 0b00000000;
   508     00F6  1683               	bsf	3,5	;RP0=1, select bank1
   509     00F7  1303               	bcf	3,6	;RP1=0, select bank1
   510     00F8  0185               	clrf	5	;volatile
   511     00F9                     l678:
   512                           
   513                           ;main.c: 61:     TRISB = 0b11110001;
   514     00F9  30F1               	movlw	241
   515     00FA  0086               	movwf	6	;volatile
   516     00FB                     l680:
   517                           
   518                           ;main.c: 62:     TRISC = 0b10000000;
   519     00FB  3080               	movlw	128
   520     00FC  0087               	movwf	7	;volatile
   521                           
   522                           ;main.c: 63:     PORTD = 0b00000000;
   523     00FD  1283               	bcf	3,5	;RP0=0, select bank0
   524     00FE  1303               	bcf	3,6	;RP1=0, select bank0
   525     00FF  0188               	clrf	8	;volatile
   526                           
   527                           ;main.c: 64:     TRISE = 0b00000000;
   528     0100  1683               	bsf	3,5	;RP0=1, select bank1
   529     0101  1303               	bcf	3,6	;RP1=0, select bank1
   530     0102  0189               	clrf	9	;volatile
   531     0103                     l682:
   532                           
   533                           ;main.c: 68:     OPTION_REG = 0b10000000;
   534     0103  3080               	movlw	128
   535     0104  0081               	movwf	1	;volatile
   536     0105                     l684:
   537                           
   538                           ;main.c: 79:     INTCON = 0b01100000;
   539     0105  3060               	movlw	96
   540     0106  008B               	movwf	11	;volatile
   541     0107                     l686:
   542                           
   543                           ;main.c: 90:     TMR0 = 256 - 125;
   544     0107  3083               	movlw	131
   545     0108  1283               	bcf	3,5	;RP0=0, select bank0
   546     0109  1303               	bcf	3,6	;RP1=0, select bank0
   547     010A  0081               	movwf	1	;volatile
   548     010B                     l688:
   549                           
   550                           ;main.c: 95:     T1CON = 0b00010001;
   551     010B  3011               	movlw	17
   552     010C  0090               	movwf	16	;volatile
   553     010D                     l690:
   554                           
   555                           ;main.c: 106:     TMR1 = 65536 - 50000;
   556     010D  303C               	movlw	60
   557     010E  008F               	movwf	15	;volatile
   558     010F  30B0               	movlw	176
   559     0110  008E               	movwf	14	;volatile
   560     0111                     l692:
   561                           
   562                           ;main.c: 109:     PIE1bits.TMR1IE = 1;
   563     0111  1683               	bsf	3,5	;RP0=1, select bank1
   564     0112  1303               	bcf	3,6	;RP1=0, select bank1
   565     0113  140C               	bsf	12,0	;volatile
   566                           
   567                           ;main.c: 111:     cont = 0;
   568     0114  01F8               	clrf	_cont
   569     0115  01F9               	clrf	_cont+1
   570     0116                     l694:
   571                           
   572                           ;main.c: 112:     duty1 = 20;
   573     0116  3014               	movlw	20
   574     0117  00F2               	movwf	_duty1
   575     0118  3000               	movlw	0
   576     0119  00F3               	movwf	_duty1+1
   577     011A                     l696:
   578                           
   579                           ;main.c: 113:     duty2 = 40;
   580     011A  3028               	movlw	40
   581     011B  00F0               	movwf	_duty2
   582     011C  3000               	movlw	0
   583     011D  00F1               	movwf	_duty2+1
   584     011E                     l60:
   585     011E  0008               	return
   586     011F                     __end_of_init:
   587                           
   588                           	psect	text2
   589     0015                     __ptext2:	
   590 ;; *************** function _myIsr *****************
   591 ;; Defined at:
   592 ;;		line 16 in file "main.c"
   593 ;; Parameters:    Size  Location     Type
   594 ;;		None
   595 ;; Auto vars:     Size  Location     Type
   596 ;;		None
   597 ;; Return value:  Size  Location     Type
   598 ;;                  1    wreg      void 
   599 ;; Registers used:
   600 ;;		wreg, status,2, status,0
   601 ;; Tracked objects:
   602 ;;		On entry : 0/0
   603 ;;		On exit  : 0/0
   604 ;;		Unchanged: 0/0
   605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   606 ;;      Params:         0       0       0       0       0
   607 ;;      Locals:         0       0       0       0       0
   608 ;;      Temps:          4       0       0       0       0
   609 ;;      Totals:         4       0       0       0       0
   610 ;;Total ram usage:        4 bytes
   611 ;; Hardware stack levels used: 1
   612 ;; This function calls:
   613 ;;		Nothing
   614 ;; This function is called by:
   615 ;;		Interrupt level 1
   616 ;; This function uses a non-reentrant model
   617 ;;
   618                           
   619     0015                     _myIsr:	
   620                           ;psect for function _myIsr
   621                           
   622     0015                     i1l698:
   623                           
   624                           ;main.c: 18:     if (PIR1bits.TMR1IF && PIE1bits.TMR1IE)
   625     0015  1283               	bcf	3,5	;RP0=0, select bank0
   626     0016  1303               	bcf	3,6	;RP1=0, select bank0
   627     0017  1C0C               	btfss	12,0	;volatile
   628     0018  281A               	goto	u1_21
   629     0019  281B               	goto	u1_20
   630     001A                     u1_21:
   631     001A  283F               	goto	i1l710
   632     001B                     u1_20:
   633     001B                     i1l700:
   634     001B  1683               	bsf	3,5	;RP0=1, select bank1
   635     001C  1303               	bcf	3,6	;RP1=0, select bank1
   636     001D  1C0C               	btfss	12,0	;volatile
   637     001E  2820               	goto	u2_21
   638     001F  2821               	goto	u2_20
   639     0020                     u2_21:
   640     0020  283F               	goto	i1l710
   641     0021                     u2_20:
   642     0021                     i1l702:
   643                           
   644                           ;main.c: 19:     {;main.c: 20:         PIR1bits.TMR1IF = 0;
   645     0021  1283               	bcf	3,5	;RP0=0, select bank0
   646     0022  1303               	bcf	3,6	;RP1=0, select bank0
   647     0023  100C               	bcf	12,0	;volatile
   648     0024                     i1l704:
   649                           
   650                           ;main.c: 21:         PORTBbits.RB2 = !PORTBbits.RB2;
   651     0024  1003               	clrc
   652     0025  1D06               	btfss	6,2	;volatile
   653     0026  1403               	setc
   654     0027  1803               	btfsc	3,0
   655     0028  282A               	goto	u3_21
   656     0029  282E               	goto	u3_20
   657     002A                     u3_21:
   658     002A  1283               	bcf	3,5	;RP0=0, select bank0
   659     002B  1303               	bcf	3,6	;RP1=0, select bank0
   660     002C  1506               	bsf	6,2	;volatile
   661     002D  2831               	goto	u4_24
   662     002E                     u3_20:
   663     002E  1283               	bcf	3,5	;RP0=0, select bank0
   664     002F  1303               	bcf	3,6	;RP1=0, select bank0
   665     0030  1106               	bcf	6,2	;volatile
   666     0031                     u4_24:
   667     0031                     i1l706:
   668                           
   669                           ;main.c: 22:         cont = 0;
   670     0031  01F8               	clrf	_cont
   671     0032  01F9               	clrf	_cont+1
   672     0033                     i1l708:
   673                           
   674                           ;main.c: 23:         TMR1 = 65536 - 50000 + TMR1;
   675     0033  080E               	movf	14,w	;volatile
   676     0034  3EB0               	addlw	176
   677     0035  00F4               	movwf	??_myIsr
   678     0036  080F               	movf	15,w	;volatile
   679     0037  1803               	skipnc
   680     0038  3E01               	addlw	1
   681     0039  3E3C               	addlw	60
   682     003A  00F5               	movwf	??_myIsr+1
   683     003B  0874               	movf	??_myIsr,w
   684     003C  008E               	movwf	14	;volatile
   685     003D  0875               	movf	??_myIsr+1,w
   686     003E  008F               	movwf	15	;volatile
   687     003F                     i1l710:
   688                           
   689                           ;main.c: 26:     if (INTCONbits.TMR0IF && INTCONbits.TMR0IE)
   690     003F  1D0B               	btfss	11,2	;volatile
   691     0040  2842               	goto	u5_21
   692     0041  2843               	goto	u5_20
   693     0042                     u5_21:
   694     0042  287B               	goto	i1l57
   695     0043                     u5_20:
   696     0043                     i1l712:
   697     0043  1E8B               	btfss	11,5	;volatile
   698     0044  2846               	goto	u6_21
   699     0045  2847               	goto	u6_20
   700     0046                     u6_21:
   701     0046  287B               	goto	i1l57
   702     0047                     u6_20:
   703     0047                     i1l714:
   704                           
   705                           ;main.c: 27:     {;main.c: 28:         INTCONbits.TMR0IF = 0;
   706     0047  110B               	bcf	11,2	;volatile
   707     0048                     i1l716:
   708                           
   709                           ;main.c: 29:         PORTBbits.RB1 = !PORTBbits.RB1;
   710     0048  1003               	clrc
   711     0049  1283               	bcf	3,5	;RP0=0, select bank0
   712     004A  1C86               	btfss	6,1	;volatile
   713     004B  1403               	setc
   714     004C  1803               	btfsc	3,0
   715     004D  284F               	goto	u7_21
   716     004E  2853               	goto	u7_20
   717     004F                     u7_21:
   718     004F  1283               	bcf	3,5	;RP0=0, select bank0
   719     0050  1303               	bcf	3,6	;RP1=0, select bank0
   720     0051  1486               	bsf	6,1	;volatile
   721     0052  2856               	goto	u8_24
   722     0053                     u7_20:
   723     0053  1283               	bcf	3,5	;RP0=0, select bank0
   724     0054  1303               	bcf	3,6	;RP1=0, select bank0
   725     0055  1086               	bcf	6,1	;volatile
   726     0056                     u8_24:
   727     0056                     i1l718:
   728                           
   729                           ;main.c: 30:         cont = cont+1;
   730     0056  0878               	movf	_cont,w
   731     0057  3E01               	addlw	1
   732     0058  00F8               	movwf	_cont
   733     0059  0879               	movf	_cont+1,w
   734     005A  1803               	skipnc
   735     005B  3E01               	addlw	1
   736     005C  3E00               	addlw	0
   737     005D  00F9               	movwf	_cont+1
   738     005E                     i1l720:
   739                           
   740                           ;main.c: 33:         if (cont <= duty1)
   741     005E  0879               	movf	_cont+1,w
   742     005F  0273               	subwf	_duty1+1,w
   743     0060  1D03               	skipz
   744     0061  2864               	goto	u9_25
   745     0062  0878               	movf	_cont,w
   746     0063  0272               	subwf	_duty1,w
   747     0064                     u9_25:
   748     0064  1C03               	skipc
   749     0065  2867               	goto	u9_21
   750     0066  2868               	goto	u9_20
   751     0067                     u9_21:
   752     0067  286A               	goto	i1l53
   753     0068                     u9_20:
   754     0068                     i1l722:
   755                           
   756                           ;main.c: 34:             PORTCbits.RC0 = 1;
   757     0068  1407               	bsf	7,0	;volatile
   758     0069  286B               	goto	i1l724
   759     006A                     i1l53:	
   760                           ;main.c: 35:         else
   761                           
   762                           
   763                           ;main.c: 36:             PORTCbits.RC0 = 0;
   764     006A  1007               	bcf	7,0	;volatile
   765     006B                     i1l724:
   766                           
   767                           ;main.c: 39:         if (cont <= duty2)
   768     006B  0879               	movf	_cont+1,w
   769     006C  0271               	subwf	_duty2+1,w
   770     006D  1D03               	skipz
   771     006E  2871               	goto	u10_25
   772     006F  0878               	movf	_cont,w
   773     0070  0270               	subwf	_duty2,w
   774     0071                     u10_25:
   775     0071  1C03               	skipc
   776     0072  2874               	goto	u10_21
   777     0073  2875               	goto	u10_20
   778     0074                     u10_21:
   779     0074  2877               	goto	i1l55
   780     0075                     u10_20:
   781     0075                     i1l726:
   782                           
   783                           ;main.c: 40:             PORTCbits.RC1 = 1;
   784     0075  1487               	bsf	7,1	;volatile
   785     0076  2878               	goto	i1l728
   786     0077                     i1l55:	
   787                           ;main.c: 41:         else
   788                           
   789                           
   790                           ;main.c: 42:             PORTCbits.RC1 = 0;
   791     0077  1087               	bcf	7,1	;volatile
   792     0078                     i1l728:
   793                           
   794                           ;main.c: 45:         TMR0 = 256 - 125 + TMR0;
   795     0078  0801               	movf	1,w	;volatile
   796     0079  3E83               	addlw	131
   797     007A  0081               	movwf	1	;volatile
   798     007B                     i1l57:
   799     007B  0877               	movf	??_myIsr+3,w
   800     007C  008A               	movwf	10
   801     007D  0E76               	swapf	??_myIsr+2,w
   802     007E  0083               	movwf	3
   803     007F  0EFE               	swapf	btemp,f
   804     0080  0E7E               	swapf	btemp,w
   805     0081  0009               	retfie
   806     0082                     __end_of_myIsr:
   807     007E                     btemp	set	126	;btemp
   808     007E                     wtemp0	set	126
   809                           
   810                           	psect	intentry
   811     0004                     __pintentry:	
   812                           ;incstack = 0
   813                           ; Regs used in _myIsr: [wreg+status,2+status,0]
   814                           
   815     0004                     interrupt_function:
   816     007E                     saved_w	set	btemp
   817     0004  00FE               	movwf	btemp
   818     0005  0E03               	swapf	3,w
   819     0006  00F6               	movwf	??_myIsr+2
   820     0007  080A               	movf	10,w
   821     0008  00F7               	movwf	??_myIsr+3
   822     0009  120A  118A  2815   	ljmp	_myIsr
   823                           
   824                           	psect	idloc
   825                           
   826                           ;Config register IDLOC0 @ 0x2000
   827                           ;	unspecified, using default values
   828     2000                     	org	8192
   829     2000  3FFF               	dw	16383
   830                           
   831                           ;Config register IDLOC1 @ 0x2001
   832                           ;	unspecified, using default values
   833     2001                     	org	8193
   834     2001  3FFF               	dw	16383
   835                           
   836                           ;Config register IDLOC2 @ 0x2002
   837                           ;	unspecified, using default values
   838     2002                     	org	8194
   839     2002  3FFF               	dw	16383
   840                           
   841                           ;Config register IDLOC3 @ 0x2003
   842                           ;	unspecified, using default values
   843     2003                     	org	8195
   844     2003  3FFF               	dw	16383
   845                           
   846                           	psect	config
   847                           
   848                           ;Config register CONFIG @ 0x2007
   849                           ;	Oscillator Selection bits
   850                           ;	FOSC = HS, HS oscillator
   851                           ;	Watchdog Timer Enable bit
   852                           ;	WDTE = OFF, WDT disabled
   853                           ;	Power-up Timer Enable bit
   854                           ;	PWRTE = ON, PWRT enabled
   855                           ;	Brown-out Reset Enable bit
   856                           ;	BOREN = ON, BOR enabled
   857                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   858                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
   859                           ;	Data EEPROM Memory Code Protection bit
   860                           ;	CPD = OFF, Data EEPROM code protection off
   861                           ;	Flash Program Memory Write Enable bits
   862                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   863                           ;	In-Circuit Debugger Mode bit
   864                           ;	DEBUG = 0x1, unprogrammed default
   865                           ;	Flash Program Memory Code Protection bit
   866                           ;	CP = OFF, Code protection off
   867     2007                     	org	8199
   868     2007  3FF2               	dw	16370

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4      10
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _myIsr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _myIsr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _myIsr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myIsr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myIsr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                               _init
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _myIsr                                                4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init

 _myIsr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       A      12        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Wed Sep 13 09:13:24 2023

                     l60 011E                       l71 00AF                       l75 00C6  
                     l67 0098                       l79 00DD                      l730 0082  
                    l732 0083                      l750 00B3                      l742 009C  
                    l734 0088                      l680 00FB                      l760 00D0  
                    l752 00B9                      l744 00A2                      l736 0089  
                    l690 010D                      l682 0103                      l762 00D4  
                    l754 00BD                      l746 00A6                      l738 008F  
                    l692 0111                      l684 0105                      l676 00EB  
                    l694 0116                      l686 0107                      l678 00F9  
                    l766 00E1                      l758 00CA                      l696 011A  
                    l688 010B                      u110 008F                      u111 008E  
                    u200 00D4                      u120 0098                      u201 00D3  
                    u121 0097                      u210 00DD                      u130 009C  
                    u211 00DC                      u131 009B                      u220 00E1  
                    u140 00A6                      u221 00E0                      u141 00A5  
                    u150 00AF                      u151 00AE                      u160 00B3  
                    u161 00B2                      u170 00BD                      u171 00BC  
                    u180 00C6                      u181 00C5                      u190 00CA  
                    u191 00C9                     i1l53 006A                     i1l55 0077  
                   i1l57 007B                     _TMR0 0001                     _TMR1 000E  
                   u1_20 001B                     u1_21 001A                     u2_20 0021  
                   u2_21 0020                     u3_20 002E                     u3_21 002A  
                   u4_24 0031                     u5_20 0043                     u5_21 0042  
                   u6_20 0047                     u6_21 0046                     u7_20 0053  
                   u7_21 004F                     u8_24 0056                     u9_20 0068  
                   u9_21 0067                     u9_25 0064                     _cont 0078  
                   _main 0082                     _init 00EB                     btemp 007E  
                   start 000C                    ?_main 0074                    ?_init 0074  
                  _T1CON 0010                    i1l700 001B                    i1l702 0021  
                  i1l710 003F                    i1l720 005E                    i1l712 0043  
                  i1l704 0024                    i1l722 0068                    i1l714 0047  
                  i1l706 0031                    i1l724 006B                    i1l716 0048  
                  i1l708 0033                    i1l726 0075                    i1l718 0056  
                  i1l728 0078                    i1l698 0015                    u10_20 0075  
                  u10_21 0074                    u10_25 0071                    _PORTA 0005  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  _PORTE 0009                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    _TRISE 0089  
                  _duty1 0072                    _duty2 0070                    _myIsr 0015  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 00EB             __end_of_init 011F  
                 ??_main 0078                   ??_init 0078                   ?_myIsr 0074  
                 _INTCON 000B                   saved_w 007E  __end_of__initialization 0011  
         __pcstackCOMMON 0074            __end_of_myIsr 0082                  ??_myIsr 0074  
             __pnvCOMMON 0070               __pmaintext 0082               __pintentry 0004  
                __ptext1 00EB                  __ptext2 0015     end_of_initialization 0011  
              _PORTBbits 0006                _PORTCbits 0007      start_initialization 000F  
            __pbssCOMMON 0078                ___latbits 0002        interrupt_function 0004  
               _PIE1bits 008C                 _PIR1bits 000C               _INTCONbits 000B  
               intlevel1 0000               _OPTION_REG 0081  
