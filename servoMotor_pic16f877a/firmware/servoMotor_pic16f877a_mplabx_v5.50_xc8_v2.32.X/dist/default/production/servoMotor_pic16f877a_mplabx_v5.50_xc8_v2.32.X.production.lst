

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Jan 28 10:40:37 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	intentry,global,class=CODE,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.20
    16                           ; Generated 12/02/2020 GMT
    17                           ; 
    18                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F877A Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  0091                     	;# 
    94  0092                     	;# 
    95  0093                     	;# 
    96  0094                     	;# 
    97  0098                     	;# 
    98  0099                     	;# 
    99  009C                     	;# 
   100  009D                     	;# 
   101  009E                     	;# 
   102  009F                     	;# 
   103  010C                     	;# 
   104  010D                     	;# 
   105  010E                     	;# 
   106  010F                     	;# 
   107  018C                     	;# 
   108  018D                     	;# 
   109  0000                     	;# 
   110  0001                     	;# 
   111  0002                     	;# 
   112  0003                     	;# 
   113  0004                     	;# 
   114  0005                     	;# 
   115  0006                     	;# 
   116  0007                     	;# 
   117  0008                     	;# 
   118  0009                     	;# 
   119  000A                     	;# 
   120  000B                     	;# 
   121  000C                     	;# 
   122  000D                     	;# 
   123  000E                     	;# 
   124  000E                     	;# 
   125  000F                     	;# 
   126  0010                     	;# 
   127  0011                     	;# 
   128  0012                     	;# 
   129  0013                     	;# 
   130  0014                     	;# 
   131  0015                     	;# 
   132  0015                     	;# 
   133  0016                     	;# 
   134  0017                     	;# 
   135  0018                     	;# 
   136  0019                     	;# 
   137  001A                     	;# 
   138  001B                     	;# 
   139  001B                     	;# 
   140  001C                     	;# 
   141  001D                     	;# 
   142  001E                     	;# 
   143  001F                     	;# 
   144  0081                     	;# 
   145  0085                     	;# 
   146  0086                     	;# 
   147  0087                     	;# 
   148  0088                     	;# 
   149  0089                     	;# 
   150  008C                     	;# 
   151  008D                     	;# 
   152  008E                     	;# 
   153  0091                     	;# 
   154  0092                     	;# 
   155  0093                     	;# 
   156  0094                     	;# 
   157  0098                     	;# 
   158  0099                     	;# 
   159  009C                     	;# 
   160  009D                     	;# 
   161  009E                     	;# 
   162  009F                     	;# 
   163  010C                     	;# 
   164  010D                     	;# 
   165  010E                     	;# 
   166  010F                     	;# 
   167  018C                     	;# 
   168  018D                     	;# 
   169                           
   170                           	psect	nvCOMMON
   171  0070                     __pnvCOMMON:
   172  0070                     _duty2:
   173  0070                     	ds	2
   174  0072                     _duty1:
   175  0072                     	ds	2
   176  000E                     _TMR1	set	14
   177  0010                     _T1CON	set	16
   178  000B                     _INTCON	set	11
   179  0008                     _PORTD	set	8
   180  0009                     _PORTE	set	9
   181  0007                     _PORTC	set	7
   182  0006                     _PORTB	set	6
   183  0005                     _PORTA	set	5
   184  0001                     _TMR0	set	1
   185  0007                     _PORTCbits	set	7
   186  000B                     _INTCONbits	set	11
   187  0006                     _PORTBbits	set	6
   188  000C                     _PIR1bits	set	12
   189  0081                     _OPTION_REG	set	129
   190  0089                     _TRISE	set	137
   191  0087                     _TRISC	set	135
   192  0086                     _TRISB	set	134
   193  0085                     _TRISA	set	133
   194  0088                     _TRISD	set	136
   195  008C                     _PIE1bits	set	140
   196                           
   197                           	psect	cinit
   198  000F                     start_initialization:	
   199                           ; #config settings
   200                           
   201  000F                     __initialization:
   202                           
   203                           ; Clear objects allocated to COMMON
   204  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   205  0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   206  0011                     end_of_initialization:	
   207                           ;End of C runtime variable initialization code
   208                           
   209  0011                     __end_of__initialization:
   210  0011  0183               	clrf	3
   211  0012  120A  118A  2882   	ljmp	_main	;jump to C main() function
   212                           
   213                           	psect	bssCOMMON
   214  0078                     __pbssCOMMON:
   215  0078                     _cont:
   216  0078                     	ds	2
   217                           
   218                           	psect	cstackCOMMON
   219  0074                     __pcstackCOMMON:
   220  0074                     ?_myIsr:
   221  0074                     ??_myIsr:	
   222                           ; 1 bytes @ 0x0
   223                           
   224  0074                     ?_init:	
   225                           ; 1 bytes @ 0x0
   226                           
   227  0074                     ?_main:	
   228                           ; 1 bytes @ 0x0
   229                           
   230                           
   231                           ; 1 bytes @ 0x0
   232  0074                     	ds	4
   233  0078                     ??_init:
   234  0078                     ??_main:	
   235                           ; 1 bytes @ 0x4
   236                           
   237                           
   238                           	psect	maintext
   239  0082                     __pmaintext:	
   240                           ; 1 bytes @ 0x4
   241 ;;
   242 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   243 ;;
   244 ;; *************** function _main *****************
   245 ;; Defined at:
   246 ;;		line 118 in file "main.c"
   247 ;; Parameters:    Size  Location     Type
   248 ;;		None
   249 ;; Auto vars:     Size  Location     Type
   250 ;;		None
   251 ;; Return value:  Size  Location     Type
   252 ;;                  1    wreg      void 
   253 ;; Registers used:
   254 ;;		wreg, status,2, status,0, pclath, cstack
   255 ;; Tracked objects:
   256 ;;		On entry : B00/0
   257 ;;		On exit  : 0/0
   258 ;;		Unchanged: 0/0
   259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   260 ;;      Params:         0       0       0       0       0
   261 ;;      Locals:         0       0       0       0       0
   262 ;;      Temps:          0       0       0       0       0
   263 ;;      Totals:         0       0       0       0       0
   264 ;;Total ram usage:        0 bytes
   265 ;; Hardware stack levels required when called: 2
   266 ;; This function calls:
   267 ;;		_init
   268 ;; This function is called by:
   269 ;;		Startup code after reset
   270 ;; This function uses a non-reentrant model
   271 ;;
   272                           
   273                           
   274                           ;psect for function _main
   275  0082                     _main:
   276  0082                     l730:	
   277                           ;incstack = 0
   278                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   279                           
   280                           
   281                           ;main.c: 121:     INTCONbits.GIE = 0;
   282  0082  138B               	bcf	11,7	;volatile
   283  0083                     l732:
   284                           
   285                           ;main.c: 124:     init();
   286  0083  120A  118A  20EB  120A  118A  	fcall	_init
   287  0088                     l734:
   288                           
   289                           ;main.c: 127:     INTCONbits.GIE = 1;
   290  0088  178B               	bsf	11,7	;volatile
   291  0089                     l736:
   292                           
   293                           ;main.c: 131:     {;main.c: 133:         if (!PORTBbits.RB4 && duty1 < 40)
   294  0089  1283               	bcf	3,5	;RP0=0, select bank0
   295  008A  1303               	bcf	3,6	;RP1=0, select bank0
   296  008B  1A06               	btfsc	6,4	;volatile
   297  008C  288E               	goto	u111
   298  008D  288F               	goto	u110
   299  008E                     u111:
   300  008E  28A2               	goto	l744
   301  008F                     u110:
   302  008F                     l738:
   303  008F  3000               	movlw	0
   304  0090  0273               	subwf	_duty1+1,w
   305  0091  3028               	movlw	40
   306  0092  1903               	skipnz
   307  0093  0272               	subwf	_duty1,w
   308  0094  1803               	skipnc
   309  0095  2897               	goto	u121
   310  0096  2898               	goto	u120
   311  0097                     u121:
   312  0097  28A2               	goto	l744
   313  0098                     u120:
   314  0098                     l67:
   315  0098  1E06               	btfss	6,4	;volatile
   316  0099  289B               	goto	u131
   317  009A  289C               	goto	u130
   318  009B                     u131:
   319  009B  2898               	goto	l67
   320  009C                     u130:
   321  009C                     l742:
   322                           
   323                           ;main.c: 136:             duty1++;
   324  009C  3001               	movlw	1
   325  009D  07F2               	addwf	_duty1,f
   326  009E  1803               	skipnc
   327  009F  0AF3               	incf	_duty1+1,f
   328  00A0  3000               	movlw	0
   329  00A1  07F3               	addwf	_duty1+1,f
   330  00A2                     l744:
   331                           
   332                           ;main.c: 138:         if (!PORTBbits.RB5 && duty1 > 20)
   333  00A2  1A86               	btfsc	6,5	;volatile
   334  00A3  28A5               	goto	u141
   335  00A4  28A6               	goto	u140
   336  00A5                     u141:
   337  00A5  28B9               	goto	l752
   338  00A6                     u140:
   339  00A6                     l746:
   340  00A6  3000               	movlw	0
   341  00A7  0273               	subwf	_duty1+1,w
   342  00A8  3015               	movlw	21
   343  00A9  1903               	skipnz
   344  00AA  0272               	subwf	_duty1,w
   345  00AB  1C03               	skipc
   346  00AC  28AE               	goto	u151
   347  00AD  28AF               	goto	u150
   348  00AE                     u151:
   349  00AE  28B9               	goto	l752
   350  00AF                     u150:
   351  00AF                     l71:
   352  00AF  1E86               	btfss	6,5	;volatile
   353  00B0  28B2               	goto	u161
   354  00B1  28B3               	goto	u160
   355  00B2                     u161:
   356  00B2  28AF               	goto	l71
   357  00B3                     u160:
   358  00B3                     l750:
   359                           
   360                           ;main.c: 141:             duty1--;
   361  00B3  3001               	movlw	1
   362  00B4  02F2               	subwf	_duty1,f
   363  00B5  3000               	movlw	0
   364  00B6  1C03               	skipc
   365  00B7  03F3               	decf	_duty1+1,f
   366  00B8  02F3               	subwf	_duty1+1,f
   367  00B9                     l752:
   368                           
   369                           ;main.c: 145:         if (!PORTBbits.RB6 && duty2 < 40)
   370  00B9  1B06               	btfsc	6,6	;volatile
   371  00BA  28BC               	goto	u171
   372  00BB  28BD               	goto	u170
   373  00BC                     u171:
   374  00BC  28D0               	goto	l760
   375  00BD                     u170:
   376  00BD                     l754:
   377  00BD  3000               	movlw	0
   378  00BE  0271               	subwf	_duty2+1,w
   379  00BF  3028               	movlw	40
   380  00C0  1903               	skipnz
   381  00C1  0270               	subwf	_duty2,w
   382  00C2  1803               	skipnc
   383  00C3  28C5               	goto	u181
   384  00C4  28C6               	goto	u180
   385  00C5                     u181:
   386  00C5  28D0               	goto	l760
   387  00C6                     u180:
   388  00C6                     l75:
   389  00C6  1F06               	btfss	6,6	;volatile
   390  00C7  28C9               	goto	u191
   391  00C8  28CA               	goto	u190
   392  00C9                     u191:
   393  00C9  28C6               	goto	l75
   394  00CA                     u190:
   395  00CA                     l758:
   396                           
   397                           ;main.c: 148:             duty2++;
   398  00CA  3001               	movlw	1
   399  00CB  07F0               	addwf	_duty2,f
   400  00CC  1803               	skipnc
   401  00CD  0AF1               	incf	_duty2+1,f
   402  00CE  3000               	movlw	0
   403  00CF  07F1               	addwf	_duty2+1,f
   404  00D0                     l760:
   405                           
   406                           ;main.c: 150:         if (!PORTBbits.RB7 && duty2 > 20)
   407  00D0  1B86               	btfsc	6,7	;volatile
   408  00D1  28D3               	goto	u201
   409  00D2  28D4               	goto	u200
   410  00D3                     u201:
   411  00D3  2889               	goto	l736
   412  00D4                     u200:
   413  00D4                     l762:
   414  00D4  3000               	movlw	0
   415  00D5  0271               	subwf	_duty2+1,w
   416  00D6  3015               	movlw	21
   417  00D7  1903               	skipnz
   418  00D8  0270               	subwf	_duty2,w
   419  00D9  1C03               	skipc
   420  00DA  28DC               	goto	u211
   421  00DB  28DD               	goto	u210
   422  00DC                     u211:
   423  00DC  2889               	goto	l736
   424  00DD                     u210:
   425  00DD                     l79:
   426  00DD  1F86               	btfss	6,7	;volatile
   427  00DE  28E0               	goto	u221
   428  00DF  28E1               	goto	u220
   429  00E0                     u221:
   430  00E0  28DD               	goto	l79
   431  00E1                     u220:
   432  00E1                     l766:
   433                           
   434                           ;main.c: 153:             duty2--;
   435  00E1  3001               	movlw	1
   436  00E2  02F0               	subwf	_duty2,f
   437  00E3  3000               	movlw	0
   438  00E4  1C03               	skipc
   439  00E5  03F1               	decf	_duty2+1,f
   440  00E6  02F1               	subwf	_duty2+1,f
   441  00E7  2889               	goto	l736
   442  00E8  120A  118A  280C   	ljmp	start
   443  00EB                     __end_of_main:
   444                           
   445                           	psect	text1
   446  00EB                     __ptext1:	
   447 ;; *************** function _init *****************
   448 ;; Defined at:
   449 ;;		line 50 in file "main.c"
   450 ;; Parameters:    Size  Location     Type
   451 ;;		None
   452 ;; Auto vars:     Size  Location     Type
   453 ;;		None
   454 ;; Return value:  Size  Location     Type
   455 ;;                  1    wreg      void 
   456 ;; Registers used:
   457 ;;		wreg, status,2
   458 ;; Tracked objects:
   459 ;;		On entry : 0/0
   460 ;;		On exit  : 0/0
   461 ;;		Unchanged: 0/0
   462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   463 ;;      Params:         0       0       0       0       0
   464 ;;      Locals:         0       0       0       0       0
   465 ;;      Temps:          0       0       0       0       0
   466 ;;      Totals:         0       0       0       0       0
   467 ;;Total ram usage:        0 bytes
   468 ;; Hardware stack levels used: 1
   469 ;; Hardware stack levels required when called: 1
   470 ;; This function calls:
   471 ;;		Nothing
   472 ;; This function is called by:
   473 ;;		_main
   474 ;; This function uses a non-reentrant model
   475 ;;
   476                           
   477                           
   478                           ;psect for function _init
   479  00EB                     _init:
   480  00EB                     l676:	
   481                           ;incstack = 0
   482                           ; Regs used in _init: [wreg+status,2]
   483                           
   484                           
   485                           ;main.c: 54:     PORTA = 0b00000000;
   486  00EB  1283               	bcf	3,5	;RP0=0, select bank0
   487  00EC  1303               	bcf	3,6	;RP1=0, select bank0
   488  00ED  0185               	clrf	5	;volatile
   489                           
   490                           ;main.c: 55:     PORTB = 0b00000000;
   491  00EE  0186               	clrf	6	;volatile
   492                           
   493                           ;main.c: 56:     PORTC = 0b00000000;
   494  00EF  0187               	clrf	7	;volatile
   495                           
   496                           ;main.c: 57:     TRISD = 0b00000000;
   497  00F0  1683               	bsf	3,5	;RP0=1, select bank1
   498  00F1  1303               	bcf	3,6	;RP1=0, select bank1
   499  00F2  0188               	clrf	8	;volatile
   500                           
   501                           ;main.c: 58:     PORTE = 0b00000000;
   502  00F3  1283               	bcf	3,5	;RP0=0, select bank0
   503  00F4  1303               	bcf	3,6	;RP1=0, select bank0
   504  00F5  0189               	clrf	9	;volatile
   505                           
   506                           ;main.c: 60:     TRISA = 0b00000000;
   507  00F6  1683               	bsf	3,5	;RP0=1, select bank1
   508  00F7  1303               	bcf	3,6	;RP1=0, select bank1
   509  00F8  0185               	clrf	5	;volatile
   510  00F9                     l678:
   511                           
   512                           ;main.c: 61:     TRISB = 0b11110001;
   513  00F9  30F1               	movlw	241
   514  00FA  0086               	movwf	6	;volatile
   515  00FB                     l680:
   516                           
   517                           ;main.c: 62:     TRISC = 0b10000000;
   518  00FB  3080               	movlw	128
   519  00FC  0087               	movwf	7	;volatile
   520                           
   521                           ;main.c: 63:     PORTD = 0b00000000;
   522  00FD  1283               	bcf	3,5	;RP0=0, select bank0
   523  00FE  1303               	bcf	3,6	;RP1=0, select bank0
   524  00FF  0188               	clrf	8	;volatile
   525                           
   526                           ;main.c: 64:     TRISE = 0b00000000;
   527  0100  1683               	bsf	3,5	;RP0=1, select bank1
   528  0101  1303               	bcf	3,6	;RP1=0, select bank1
   529  0102  0189               	clrf	9	;volatile
   530  0103                     l682:
   531                           
   532                           ;main.c: 68:     OPTION_REG = 0b10000000;
   533  0103  3080               	movlw	128
   534  0104  0081               	movwf	1	;volatile
   535  0105                     l684:
   536                           
   537                           ;main.c: 79:     INTCON = 0b01100000;
   538  0105  3060               	movlw	96
   539  0106  008B               	movwf	11	;volatile
   540  0107                     l686:
   541                           
   542                           ;main.c: 90:     TMR0 = 256 - 125;
   543  0107  3083               	movlw	131
   544  0108  1283               	bcf	3,5	;RP0=0, select bank0
   545  0109  1303               	bcf	3,6	;RP1=0, select bank0
   546  010A  0081               	movwf	1	;volatile
   547  010B                     l688:
   548                           
   549                           ;main.c: 95:     T1CON = 0b00010001;
   550  010B  3011               	movlw	17
   551  010C  0090               	movwf	16	;volatile
   552  010D                     l690:
   553                           
   554                           ;main.c: 106:     TMR1 = 65536 - 50000;
   555  010D  303C               	movlw	60
   556  010E  008F               	movwf	15	;volatile
   557  010F  30B0               	movlw	176
   558  0110  008E               	movwf	14	;volatile
   559  0111                     l692:
   560                           
   561                           ;main.c: 109:     PIE1bits.TMR1IE = 1;
   562  0111  1683               	bsf	3,5	;RP0=1, select bank1
   563  0112  1303               	bcf	3,6	;RP1=0, select bank1
   564  0113  140C               	bsf	12,0	;volatile
   565                           
   566                           ;main.c: 111:     cont = 0;
   567  0114  01F8               	clrf	_cont
   568  0115  01F9               	clrf	_cont+1
   569  0116                     l694:
   570                           
   571                           ;main.c: 112:     duty1 = 20;
   572  0116  3014               	movlw	20
   573  0117  00F2               	movwf	_duty1
   574  0118  3000               	movlw	0
   575  0119  00F3               	movwf	_duty1+1
   576  011A                     l696:
   577                           
   578                           ;main.c: 113:     duty2 = 40;
   579  011A  3028               	movlw	40
   580  011B  00F0               	movwf	_duty2
   581  011C  3000               	movlw	0
   582  011D  00F1               	movwf	_duty2+1
   583  011E                     l60:
   584  011E  0008               	return
   585  011F                     __end_of_init:
   586                           
   587                           	psect	text2
   588  0015                     __ptext2:	
   589 ;; *************** function _myIsr *****************
   590 ;; Defined at:
   591 ;;		line 16 in file "main.c"
   592 ;; Parameters:    Size  Location     Type
   593 ;;		None
   594 ;; Auto vars:     Size  Location     Type
   595 ;;		None
   596 ;; Return value:  Size  Location     Type
   597 ;;                  1    wreg      void 
   598 ;; Registers used:
   599 ;;		wreg, status,2, status,0
   600 ;; Tracked objects:
   601 ;;		On entry : 0/0
   602 ;;		On exit  : 0/0
   603 ;;		Unchanged: 0/0
   604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   605 ;;      Params:         0       0       0       0       0
   606 ;;      Locals:         0       0       0       0       0
   607 ;;      Temps:          4       0       0       0       0
   608 ;;      Totals:         4       0       0       0       0
   609 ;;Total ram usage:        4 bytes
   610 ;; Hardware stack levels used: 1
   611 ;; This function calls:
   612 ;;		Nothing
   613 ;; This function is called by:
   614 ;;		Interrupt level 1
   615 ;; This function uses a non-reentrant model
   616 ;;
   617                           
   618                           
   619                           ;psect for function _myIsr
   620  0015                     _myIsr:
   621  0015                     i1l698:
   622                           
   623                           ;main.c: 18:     if (PIR1bits.TMR1IF && PIE1bits.TMR1IE)
   624  0015  1283               	bcf	3,5	;RP0=0, select bank0
   625  0016  1303               	bcf	3,6	;RP1=0, select bank0
   626  0017  1C0C               	btfss	12,0	;volatile
   627  0018  281A               	goto	u1_21
   628  0019  281B               	goto	u1_20
   629  001A                     u1_21:
   630  001A  283F               	goto	i1l710
   631  001B                     u1_20:
   632  001B                     i1l700:
   633  001B  1683               	bsf	3,5	;RP0=1, select bank1
   634  001C  1303               	bcf	3,6	;RP1=0, select bank1
   635  001D  1C0C               	btfss	12,0	;volatile
   636  001E  2820               	goto	u2_21
   637  001F  2821               	goto	u2_20
   638  0020                     u2_21:
   639  0020  283F               	goto	i1l710
   640  0021                     u2_20:
   641  0021                     i1l702:
   642                           
   643                           ;main.c: 19:     {;main.c: 20:         PIR1bits.TMR1IF = 0;
   644  0021  1283               	bcf	3,5	;RP0=0, select bank0
   645  0022  1303               	bcf	3,6	;RP1=0, select bank0
   646  0023  100C               	bcf	12,0	;volatile
   647  0024                     i1l704:
   648                           
   649                           ;main.c: 21:         PORTBbits.RB2 = !PORTBbits.RB2;
   650  0024  1003               	clrc
   651  0025  1D06               	btfss	6,2	;volatile
   652  0026  1403               	setc
   653  0027  1803               	btfsc	3,0
   654  0028  282A               	goto	u3_21
   655  0029  282E               	goto	u3_20
   656  002A                     u3_21:
   657  002A  1283               	bcf	3,5	;RP0=0, select bank0
   658  002B  1303               	bcf	3,6	;RP1=0, select bank0
   659  002C  1506               	bsf	6,2	;volatile
   660  002D  2831               	goto	u4_24
   661  002E                     u3_20:
   662  002E  1283               	bcf	3,5	;RP0=0, select bank0
   663  002F  1303               	bcf	3,6	;RP1=0, select bank0
   664  0030  1106               	bcf	6,2	;volatile
   665  0031                     u4_24:
   666  0031                     i1l706:
   667                           
   668                           ;main.c: 22:         cont = 0;
   669  0031  01F8               	clrf	_cont
   670  0032  01F9               	clrf	_cont+1
   671  0033                     i1l708:
   672                           
   673                           ;main.c: 23:         TMR1 = 65536 - 50000 + TMR1;
   674  0033  080E               	movf	14,w	;volatile
   675  0034  3EB0               	addlw	176
   676  0035  00F4               	movwf	??_myIsr
   677  0036  080F               	movf	15,w	;volatile
   678  0037  1803               	skipnc
   679  0038  3E01               	addlw	1
   680  0039  3E3C               	addlw	60
   681  003A  00F5               	movwf	??_myIsr+1
   682  003B  0874               	movf	??_myIsr,w
   683  003C  008E               	movwf	14	;volatile
   684  003D  0875               	movf	??_myIsr+1,w
   685  003E  008F               	movwf	15	;volatile
   686  003F                     i1l710:
   687                           
   688                           ;main.c: 26:     if (INTCONbits.TMR0IF && INTCONbits.TMR0IE)
   689  003F  1D0B               	btfss	11,2	;volatile
   690  0040  2842               	goto	u5_21
   691  0041  2843               	goto	u5_20
   692  0042                     u5_21:
   693  0042  287B               	goto	i1l57
   694  0043                     u5_20:
   695  0043                     i1l712:
   696  0043  1E8B               	btfss	11,5	;volatile
   697  0044  2846               	goto	u6_21
   698  0045  2847               	goto	u6_20
   699  0046                     u6_21:
   700  0046  287B               	goto	i1l57
   701  0047                     u6_20:
   702  0047                     i1l714:
   703                           
   704                           ;main.c: 27:     {;main.c: 28:         INTCONbits.TMR0IF = 0;
   705  0047  110B               	bcf	11,2	;volatile
   706  0048                     i1l716:
   707                           
   708                           ;main.c: 29:         PORTBbits.RB1 = !PORTBbits.RB1;
   709  0048  1003               	clrc
   710  0049  1283               	bcf	3,5	;RP0=0, select bank0
   711  004A  1C86               	btfss	6,1	;volatile
   712  004B  1403               	setc
   713  004C  1803               	btfsc	3,0
   714  004D  284F               	goto	u7_21
   715  004E  2853               	goto	u7_20
   716  004F                     u7_21:
   717  004F  1283               	bcf	3,5	;RP0=0, select bank0
   718  0050  1303               	bcf	3,6	;RP1=0, select bank0
   719  0051  1486               	bsf	6,1	;volatile
   720  0052  2856               	goto	u8_24
   721  0053                     u7_20:
   722  0053  1283               	bcf	3,5	;RP0=0, select bank0
   723  0054  1303               	bcf	3,6	;RP1=0, select bank0
   724  0055  1086               	bcf	6,1	;volatile
   725  0056                     u8_24:
   726  0056                     i1l718:
   727                           
   728                           ;main.c: 30:         cont = cont+1;
   729  0056  0878               	movf	_cont,w
   730  0057  3E01               	addlw	1
   731  0058  00F8               	movwf	_cont
   732  0059  0879               	movf	_cont+1,w
   733  005A  1803               	skipnc
   734  005B  3E01               	addlw	1
   735  005C  3E00               	addlw	0
   736  005D  00F9               	movwf	_cont+1
   737  005E                     i1l720:
   738                           
   739                           ;main.c: 33:         if (cont <= duty1)
   740  005E  0879               	movf	_cont+1,w
   741  005F  0273               	subwf	_duty1+1,w
   742  0060  1D03               	skipz
   743  0061  2864               	goto	u9_25
   744  0062  0878               	movf	_cont,w
   745  0063  0272               	subwf	_duty1,w
   746  0064                     u9_25:
   747  0064  1C03               	skipc
   748  0065  2867               	goto	u9_21
   749  0066  2868               	goto	u9_20
   750  0067                     u9_21:
   751  0067  286A               	goto	i1l53
   752  0068                     u9_20:
   753  0068                     i1l722:
   754                           
   755                           ;main.c: 34:             PORTCbits.RC0 = 1;
   756  0068  1407               	bsf	7,0	;volatile
   757  0069  286B               	goto	i1l724
   758  006A                     i1l53:	
   759                           ;main.c: 35:         else
   760                           
   761                           
   762                           ;main.c: 36:             PORTCbits.RC0 = 0;
   763  006A  1007               	bcf	7,0	;volatile
   764  006B                     i1l724:
   765                           
   766                           ;main.c: 39:         if (cont <= duty2)
   767  006B  0879               	movf	_cont+1,w
   768  006C  0271               	subwf	_duty2+1,w
   769  006D  1D03               	skipz
   770  006E  2871               	goto	u10_25
   771  006F  0878               	movf	_cont,w
   772  0070  0270               	subwf	_duty2,w
   773  0071                     u10_25:
   774  0071  1C03               	skipc
   775  0072  2874               	goto	u10_21
   776  0073  2875               	goto	u10_20
   777  0074                     u10_21:
   778  0074  2877               	goto	i1l55
   779  0075                     u10_20:
   780  0075                     i1l726:
   781                           
   782                           ;main.c: 40:             PORTCbits.RC1 = 1;
   783  0075  1487               	bsf	7,1	;volatile
   784  0076  2878               	goto	i1l728
   785  0077                     i1l55:	
   786                           ;main.c: 41:         else
   787                           
   788                           
   789                           ;main.c: 42:             PORTCbits.RC1 = 0;
   790  0077  1087               	bcf	7,1	;volatile
   791  0078                     i1l728:
   792                           
   793                           ;main.c: 45:         TMR0 = 256 - 125 + TMR0;
   794  0078  0801               	movf	1,w	;volatile
   795  0079  3E83               	addlw	131
   796  007A  0081               	movwf	1	;volatile
   797  007B                     i1l57:
   798  007B  0877               	movf	??_myIsr+3,w
   799  007C  008A               	movwf	10
   800  007D  0E76               	swapf	??_myIsr+2,w
   801  007E  0083               	movwf	3
   802  007F  0EFE               	swapf	btemp,f
   803  0080  0E7E               	swapf	btemp,w
   804  0081  0009               	retfie
   805  0082                     __end_of_myIsr:
   806  007E                     btemp	set	126	;btemp
   807  007E                     wtemp0	set	126
   808                           
   809                           	psect	intentry
   810  0004                     __pintentry:	
   811                           ;incstack = 0
   812                           ; Regs used in _myIsr: [wreg+status,2+status,0]
   813                           
   814  0004                     interrupt_function:
   815  007E                     saved_w	set	btemp
   816  0004  00FE               	movwf	btemp
   817  0005  0E03               	swapf	3,w
   818  0006  00F6               	movwf	??_myIsr+2
   819  0007  080A               	movf	10,w
   820  0008  00F7               	movwf	??_myIsr+3
   821  0009  120A  118A  2815   	ljmp	_myIsr
   822                           
   823                           	psect	config
   824                           
   825                           ;Config register CONFIG @ 0x2007
   826                           ;	Oscillator Selection bits
   827                           ;	FOSC = HS, HS oscillator
   828                           ;	Watchdog Timer Enable bit
   829                           ;	WDTE = OFF, WDT disabled
   830                           ;	Power-up Timer Enable bit
   831                           ;	PWRTE = ON, PWRT enabled
   832                           ;	Brown-out Reset Enable bit
   833                           ;	BOREN = ON, BOR enabled
   834                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   835                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
   836                           ;	Data EEPROM Memory Code Protection bit
   837                           ;	CPD = OFF, Data EEPROM code protection off
   838                           ;	Flash Program Memory Write Enable bits
   839                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   840                           ;	In-Circuit Debugger Mode bit
   841                           ;	DEBUG = 0x1, unprogrammed default
   842                           ;	Flash Program Memory Code Protection bit
   843                           ;	CP = OFF, Code protection off
   844  2007                     	org	8199
   845  2007  3FF2               	dw	16370

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4      10
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _myIsr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _myIsr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _myIsr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myIsr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myIsr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                               _init
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _myIsr                                                4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init

 _myIsr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       A      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Jan 28 10:40:37 2022

                     l60 011E                       l71 00AF                       l75 00C6  
                     l67 0098                       l79 00DD                      l730 0082  
                    l732 0083                      l750 00B3                      l742 009C  
                    l734 0088                      l680 00FB                      l760 00D0  
                    l752 00B9                      l744 00A2                      l736 0089  
                    l690 010D                      l682 0103                      l762 00D4  
                    l754 00BD                      l746 00A6                      l738 008F  
                    l692 0111                      l684 0105                      l676 00EB  
                    l694 0116                      l686 0107                      l678 00F9  
                    l766 00E1                      l758 00CA                      l696 011A  
                    l688 010B                      u110 008F                      u111 008E  
                    u200 00D4                      u120 0098                      u201 00D3  
                    u121 0097                      u210 00DD                      u130 009C  
                    u211 00DC                      u131 009B                      u220 00E1  
                    u140 00A6                      u221 00E0                      u141 00A5  
                    u150 00AF                      u151 00AE                      u160 00B3  
                    u161 00B2                      u170 00BD                      u171 00BC  
                    u180 00C6                      u181 00C5                      u190 00CA  
                    u191 00C9                     i1l53 006A                     i1l55 0077  
                   i1l57 007B                     _TMR0 0001                     _TMR1 000E  
                   u1_20 001B                     u1_21 001A                     u2_20 0021  
                   u2_21 0020                     u3_20 002E                     u3_21 002A  
                   u4_24 0031                     u5_20 0043                     u5_21 0042  
                   u6_20 0047                     u6_21 0046                     u7_20 0053  
                   u7_21 004F                     u8_24 0056                     u9_20 0068  
                   u9_21 0067                     u9_25 0064                     _cont 0078  
                   _main 0082                     _init 00EB                     btemp 007E  
                   start 000C                    ?_main 0074                    ?_init 0074  
                  _T1CON 0010                    i1l700 001B                    i1l702 0021  
                  i1l710 003F                    i1l720 005E                    i1l712 0043  
                  i1l704 0024                    i1l722 0068                    i1l714 0047  
                  i1l706 0031                    i1l724 006B                    i1l716 0048  
                  i1l708 0033                    i1l726 0075                    i1l718 0056  
                  i1l728 0078                    i1l698 0015                    u10_20 0075  
                  u10_21 0074                    u10_25 0071                    _PORTA 0005  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  _PORTE 0009                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    _TRISE 0089  
                  _duty1 0072                    _duty2 0070                    _myIsr 0015  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 00EB             __end_of_init 011F  
                 ??_main 0078                   ??_init 0078                   ?_myIsr 0074  
                 _INTCON 000B                   saved_w 007E  __end_of__initialization 0011  
         __pcstackCOMMON 0074            __end_of_myIsr 0082                  ??_myIsr 0074  
             __pnvCOMMON 0070               __pmaintext 0082               __pintentry 0004  
                __ptext1 00EB                  __ptext2 0015     end_of_initialization 0011  
              _PORTBbits 0006                _PORTCbits 0007      start_initialization 000F  
            __pbssCOMMON 0078                ___latbits 0002           __size_of_myIsr 006D  
      interrupt_function 0004                 _PIE1bits 008C                 _PIR1bits 000C  
          __size_of_main 0069            __size_of_init 0034               _INTCONbits 000B  
               intlevel1 0000               _OPTION_REG 0081  
