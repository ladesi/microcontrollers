

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Wed Sep 13 09:32:47 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	intentry,global,class=CODE,delta=2
    10                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13     0000                     
    14                           ; Version 2.20
    15                           ; Generated 12/02/2020 GMT
    16                           ; 
    17                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48     0000                     	;# 
    49     0001                     	;# 
    50     0002                     	;# 
    51     0003                     	;# 
    52     0004                     	;# 
    53     0005                     	;# 
    54     0006                     	;# 
    55     0007                     	;# 
    56     0008                     	;# 
    57     0009                     	;# 
    58     000A                     	;# 
    59     000B                     	;# 
    60     000C                     	;# 
    61     000D                     	;# 
    62     000E                     	;# 
    63     000E                     	;# 
    64     000F                     	;# 
    65     0010                     	;# 
    66     0011                     	;# 
    67     0012                     	;# 
    68     0013                     	;# 
    69     0014                     	;# 
    70     0015                     	;# 
    71     0015                     	;# 
    72     0016                     	;# 
    73     0017                     	;# 
    74     0018                     	;# 
    75     0019                     	;# 
    76     001A                     	;# 
    77     001B                     	;# 
    78     001B                     	;# 
    79     001C                     	;# 
    80     001D                     	;# 
    81     001E                     	;# 
    82     001F                     	;# 
    83     0081                     	;# 
    84     0085                     	;# 
    85     0086                     	;# 
    86     0087                     	;# 
    87     0088                     	;# 
    88     0089                     	;# 
    89     008C                     	;# 
    90     008D                     	;# 
    91     008E                     	;# 
    92     0091                     	;# 
    93     0092                     	;# 
    94     0093                     	;# 
    95     0094                     	;# 
    96     0098                     	;# 
    97     0099                     	;# 
    98     009C                     	;# 
    99     009D                     	;# 
   100     009E                     	;# 
   101     009F                     	;# 
   102     010C                     	;# 
   103     010D                     	;# 
   104     010E                     	;# 
   105     010F                     	;# 
   106     018C                     	;# 
   107     018D                     	;# 
   108     0000                     	;# 
   109     0001                     	;# 
   110     0002                     	;# 
   111     0003                     	;# 
   112     0004                     	;# 
   113     0005                     	;# 
   114     0006                     	;# 
   115     0007                     	;# 
   116     0008                     	;# 
   117     0009                     	;# 
   118     000A                     	;# 
   119     000B                     	;# 
   120     000C                     	;# 
   121     000D                     	;# 
   122     000E                     	;# 
   123     000E                     	;# 
   124     000F                     	;# 
   125     0010                     	;# 
   126     0011                     	;# 
   127     0012                     	;# 
   128     0013                     	;# 
   129     0014                     	;# 
   130     0015                     	;# 
   131     0015                     	;# 
   132     0016                     	;# 
   133     0017                     	;# 
   134     0018                     	;# 
   135     0019                     	;# 
   136     001A                     	;# 
   137     001B                     	;# 
   138     001B                     	;# 
   139     001C                     	;# 
   140     001D                     	;# 
   141     001E                     	;# 
   142     001F                     	;# 
   143     0081                     	;# 
   144     0085                     	;# 
   145     0086                     	;# 
   146     0087                     	;# 
   147     0088                     	;# 
   148     0089                     	;# 
   149     008C                     	;# 
   150     008D                     	;# 
   151     008E                     	;# 
   152     0091                     	;# 
   153     0092                     	;# 
   154     0093                     	;# 
   155     0094                     	;# 
   156     0098                     	;# 
   157     0099                     	;# 
   158     009C                     	;# 
   159     009D                     	;# 
   160     009E                     	;# 
   161     009F                     	;# 
   162     010C                     	;# 
   163     010D                     	;# 
   164     010E                     	;# 
   165     010F                     	;# 
   166     018C                     	;# 
   167     018D                     	;# 
   168     000B                     _INTCON	set	11
   169     0008                     _PORTD	set	8
   170     0009                     _PORTE	set	9
   171     0007                     _PORTC	set	7
   172     0006                     _PORTB	set	6
   173     0005                     _PORTA	set	5
   174     0006                     _PORTBbits	set	6
   175     000B                     _INTCONbits	set	11
   176     0081                     _OPTION_REG	set	129
   177     0089                     _TRISE	set	137
   178     0087                     _TRISC	set	135
   179     0086                     _TRISB	set	134
   180     0085                     _TRISA	set	133
   181     0088                     _TRISD	set	136
   182                           
   183                           	psect	cinit
   184     07FC                     start_initialization:	
   185                           ; #config settings
   186                           
   187     07FC                     __initialization:
   188     07FC                     end_of_initialization:	
   189                           ;End of C runtime variable initialization code
   190                           
   191     07FC                     __end_of__initialization:
   192     07FC  0183               	clrf	3
   193     07FD  120A  118A  2FB6   	ljmp	_main	;jump to C main() function
   194                           
   195                           	psect	cstackCOMMON
   196     0071                     __pcstackCOMMON:
   197     0071                     ?_myIsr:
   198     0071                     ??_myIsr:	
   199                           ; 1 bytes @ 0x0
   200                           
   201     0071                     ?_init:	
   202                           ; 1 bytes @ 0x0
   203                           
   204     0071                     ?_main:	
   205                           ; 1 bytes @ 0x0
   206                           
   207                           
   208                           ; 1 bytes @ 0x0
   209     0071                     	ds	2
   210     0073                     ??_init:
   211     0073                     ??_main:	
   212                           ; 1 bytes @ 0x2
   213                           
   214                           
   215                           	psect	maintext
   216     07B6                     __pmaintext:	
   217                           ; 1 bytes @ 0x2
   218 ;;
   219 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   220 ;;
   221 ;; *************** function _main *****************
   222 ;; Defined at:
   223 ;;		line 70 in file "main.c"
   224 ;; Parameters:    Size  Location     Type
   225 ;;		None
   226 ;; Auto vars:     Size  Location     Type
   227 ;;		None
   228 ;; Return value:  Size  Location     Type
   229 ;;                  1    wreg      void 
   230 ;; Registers used:
   231 ;;		wreg, status,2, status,0, pclath, cstack
   232 ;; Tracked objects:
   233 ;;		On entry : B00/0
   234 ;;		On exit  : 0/0
   235 ;;		Unchanged: 0/0
   236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   237 ;;      Params:         0       0       0       0       0
   238 ;;      Locals:         0       0       0       0       0
   239 ;;      Temps:          0       0       0       0       0
   240 ;;      Totals:         0       0       0       0       0
   241 ;;Total ram usage:        0 bytes
   242 ;; Hardware stack levels required when called: 2
   243 ;; This function calls:
   244 ;;		_init
   245 ;; This function is called by:
   246 ;;		Startup code after reset
   247 ;; This function uses a non-reentrant model
   248 ;;
   249                           
   250     07B6                     _main:	
   251                           ;psect for function _main
   252                           
   253     07B6                     l655:	
   254                           ;incstack = 0
   255                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   256                           
   257                           
   258                           ;main.c: 73:     INTCONbits.GIE = 0;
   259     07B6  138B               	bcf	11,7	;volatile
   260     07B7                     l657:
   261                           
   262                           ;main.c: 76:     init();
   263     07B7  120A  118A  27C1  120A  118A  	fcall	_init
   264     07BC                     l659:
   265                           
   266                           ;main.c: 79:     INTCONbits.GIE = 1;
   267     07BC  178B               	bsf	11,7	;volatile
   268     07BD                     l42:	
   269                           ;main.c: 82:     while(1)
   270                           
   271     07BD                     l43:	
   272                           ;main.c: 83:     {;main.c: 85:     }
   273                           
   274     07BD  2FBD               	goto	l42
   275     07BE  120A  118A  280C   	ljmp	start
   276     07C1                     __end_of_main:
   277                           
   278                           	psect	text1
   279     07C1                     __ptext1:	
   280 ;; *************** function _init *****************
   281 ;; Defined at:
   282 ;;		line 29 in file "main.c"
   283 ;; Parameters:    Size  Location     Type
   284 ;;		None
   285 ;; Auto vars:     Size  Location     Type
   286 ;;		None
   287 ;; Return value:  Size  Location     Type
   288 ;;                  1    wreg      void 
   289 ;; Registers used:
   290 ;;		wreg, status,2
   291 ;; Tracked objects:
   292 ;;		On entry : 0/0
   293 ;;		On exit  : 0/0
   294 ;;		Unchanged: 0/0
   295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   296 ;;      Params:         0       0       0       0       0
   297 ;;      Locals:         0       0       0       0       0
   298 ;;      Temps:          0       0       0       0       0
   299 ;;      Totals:         0       0       0       0       0
   300 ;;Total ram usage:        0 bytes
   301 ;; Hardware stack levels used: 1
   302 ;; Hardware stack levels required when called: 1
   303 ;; This function calls:
   304 ;;		Nothing
   305 ;; This function is called by:
   306 ;;		_main
   307 ;; This function uses a non-reentrant model
   308 ;;
   309                           
   310     07C1                     _init:	
   311                           ;psect for function _init
   312                           
   313     07C1                     l637:	
   314                           ;incstack = 0
   315                           ; Regs used in _init: [wreg+status,2]
   316                           
   317                           
   318                           ;main.c: 32:     PORTA = 0b00000000;
   319     07C1  1283               	bcf	3,5	;RP0=0, select bank0
   320     07C2  1303               	bcf	3,6	;RP1=0, select bank0
   321     07C3  0185               	clrf	5	;volatile
   322                           
   323                           ;main.c: 33:     PORTB = 0b00000000;
   324     07C4  0186               	clrf	6	;volatile
   325                           
   326                           ;main.c: 34:     PORTC = 0b00000000;
   327     07C5  0187               	clrf	7	;volatile
   328                           
   329                           ;main.c: 35:     TRISD = 0b00000000;
   330     07C6  1683               	bsf	3,5	;RP0=1, select bank1
   331     07C7  1303               	bcf	3,6	;RP1=0, select bank1
   332     07C8  0188               	clrf	8	;volatile
   333                           
   334                           ;main.c: 36:     PORTE = 0b00000000;
   335     07C9  1283               	bcf	3,5	;RP0=0, select bank0
   336     07CA  1303               	bcf	3,6	;RP1=0, select bank0
   337     07CB  0189               	clrf	9	;volatile
   338                           
   339                           ;main.c: 38:     TRISA = 0b00000000;
   340     07CC  1683               	bsf	3,5	;RP0=1, select bank1
   341     07CD  1303               	bcf	3,6	;RP1=0, select bank1
   342     07CE  0185               	clrf	5	;volatile
   343     07CF                     l639:
   344                           
   345                           ;main.c: 39:     TRISB = 0b00000001;
   346     07CF  3001               	movlw	1
   347     07D0  0086               	movwf	6	;volatile
   348     07D1                     l641:
   349                           
   350                           ;main.c: 40:     TRISC = 0b00000000;
   351     07D1  0187               	clrf	7	;volatile
   352     07D2                     l643:
   353                           
   354                           ;main.c: 41:     PORTD = 0b00000000;
   355     07D2  1283               	bcf	3,5	;RP0=0, select bank0
   356     07D3  1303               	bcf	3,6	;RP1=0, select bank0
   357     07D4  0188               	clrf	8	;volatile
   358     07D5                     l645:
   359                           
   360                           ;main.c: 42:     TRISE = 0b00000000;
   361     07D5  1683               	bsf	3,5	;RP0=1, select bank1
   362     07D6  1303               	bcf	3,6	;RP1=0, select bank1
   363     07D7  0189               	clrf	9	;volatile
   364                           
   365                           ;main.c: 45:     OPTION_REG = 0b10000011;
   366     07D8  3083               	movlw	131
   367     07D9  0081               	movwf	1	;volatile
   368                           
   369                           ;main.c: 56:     INTCON = 0b00010000;
   370     07DA  3010               	movlw	16
   371     07DB  008B               	movwf	11	;volatile
   372     07DC                     l37:
   373     07DC  0008               	return
   374     07DD                     __end_of_init:
   375                           
   376                           	psect	text2
   377     07DD                     __ptext2:	
   378 ;; *************** function _myIsr *****************
   379 ;; Defined at:
   380 ;;		line 18 in file "main.c"
   381 ;; Parameters:    Size  Location     Type
   382 ;;		None
   383 ;; Auto vars:     Size  Location     Type
   384 ;;		None
   385 ;; Return value:  Size  Location     Type
   386 ;;                  1    wreg      void 
   387 ;; Registers used:
   388 ;;		status,0
   389 ;; Tracked objects:
   390 ;;		On entry : 0/0
   391 ;;		On exit  : 0/0
   392 ;;		Unchanged: 0/0
   393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   394 ;;      Params:         0       0       0       0       0
   395 ;;      Locals:         0       0       0       0       0
   396 ;;      Temps:          2       0       0       0       0
   397 ;;      Totals:         2       0       0       0       0
   398 ;;Total ram usage:        2 bytes
   399 ;; Hardware stack levels used: 1
   400 ;; This function calls:
   401 ;;		Nothing
   402 ;; This function is called by:
   403 ;;		Interrupt level 1
   404 ;; This function uses a non-reentrant model
   405 ;;
   406                           
   407     07DD                     _myIsr:	
   408                           ;psect for function _myIsr
   409                           
   410     07DD                     i1l647:
   411                           
   412                           ;main.c: 21:     if(INTCONbits.INTE && INTCONbits.INTF)
   413     07DD  1E0B               	btfss	11,4	;volatile
   414     07DE  2FE0               	goto	u1_21
   415     07DF  2FE1               	goto	u1_20
   416     07E0                     u1_21:
   417     07E0  2FF5               	goto	i1l34
   418     07E1                     u1_20:
   419     07E1                     i1l649:
   420     07E1  1C8B               	btfss	11,1	;volatile
   421     07E2  2FE4               	goto	u2_21
   422     07E3  2FE5               	goto	u2_20
   423     07E4                     u2_21:
   424     07E4  2FF5               	goto	i1l34
   425     07E5                     u2_20:
   426     07E5                     i1l651:
   427                           
   428                           ;main.c: 22:     {;main.c: 23:         INTCONbits.INTF = 0;
   429     07E5  108B               	bcf	11,1	;volatile
   430     07E6                     i1l653:
   431                           
   432                           ;main.c: 24:         PORTBbits.RB1 = !PORTBbits.RB1;
   433     07E6  1003               	clrc
   434     07E7  1283               	bcf	3,5	;RP0=0, select bank0
   435     07E8  1303               	bcf	3,6	;RP1=0, select bank0
   436     07E9  1C86               	btfss	6,1	;volatile
   437     07EA  1403               	setc
   438     07EB  1803               	btfsc	3,0
   439     07EC  2FEE               	goto	u3_21
   440     07ED  2FF2               	goto	u3_20
   441     07EE                     u3_21:
   442     07EE  1283               	bcf	3,5	;RP0=0, select bank0
   443     07EF  1303               	bcf	3,6	;RP1=0, select bank0
   444     07F0  1486               	bsf	6,1	;volatile
   445     07F1  2FF5               	goto	u4_24
   446     07F2                     u3_20:
   447     07F2  1283               	bcf	3,5	;RP0=0, select bank0
   448     07F3  1303               	bcf	3,6	;RP1=0, select bank0
   449     07F4  1086               	bcf	6,1	;volatile
   450     07F5                     u4_24:
   451     07F5                     i1l34:
   452     07F5  0872               	movf	??_myIsr+1,w
   453     07F6  008A               	movwf	10
   454     07F7  0E71               	swapf	??_myIsr,w
   455     07F8  0083               	movwf	3
   456     07F9  0EFE               	swapf	btemp,f
   457     07FA  0E7E               	swapf	btemp,w
   458     07FB  0009               	retfie
   459     07FC                     __end_of_myIsr:
   460     007E                     btemp	set	126	;btemp
   461     007E                     wtemp0	set	126
   462                           
   463                           	psect	intentry
   464     0004                     __pintentry:	
   465                           ;incstack = 0
   466                           ; Regs used in _myIsr: [status,0]
   467                           
   468     0004                     interrupt_function:
   469     007E                     saved_w	set	btemp
   470     0004  00FE               	movwf	btemp
   471     0005  0E03               	swapf	3,w
   472     0006  00F1               	movwf	??_myIsr
   473     0007  080A               	movf	10,w
   474     0008  00F2               	movwf	??_myIsr+1
   475     0009  120A  118A  2FDD   	ljmp	_myIsr
   476                           
   477                           	psect	idloc
   478                           
   479                           ;Config register IDLOC0 @ 0x2000
   480                           ;	unspecified, using default values
   481     2000                     	org	8192
   482     2000  3FFF               	dw	16383
   483                           
   484                           ;Config register IDLOC1 @ 0x2001
   485                           ;	unspecified, using default values
   486     2001                     	org	8193
   487     2001  3FFF               	dw	16383
   488                           
   489                           ;Config register IDLOC2 @ 0x2002
   490                           ;	unspecified, using default values
   491     2002                     	org	8194
   492     2002  3FFF               	dw	16383
   493                           
   494                           ;Config register IDLOC3 @ 0x2003
   495                           ;	unspecified, using default values
   496     2003                     	org	8195
   497     2003  3FFF               	dw	16383
   498                           
   499                           	psect	config
   500                           
   501                           ;Config register CONFIG @ 0x2007
   502                           ;	Oscillator Selection bits
   503                           ;	FOSC = HS, HS oscillator
   504                           ;	Watchdog Timer Enable bit
   505                           ;	WDTE = OFF, WDT disabled
   506                           ;	Power-up Timer Enable bit
   507                           ;	PWRTE = ON, PWRT enabled
   508                           ;	Brown-out Reset Enable bit
   509                           ;	BOREN = ON, BOR enabled
   510                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   511                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   512                           ;	Data EEPROM Memory Code Protection bit
   513                           ;	CPD = OFF, Data EEPROM code protection off
   514                           ;	Flash Program Memory Write Enable bits
   515                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   516                           ;	In-Circuit Debugger Mode bit
   517                           ;	DEBUG = 0x1, unprogrammed default
   518                           ;	Flash Program Memory Code Protection bit
   519                           ;	CP = OFF, Code protection off
   520     2007                     	org	8199
   521     2007  3F72               	dw	16242

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           13      2       2
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            85      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _myIsr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _myIsr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _myIsr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myIsr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myIsr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                               _init
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _myIsr                                                2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init

 _myIsr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            D      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               D      2       2       1       15.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            55      0       0       8        0.0%
BANK3               55      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Wed Sep 13 09:32:47 2023

                     l42 07BD                       l43 07BD                       l37 07DC  
                    l641 07D1                      l643 07D2                      l645 07D5  
                    l637 07C1                      l639 07CF                      l655 07B6  
                    l657 07B7                      l659 07BC                     i1l34 07F5  
                   u1_20 07E1                     u1_21 07E0                     u2_20 07E5  
                   u2_21 07E4                     u3_20 07F2                     u3_21 07EE  
                   u4_24 07F5                     _main 07B6                     _init 07C1  
                   btemp 007E                     start 000C                    ?_main 0071  
                  ?_init 0071                    i1l651 07E5                    i1l653 07E6  
                  i1l647 07DD                    i1l649 07E1                    _PORTA 0005  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  _PORTE 0009                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    _TRISE 0089  
                  _myIsr 07DD                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 07FC             __end_of_main 07C1  
           __end_of_init 07DD                   ??_main 0073                   ??_init 0073  
                 ?_myIsr 0071                   _INTCON 000B                   saved_w 007E  
__end_of__initialization 07FC           __pcstackCOMMON 0071            __end_of_myIsr 07FC  
                ??_myIsr 0071               __pmaintext 07B6               __pintentry 0004  
                __ptext1 07C1                  __ptext2 07DD     end_of_initialization 07FC  
              _PORTBbits 0006      start_initialization 07FC                ___latbits 0002  
      interrupt_function 0004               _INTCONbits 000B                 intlevel1 0000  
             _OPTION_REG 0081  
