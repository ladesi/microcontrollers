

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Jan 28 18:10:44 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	intentry,global,class=CODE,delta=2
    35                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    36                           	dabs	1,0x7E,2
    37  0000                     
    38                           ; Version 2.20
    39                           ; Generated 12/02/2020 GMT
    40                           ; 
    41                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC16F877A Definitions
    70                           ; 
    71                           ; SFR Addresses
    72  0000                     	;# 
    73  0001                     	;# 
    74  0002                     	;# 
    75  0003                     	;# 
    76  0004                     	;# 
    77  0005                     	;# 
    78  0006                     	;# 
    79  0007                     	;# 
    80  0008                     	;# 
    81  0009                     	;# 
    82  000A                     	;# 
    83  000B                     	;# 
    84  000C                     	;# 
    85  000D                     	;# 
    86  000E                     	;# 
    87  000E                     	;# 
    88  000F                     	;# 
    89  0010                     	;# 
    90  0011                     	;# 
    91  0012                     	;# 
    92  0013                     	;# 
    93  0014                     	;# 
    94  0015                     	;# 
    95  0015                     	;# 
    96  0016                     	;# 
    97  0017                     	;# 
    98  0018                     	;# 
    99  0019                     	;# 
   100  001A                     	;# 
   101  001B                     	;# 
   102  001B                     	;# 
   103  001C                     	;# 
   104  001D                     	;# 
   105  001E                     	;# 
   106  001F                     	;# 
   107  0081                     	;# 
   108  0085                     	;# 
   109  0086                     	;# 
   110  0087                     	;# 
   111  0088                     	;# 
   112  0089                     	;# 
   113  008C                     	;# 
   114  008D                     	;# 
   115  008E                     	;# 
   116  0091                     	;# 
   117  0092                     	;# 
   118  0093                     	;# 
   119  0094                     	;# 
   120  0098                     	;# 
   121  0099                     	;# 
   122  009C                     	;# 
   123  009D                     	;# 
   124  009E                     	;# 
   125  009F                     	;# 
   126  010C                     	;# 
   127  010D                     	;# 
   128  010E                     	;# 
   129  010F                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  0000                     	;# 
   133  0001                     	;# 
   134  0002                     	;# 
   135  0003                     	;# 
   136  0004                     	;# 
   137  0005                     	;# 
   138  0006                     	;# 
   139  0007                     	;# 
   140  0008                     	;# 
   141  0009                     	;# 
   142  000A                     	;# 
   143  000B                     	;# 
   144  000C                     	;# 
   145  000D                     	;# 
   146  000E                     	;# 
   147  000E                     	;# 
   148  000F                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0014                     	;# 
   154  0015                     	;# 
   155  0015                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001B                     	;# 
   162  001B                     	;# 
   163  001C                     	;# 
   164  001D                     	;# 
   165  001E                     	;# 
   166  001F                     	;# 
   167  0081                     	;# 
   168  0085                     	;# 
   169  0086                     	;# 
   170  0087                     	;# 
   171  0088                     	;# 
   172  0089                     	;# 
   173  008C                     	;# 
   174  008D                     	;# 
   175  008E                     	;# 
   176  0091                     	;# 
   177  0092                     	;# 
   178  0093                     	;# 
   179  0094                     	;# 
   180  0098                     	;# 
   181  0099                     	;# 
   182  009C                     	;# 
   183  009D                     	;# 
   184  009E                     	;# 
   185  009F                     	;# 
   186  010C                     	;# 
   187  010D                     	;# 
   188  010E                     	;# 
   189  010F                     	;# 
   190  018C                     	;# 
   191  018D                     	;# 
   192  0000                     	;# 
   193  0001                     	;# 
   194  0002                     	;# 
   195  0003                     	;# 
   196  0004                     	;# 
   197  0005                     	;# 
   198  0006                     	;# 
   199  0007                     	;# 
   200  0008                     	;# 
   201  0009                     	;# 
   202  000A                     	;# 
   203  000B                     	;# 
   204  000C                     	;# 
   205  000D                     	;# 
   206  000E                     	;# 
   207  000E                     	;# 
   208  000F                     	;# 
   209  0010                     	;# 
   210  0011                     	;# 
   211  0012                     	;# 
   212  0013                     	;# 
   213  0014                     	;# 
   214  0015                     	;# 
   215  0015                     	;# 
   216  0016                     	;# 
   217  0017                     	;# 
   218  0018                     	;# 
   219  0019                     	;# 
   220  001A                     	;# 
   221  001B                     	;# 
   222  001B                     	;# 
   223  001C                     	;# 
   224  001D                     	;# 
   225  001E                     	;# 
   226  001F                     	;# 
   227  0081                     	;# 
   228  0085                     	;# 
   229  0086                     	;# 
   230  0087                     	;# 
   231  0088                     	;# 
   232  0089                     	;# 
   233  008C                     	;# 
   234  008D                     	;# 
   235  008E                     	;# 
   236  0091                     	;# 
   237  0092                     	;# 
   238  0093                     	;# 
   239  0094                     	;# 
   240  0098                     	;# 
   241  0099                     	;# 
   242  009C                     	;# 
   243  009D                     	;# 
   244  009E                     	;# 
   245  009F                     	;# 
   246  010C                     	;# 
   247  010D                     	;# 
   248  010E                     	;# 
   249  010F                     	;# 
   250  018C                     	;# 
   251  018D                     	;# 
   252  0015                     _CCPR1	set	21
   253  000E                     _TMR1	set	14
   254  001D                     _CCP2CON	set	29
   255  001B                     _CCPR2L	set	27
   256  001C                     _CCPR2H	set	28
   257  0017                     _CCP1CON	set	23
   258  0015                     _CCPR1L	set	21
   259  0016                     _CCPR1H	set	22
   260  0010                     _T1CON	set	16
   261  000B                     _INTCON	set	11
   262  0008                     _PORTD	set	8
   263  0009                     _PORTE	set	9
   264  0007                     _PORTC	set	7
   265  0006                     _PORTB	set	6
   266  0005                     _PORTA	set	5
   267  000D                     _PIR2bits	set	13
   268  000C                     _PIR1bits	set	12
   269  0006                     _PORTBbits	set	6
   270  000B                     _INTCONbits	set	11
   271  009C                     _CMCON	set	156
   272  0081                     _OPTION_REG	set	129
   273  0089                     _TRISE	set	137
   274  0087                     _TRISC	set	135
   275  0086                     _TRISB	set	134
   276  0085                     _TRISA	set	133
   277  0088                     _TRISD	set	136
   278  008D                     _PIE2bits	set	141
   279  008C                     _PIE1bits	set	140
   280                           
   281                           	psect	strings
   282  03CC                     __pstrings:
   283  03CC                     stringtab:
   284  03CC                     __stringtab:
   285                           
   286                           ;	String table - string pointers are 1 byte each
   287  03CC  1BFF               	btfsc	btemp+1,7
   288  03CD  2BD6               	ljmp	stringcode
   289  03CE  1383               	bcf	3,7
   290  03CF  187F               	btfsc	btemp+1,0
   291  03D0  1783               	bsf	3,7
   292  03D1  0800               	movf	0,w
   293  03D2  0A84               	incf	4,f
   294  03D3  1903               	skipnz
   295  03D4  0AFF               	incf	btemp+1,f
   296  03D5  0008               	return
   297  03D6                     stringcode:
   298  03D6                     stringdir:
   299  03D6  3003               	movlw	high stringdir
   300  03D7  008A               	movwf	10
   301  03D8  0804               	movf	4,w
   302  03D9  0A84               	incf	4,f
   303  03DA  0782               	addwf	2,f
   304  03DB                     __stringbase:
   305  03DB  3400               	retlw	0
   306  03DC                     __end_of__stringtab:
   307  03DC                     STR_1:
   308  03DC  344E               	retlw	78	;'N'
   309  03DD  3455               	retlw	85	;'U'
   310  03DE  344D               	retlw	77	;'M'
   311  03DF  3442               	retlw	66	;'B'
   312  03E0  3445               	retlw	69	;'E'
   313  03E1  3452               	retlw	82	;'R'
   314  03E2  3420               	retlw	32	;' '
   315  03E3  344F               	retlw	79	;'O'
   316  03E4  3446               	retlw	70	;'F'
   317  03E5  3420               	retlw	32	;' '
   318  03E6  3450               	retlw	80	;'P'
   319  03E7  3455               	retlw	85	;'U'
   320  03E8  344C               	retlw	76	;'L'
   321  03E9  3453               	retlw	83	;'S'
   322  03EA  3445               	retlw	69	;'E'
   323  03EB  3453               	retlw	83	;'S'
   324  03EC  3400               	retlw	0
   325                           
   326                           	psect	cinit
   327  000F                     start_initialization:	
   328                           ; #config settings
   329                           
   330  000F                     __initialization:
   331                           
   332                           ; Clear objects allocated to COMMON
   333  000F  01F6               	clrf	__pbssCOMMON& (0+127)
   334  0010  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   335  0011  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   336  0012  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   337                           
   338                           ; Clear objects allocated to BANK0
   339  0013  1383               	bcf	3,7	;select IRP bank0
   340  0014  3039               	movlw	low __pbssBANK0
   341  0015  0084               	movwf	4
   342  0016  304D               	movlw	low (__pbssBANK0+20)
   343  0017  120A  118A  244F  120A  118A  	fcall	clear_ram0
   344  001C                     end_of_initialization:	
   345                           ;End of C runtime variable initialization code
   346                           
   347  001C                     __end_of__initialization:
   348  001C  0183               	clrf	3
   349  001D  120A  118A  2930   	ljmp	_main	;jump to C main() function
   350                           
   351                           	psect	bssCOMMON
   352  0076                     __pbssCOMMON:
   353  0076                     _tmr1_counter1:
   354  0076                     	ds	2
   355  0078                     _var4:
   356  0078                     	ds	1
   357  0079                     _number_of_edges:
   358  0079                     	ds	1
   359                           
   360                           	psect	bssBANK0
   361  0039                     __pbssBANK0:
   362  0039                     _tmr1_counter2:
   363  0039                     	ds	2
   364  003B                     _tm1_overflow_cont:
   365  003B                     	ds	2
   366  003D                     _total_cont:
   367  003D                     	ds	2
   368  003F                     _var7:
   369  003F                     	ds	1
   370  0040                     _var6:
   371  0040                     	ds	1
   372  0041                     _var5:
   373  0041                     	ds	1
   374  0042                     _two_edges_flag:
   375  0042                     	ds	1
   376  0043                     _pulses_char_val:
   377  0043                     	ds	10
   378                           
   379                           	psect	clrtext
   380  044F                     clear_ram0:	
   381                           ;	Called with FSR containing the base address, and
   382                           ;	W with the last address+1
   383                           
   384  044F  0064               	clrwdt	;clear the watchdog before getting into this loop
   385  0450                     clrloop0:
   386  0450  0180               	clrf	0	;clear RAM location pointed to by FSR
   387  0451  0A84               	incf	4,f	;increment pointer
   388  0452  0604               	xorwf	4,w	;XOR with final address
   389  0453  1903               	btfsc	3,2	;have we reached the end yet?
   390  0454  3400               	retlw	0	;all done for this memory range, return
   391  0455  0604               	xorwf	4,w	;XOR again to restore value
   392  0456  2C50               	goto	clrloop0	;do the next byte
   393                           
   394                           	psect	cstackCOMMON
   395  0070                     __pcstackCOMMON:
   396  0070                     ?_lcd_init:
   397  0070                     ?_lcd_clear:	
   398                           ; 1 bytes @ 0x0
   399                           
   400  0070                     ?_myIsr:	
   401                           ; 1 bytes @ 0x0
   402                           
   403  0070                     ??_myIsr:	
   404                           ; 1 bytes @ 0x0
   405                           
   406  0070                     ?_init:	
   407                           ; 1 bytes @ 0x0
   408                           
   409  0070                     ?_main:	
   410                           ; 1 bytes @ 0x0
   411                           
   412  0070                     ?_lcd_delay_1us:	
   413                           ; 1 bytes @ 0x0
   414                           
   415  0070                     ?_lcd_delay_40us:	
   416                           ; 1 bytes @ 0x0
   417                           
   418  0070                     ?_lcd_delay_2ms:	
   419                           ; 1 bytes @ 0x0
   420                           
   421  0070                     ?_lcd_delay_40ms:	
   422                           ; 1 bytes @ 0x0
   423                           
   424  0070                     ?_lcd_en_pulse:	
   425                           ; 1 bytes @ 0x0
   426                           
   427  0070                     ?_lcd_send_nibble:	
   428                           ; 1 bytes @ 0x0
   429                           
   430  0070                     ?_lcd_byte_4bits:	
   431                           ; 1 bytes @ 0x0
   432                           
   433  0070                     ?_lcd_byte_8bits:	
   434                           ; 1 bytes @ 0x0
   435                           
   436  0070                     ?_lcd_cmd:	
   437                           ; 1 bytes @ 0x0
   438                           
   439  0070                     ?_lcd_char:	
   440                           ; 1 bytes @ 0x0
   441                           
   442  0070                     ?_lcd_init_8bits:	
   443                           ; 1 bytes @ 0x0
   444                           
   445  0070                     ?_lcd_init_4bits:	
   446                           ; 1 bytes @ 0x0
   447                           
   448                           
   449                           ; 1 bytes @ 0x0
   450  0070                     	ds	4
   451  0074                     ??_init:
   452  0074                     ??_lcd_delay_1us:	
   453                           ; 1 bytes @ 0x4
   454                           
   455  0074                     ??_lcd_delay_40us:	
   456                           ; 1 bytes @ 0x4
   457                           
   458  0074                     ??_lcd_delay_2ms:	
   459                           ; 1 bytes @ 0x4
   460                           
   461  0074                     ??_lcd_en_pulse:	
   462                           ; 1 bytes @ 0x4
   463                           
   464  0074                     ??_lcd_send_nibble:	
   465                           ; 1 bytes @ 0x4
   466                           
   467  0074                     ??_lcd_byte_8bits:	
   468                           ; 1 bytes @ 0x4
   469                           
   470  0074                     ??___lwdiv:	
   471                           ; 1 bytes @ 0x4
   472                           
   473  0074                     ??___lwmod:	
   474                           ; 1 bytes @ 0x4
   475                           
   476  0074                     lcd_send_nibble@data:	
   477                           ; 1 bytes @ 0x4
   478                           
   479  0074                     lcd_byte_8bits@data:	
   480                           ; 1 bytes @ 0x4
   481                           
   482                           
   483                           ; 1 bytes @ 0x4
   484  0074                     	ds	1
   485  0075                     ??_lcd_cmd:
   486  0075                     ??_lcd_char:	
   487                           ; 1 bytes @ 0x5
   488                           
   489  0075                     lcd_cmd@data:	
   490                           ; 1 bytes @ 0x5
   491                           
   492  0075                     lcd_char@data:	
   493                           ; 1 bytes @ 0x5
   494                           
   495  0075                     ___lwmod@counter:	
   496                           ; 1 bytes @ 0x5
   497                           
   498                           
   499                           ; 1 bytes @ 0x5
   500  0075                     	ds	1
   501  0076                     ??_lcd_init:
   502  0076                     ??_lcd_clear:	
   503                           ; 1 bytes @ 0x6
   504                           
   505  0076                     ??_lcd_init_8bits:	
   506                           ; 1 bytes @ 0x6
   507                           
   508  0076                     ??_lcd_init_4bits:	
   509                           ; 1 bytes @ 0x6
   510                           
   511                           
   512                           	psect	cstackBANK0
   513  0020                     __pcstackBANK0:	
   514                           ; 1 bytes @ 0x6
   515                           
   516  0020                     ??_lcd_delay_40ms:
   517  0020                     ??_lcd_byte_4bits:	
   518                           ; 1 bytes @ 0x0
   519                           
   520  0020                     ?___lwdiv:	
   521                           ; 1 bytes @ 0x0
   522                           
   523  0020                     ?___lwmod:	
   524                           ; 2 bytes @ 0x0
   525                           
   526  0020                     ___lwdiv@divisor:	
   527                           ; 2 bytes @ 0x0
   528                           
   529  0020                     ___lwmod@divisor:	
   530                           ; 2 bytes @ 0x0
   531                           
   532                           
   533                           ; 2 bytes @ 0x0
   534  0020                     	ds	2
   535  0022                     lcd_byte_4bits@data:
   536  0022                     ___lwdiv@dividend:	
   537                           ; 1 bytes @ 0x2
   538                           
   539  0022                     ___lwmod@dividend:	
   540                           ; 2 bytes @ 0x2
   541                           
   542                           
   543                           ; 2 bytes @ 0x2
   544  0022                     	ds	1
   545  0023                     lcd_byte_4bits@nibble:
   546                           
   547                           ; 1 bytes @ 0x3
   548  0023                     	ds	1
   549  0024                     ?_lcd_goto:
   550  0024                     ?_lcd_puts:	
   551                           ; 1 bytes @ 0x4
   552                           
   553  0024                     lcd_goto@col:	
   554                           ; 1 bytes @ 0x4
   555                           
   556  0024                     ___lwdiv@counter:	
   557                           ; 1 bytes @ 0x4
   558                           
   559  0024                     lcd_puts@vector:	
   560                           ; 1 bytes @ 0x4
   561                           
   562                           
   563                           ; 2 bytes @ 0x4
   564  0024                     	ds	1
   565  0025                     ??_lcd_goto:
   566  0025                     ___lwdiv@quotient:	
   567                           ; 1 bytes @ 0x5
   568                           
   569                           
   570                           ; 2 bytes @ 0x5
   571  0025                     	ds	1
   572  0026                     lcd_puts@LENGHT:
   573                           
   574                           ; 1 bytes @ 0x6
   575  0026                     	ds	1
   576  0027                     ??_lcd_puts:
   577  0027                     ?_utoa:	
   578                           ; 1 bytes @ 0x7
   579                           
   580  0027                     lcd_goto@lin:	
   581                           ; 1 bytes @ 0x7
   582                           
   583  0027                     utoa@val:	
   584                           ; 1 bytes @ 0x7
   585                           
   586                           
   587                           ; 2 bytes @ 0x7
   588  0027                     	ds	2
   589  0029                     utoa@base:
   590                           
   591                           ; 2 bytes @ 0x9
   592  0029                     	ds	2
   593  002B                     ??_utoa:
   594  002B                     lcd_puts@x:	
   595                           ; 1 bytes @ 0xB
   596                           
   597                           
   598                           ; 1 bytes @ 0xB
   599  002B                     	ds	1
   600  002C                     lcd_puts@cnt:
   601  002C                     utoa@v:	
   602                           ; 1 bytes @ 0xC
   603                           
   604                           
   605                           ; 2 bytes @ 0xC
   606  002C                     	ds	2
   607  002E                     utoa@c:
   608                           
   609                           ; 1 bytes @ 0xE
   610  002E                     	ds	1
   611  002F                     utoa@buf:
   612                           
   613                           ; 1 bytes @ 0xF
   614  002F                     	ds	1
   615  0030                     ?_itoa:
   616  0030                     itoa@val:	
   617                           ; 1 bytes @ 0x10
   618                           
   619                           
   620                           ; 2 bytes @ 0x10
   621  0030                     	ds	2
   622  0032                     itoa@base:
   623                           
   624                           ; 2 bytes @ 0x12
   625  0032                     	ds	2
   626  0034                     ??_itoa:
   627                           
   628                           ; 1 bytes @ 0x14
   629  0034                     	ds	1
   630  0035                     itoa@buf:
   631                           
   632                           ; 1 bytes @ 0x15
   633  0035                     	ds	1
   634  0036                     ??_main:
   635                           
   636                           ; 1 bytes @ 0x16
   637  0036                     	ds	3
   638                           
   639                           	psect	maintext
   640  0130                     __pmaintext:	
   641 ;;
   642 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   643 ;;
   644 ;; *************** function _main *****************
   645 ;; Defined at:
   646 ;;		line 178 in file "main.c"
   647 ;; Parameters:    Size  Location     Type
   648 ;;		None
   649 ;; Auto vars:     Size  Location     Type
   650 ;;		None
   651 ;; Return value:  Size  Location     Type
   652 ;;                  1    wreg      void 
   653 ;; Registers used:
   654 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   655 ;; Tracked objects:
   656 ;;		On entry : B00/0
   657 ;;		On exit  : 0/0
   658 ;;		Unchanged: 0/0
   659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   660 ;;      Params:         0       0       0       0       0
   661 ;;      Locals:         0       0       0       0       0
   662 ;;      Temps:          0       3       0       0       0
   663 ;;      Totals:         0       3       0       0       0
   664 ;;Total ram usage:        3 bytes
   665 ;; Hardware stack levels required when called: 9
   666 ;; This function calls:
   667 ;;		_init
   668 ;;		_itoa
   669 ;;		_lcd_goto
   670 ;;		_lcd_init
   671 ;;		_lcd_puts
   672 ;; This function is called by:
   673 ;;		Startup code after reset
   674 ;; This function uses a non-reentrant model
   675 ;;
   676                           
   677                           
   678                           ;psect for function _main
   679  0130                     _main:
   680  0130                     l1711:	
   681                           ;incstack = 0
   682 ;; hardware stack exceeded
   683                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   684                           
   685                           
   686                           ;main.c: 181:     INTCONbits.GIE = 0;
   687  0130  138B               	bcf	11,7	;volatile
   688  0131                     l1713:
   689                           
   690                           ;main.c: 184:     init();
   691  0131  120A  118A  2195  120A  118A  	fcall	_init
   692  0136                     l1715:
   693                           
   694                           ;main.c: 187:     INTCONbits.GIE = 1;
   695  0136  178B               	bsf	11,7	;volatile
   696                           
   697                           ;main.c: 190:     lcd_init();
   698  0137  120A  118A  2457  120A  118A  	fcall	_lcd_init
   699  013C                     l1717:
   700                           
   701                           ;main.c: 193:     lcd_goto(1,0);
   702  013C  1283               	bcf	3,5	;RP0=0, select bank0
   703  013D  1303               	bcf	3,6	;RP1=0, select bank0
   704  013E  01A4               	clrf	lcd_goto@col
   705  013F  3001               	movlw	1
   706  0140  120A  118A  22EB  120A  118A  	fcall	_lcd_goto
   707  0145                     l1719:
   708                           
   709                           ;main.c: 194:     lcd_puts("NUMBER OF PULSES",16);
   710  0145  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   711  0146  1283               	bcf	3,5	;RP0=0, select bank0
   712  0147  1303               	bcf	3,6	;RP1=0, select bank0
   713  0148  00A4               	movwf	lcd_puts@vector
   714  0149  3080               	movlw	128
   715  014A  00A5               	movwf	lcd_puts@vector+1
   716  014B  3010               	movlw	16
   717  014C  00B6               	movwf	??_main
   718  014D  0836               	movf	??_main,w
   719  014E  00A6               	movwf	lcd_puts@LENGHT
   720  014F  120A  118A  2326  120A  118A  	fcall	_lcd_puts
   721  0154                     l1721:
   722                           
   723                           ;main.c: 198:     {;main.c: 199:         if (two_edges_flag == 1) {
   724  0154  1283               	bcf	3,5	;RP0=0, select bank0
   725  0155  1303               	bcf	3,6	;RP1=0, select bank0
   726  0156  0342               	decf	_two_edges_flag,w
   727  0157  1D03               	btfss	3,2
   728  0158  295A               	goto	u1071
   729  0159  295B               	goto	u1070
   730  015A                     u1071:
   731  015A  2982               	goto	l1731
   732  015B                     u1070:
   733  015B                     l1723:
   734                           
   735                           ;main.c: 200:             two_edges_flag = 0;
   736  015B  01C2               	clrf	_two_edges_flag
   737  015C                     l1725:
   738                           
   739                           ;main.c: 201:             itoa(pulses_char_val, total_cont, 10);
   740  015C  083E               	movf	_total_cont+1,w	;volatile
   741  015D  00B1               	movwf	itoa@val+1
   742  015E  083D               	movf	_total_cont,w	;volatile
   743  015F  00B0               	movwf	itoa@val
   744  0160  300A               	movlw	10
   745  0161  00B2               	movwf	itoa@base
   746  0162  3000               	movlw	0
   747  0163  00B3               	movwf	itoa@base+1
   748  0164  3043               	movlw	(low (_pulses_char_val| 0))& (0+255)
   749  0165  120A  118A  2383  120A  118A  	fcall	_itoa
   750  016A                     l1727:
   751                           
   752                           ;main.c: 202:             lcd_goto(2,0);
   753  016A  1283               	bcf	3,5	;RP0=0, select bank0
   754  016B  1303               	bcf	3,6	;RP1=0, select bank0
   755  016C  01A4               	clrf	lcd_goto@col
   756  016D  3002               	movlw	2
   757  016E  120A  118A  22EB  120A  118A  	fcall	_lcd_goto
   758  0173                     l1729:
   759                           
   760                           ;main.c: 203:             lcd_puts(pulses_char_val,10);
   761  0173  3043               	movlw	(low (_pulses_char_val| 0))& (0+255)
   762  0174  1283               	bcf	3,5	;RP0=0, select bank0
   763  0175  1303               	bcf	3,6	;RP1=0, select bank0
   764  0176  00A4               	movwf	lcd_puts@vector
   765  0177  3000               	movlw	0
   766  0178  00A5               	movwf	lcd_puts@vector+1
   767  0179  300A               	movlw	10
   768  017A  00B6               	movwf	??_main
   769  017B  0836               	movf	??_main,w
   770  017C  00A6               	movwf	lcd_puts@LENGHT
   771  017D  120A  118A  2326  120A  118A  	fcall	_lcd_puts
   772  0182                     l1731:
   773                           
   774                           ;main.c: 206:         _delay((unsigned long)((500)*(20000000/4000.0)));
   775  0182  300D               	movlw	13
   776  0183  1283               	bcf	3,5	;RP0=0, select bank0
   777  0184  1303               	bcf	3,6	;RP1=0, select bank0
   778  0185  00B8               	movwf	??_main+2
   779  0186  30AF               	movlw	175
   780  0187  00B7               	movwf	??_main+1
   781  0188  30B5               	movlw	181
   782  0189  00B6               	movwf	??_main
   783  018A                     u1087:
   784  018A  0BB6               	decfsz	??_main,f
   785  018B  298A               	goto	u1087
   786  018C  0BB7               	decfsz	??_main+1,f
   787  018D  298A               	goto	u1087
   788  018E  0BB8               	decfsz	??_main+2,f
   789  018F  298A               	goto	u1087
   790  0190  2991               	nop2
   791  0191  2954               	goto	l1721
   792  0192  120A  118A  280C   	ljmp	start
   793  0195                     __end_of_main:
   794                           
   795                           	psect	text1
   796  0326                     __ptext1:	
   797 ;; *************** function _lcd_puts *****************
   798 ;; Defined at:
   799 ;;		line 129 in file "lcd.c"
   800 ;; Parameters:    Size  Location     Type
   801 ;;  vector          2    4[BANK0 ] PTR unsigned char 
   802 ;;		 -> pulses_char_val(10), STR_1(17), 
   803 ;;  LENGHT          1    6[BANK0 ] unsigned char 
   804 ;; Auto vars:     Size  Location     Type
   805 ;;  cnt             1   12[BANK0 ] unsigned char 
   806 ;;  x               1   11[BANK0 ] unsigned char 
   807 ;; Return value:  Size  Location     Type
   808 ;;                  1    wreg      void 
   809 ;; Registers used:
   810 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   811 ;; Tracked objects:
   812 ;;		On entry : 0/0
   813 ;;		On exit  : 0/0
   814 ;;		Unchanged: 0/0
   815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   816 ;;      Params:         0       3       0       0       0
   817 ;;      Locals:         0       2       0       0       0
   818 ;;      Temps:          0       4       0       0       0
   819 ;;      Totals:         0       9       0       0       0
   820 ;;Total ram usage:        9 bytes
   821 ;; Hardware stack levels used: 1
   822 ;; Hardware stack levels required when called: 6
   823 ;; This function calls:
   824 ;;		_lcd_char
   825 ;; This function is called by:
   826 ;;		_main
   827 ;; This function uses a non-reentrant model
   828 ;;
   829                           
   830                           
   831                           ;psect for function _lcd_puts
   832  0326                     _lcd_puts:
   833  0326                     l1685:	
   834                           ;incstack = 0
   835                           ; Regs used in _lcd_puts: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   836                           
   837                           
   838                           ;lcd.c: 129: void lcd_puts(unsigned char *vector, unsigned char LENGHT);lcd.c: 130: {;lc
      +                          d.c: 131:  unsigned char cnt;;lcd.c: 132:  unsigned char x;;lcd.c: 134:  PORTBbits.RB2 =
      +                           1;
   839  0326  1283               	bcf	3,5	;RP0=0, select bank0
   840  0327  1303               	bcf	3,6	;RP1=0, select bank0
   841  0328  1506               	bsf	6,2	;volatile
   842  0329                     l1687:
   843                           
   844                           ;lcd.c: 136:  for (cnt=0; cnt<LENGHT; cnt++)
   845  0329  01AC               	clrf	lcd_puts@cnt
   846  032A  2B51               	goto	l1695
   847  032B                     l1689:
   848                           
   849                           ;lcd.c: 137:  {;lcd.c: 138:         x = *(vector+cnt);
   850  032B  082C               	movf	lcd_puts@cnt,w
   851  032C  0724               	addwf	lcd_puts@vector,w
   852  032D  00A8               	movwf	??_lcd_puts+1
   853  032E  0825               	movf	lcd_puts@vector+1,w
   854  032F  00A7               	movwf	??_lcd_puts
   855  0330  1803               	skipnc
   856  0331  0AA7               	incf	??_lcd_puts,f
   857  0332  1FAC               	btfss	lcd_puts@cnt,7
   858  0333  2B35               	goto	u1040
   859  0334  03A7               	decf	??_lcd_puts,f
   860  0335                     u1040:
   861  0335  1283               	bcf	3,5	;RP0=0, select bank0
   862  0336  1303               	bcf	3,6	;RP1=0, select bank0
   863  0337  0827               	movf	??_lcd_puts,w
   864  0338  00A9               	movwf	??_lcd_puts+2
   865  0339  0829               	movf	??_lcd_puts+2,w
   866  033A  00FF               	movwf	btemp+1
   867  033B  0828               	movf	??_lcd_puts+1,w
   868  033C  0084               	movwf	4
   869  033D  120A  118A  23CC  120A  118A  	fcall	stringtab
   870  0342  00AA               	movwf	??_lcd_puts+3
   871  0343  082A               	movf	??_lcd_puts+3,w
   872  0344  00AB               	movwf	lcd_puts@x
   873  0345                     l1691:
   874                           
   875                           ;lcd.c: 139:         lcd_char(x);
   876  0345  082B               	movf	lcd_puts@x,w
   877  0346  120A  118A  23FE  120A  118A  	fcall	_lcd_char
   878  034B                     l1693:
   879                           
   880                           ;lcd.c: 140:  }
   881  034B  3001               	movlw	1
   882  034C  1283               	bcf	3,5	;RP0=0, select bank0
   883  034D  1303               	bcf	3,6	;RP1=0, select bank0
   884  034E  00A7               	movwf	??_lcd_puts
   885  034F  0827               	movf	??_lcd_puts,w
   886  0350  07AC               	addwf	lcd_puts@cnt,f
   887  0351                     l1695:
   888  0351  0826               	movf	lcd_puts@LENGHT,w
   889  0352  022C               	subwf	lcd_puts@cnt,w
   890  0353  1C03               	skipc
   891  0354  2B56               	goto	u1051
   892  0355  2B57               	goto	u1050
   893  0356                     u1051:
   894  0356  2B2B               	goto	l1689
   895  0357                     u1050:
   896  0357                     l185:
   897  0357  0008               	return
   898  0358                     __end_of_lcd_puts:
   899                           
   900                           	psect	text2
   901  03FE                     __ptext2:	
   902 ;; *************** function _lcd_char *****************
   903 ;; Defined at:
   904 ;;		line 117 in file "lcd.c"
   905 ;; Parameters:    Size  Location     Type
   906 ;;  data            1    wreg     unsigned char 
   907 ;; Auto vars:     Size  Location     Type
   908 ;;  data            1    5[COMMON] unsigned char 
   909 ;; Return value:  Size  Location     Type
   910 ;;                  1    wreg      void 
   911 ;; Registers used:
   912 ;;		wreg, status,2, status,0, pclath, cstack
   913 ;; Tracked objects:
   914 ;;		On entry : 0/0
   915 ;;		On exit  : 0/0
   916 ;;		Unchanged: 0/0
   917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   918 ;;      Params:         0       0       0       0       0
   919 ;;      Locals:         1       0       0       0       0
   920 ;;      Temps:          0       0       0       0       0
   921 ;;      Totals:         1       0       0       0       0
   922 ;;Total ram usage:        1 bytes
   923 ;; Hardware stack levels used: 1
   924 ;; Hardware stack levels required when called: 5
   925 ;; This function calls:
   926 ;;		_lcd_byte_4bits
   927 ;;		_lcd_byte_8bits
   928 ;;		_lcd_delay_40us
   929 ;; This function is called by:
   930 ;;		_lcd_puts
   931 ;; This function uses a non-reentrant model
   932 ;;
   933                           
   934                           
   935                           ;psect for function _lcd_char
   936  03FE                     _lcd_char:
   937                           
   938                           ;incstack = 0
   939                           ; Regs used in _lcd_char: [wreg+status,2+status,0+pclath+cstack]
   940                           ;lcd_char@data stored from wreg
   941  03FE  00F5               	movwf	lcd_char@data
   942  03FF                     l1621:
   943                           
   944                           ;lcd.c: 121:     if (8 == 8)
   945  03FF  1283               	bcf	3,5	;RP0=0, select bank0
   946  0400  1303               	bcf	3,6	;RP1=0, select bank0
   947  0401  1506               	bsf	6,2	;volatile
   948  0402                     l1623:
   949                           
   950                           ;lcd.c: 122:         lcd_byte_8bits(data);
   951  0402  0875               	movf	lcd_char@data,w
   952  0403  120A  118A  243A  120A  118A  	fcall	_lcd_byte_8bits
   953  0408                     l178:
   954                           
   955                           ;lcd.c: 126:     lcd_delay_40us();
   956  0408  120A  118A  245D  120A  118A  	fcall	_lcd_delay_40us
   957  040D                     l179:
   958  040D  0008               	return
   959  040E                     __end_of_lcd_char:
   960                           
   961                           	psect	text3
   962  0457                     __ptext3:	
   963 ;; *************** function _lcd_init *****************
   964 ;; Defined at:
   965 ;;		line 182 in file "lcd.c"
   966 ;; Parameters:    Size  Location     Type
   967 ;;		None
   968 ;; Auto vars:     Size  Location     Type
   969 ;;		None
   970 ;; Return value:  Size  Location     Type
   971 ;;                  1    wreg      void 
   972 ;; Registers used:
   973 ;;		wreg, status,2, status,0, pclath, cstack
   974 ;; Tracked objects:
   975 ;;		On entry : 0/0
   976 ;;		On exit  : 0/0
   977 ;;		Unchanged: 0/0
   978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   979 ;;      Params:         0       0       0       0       0
   980 ;;      Locals:         0       0       0       0       0
   981 ;;      Temps:          0       0       0       0       0
   982 ;;      Totals:         0       0       0       0       0
   983 ;;Total ram usage:        0 bytes
   984 ;; Hardware stack levels used: 1
   985 ;; Hardware stack levels required when called: 8
   986 ;; This function calls:
   987 ;;		_lcd_init_4bits
   988 ;;		_lcd_init_8bits
   989 ;; This function is called by:
   990 ;;		_main
   991 ;; This function uses a non-reentrant model
   992 ;;
   993                           
   994                           
   995                           ;psect for function _lcd_init
   996  0457                     _lcd_init:
   997  0457                     l1661:	
   998                           ;incstack = 0
   999 ;; hardware stack exceeded
  1000                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  1001                           
  1002                           
  1003                           ;lcd.c: 185:         lcd_init_8bits();
  1004  0457  120A  118A  2271  120A  118A  	fcall	_lcd_init_8bits
  1005  045C                     l196:
  1006  045C  0008               	return
  1007  045D                     __end_of_lcd_init:
  1008                           
  1009                           	psect	text4
  1010  0271                     __ptext4:	
  1011 ;; *************** function _lcd_init_8bits *****************
  1012 ;; Defined at:
  1013 ;;		line 143 in file "lcd.c"
  1014 ;; Parameters:    Size  Location     Type
  1015 ;;		None
  1016 ;; Auto vars:     Size  Location     Type
  1017 ;;		None
  1018 ;; Return value:  Size  Location     Type
  1019 ;;                  1    wreg      void 
  1020 ;; Registers used:
  1021 ;;		wreg, status,2, status,0, pclath, cstack
  1022 ;; Tracked objects:
  1023 ;;		On entry : 0/0
  1024 ;;		On exit  : 0/0
  1025 ;;		Unchanged: 0/0
  1026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1027 ;;      Params:         0       0       0       0       0
  1028 ;;      Locals:         0       0       0       0       0
  1029 ;;      Temps:          0       0       0       0       0
  1030 ;;      Totals:         0       0       0       0       0
  1031 ;;Total ram usage:        0 bytes
  1032 ;; Hardware stack levels used: 1
  1033 ;; Hardware stack levels required when called: 7
  1034 ;; This function calls:
  1035 ;;		_lcd_clear
  1036 ;;		_lcd_cmd
  1037 ;;		_lcd_delay_2ms
  1038 ;;		_lcd_delay_40ms
  1039 ;; This function is called by:
  1040 ;;		_lcd_init
  1041 ;; This function uses a non-reentrant model
  1042 ;;
  1043                           
  1044                           
  1045                           ;psect for function _lcd_init_8bits
  1046  0271                     _lcd_init_8bits:
  1047  0271                     l1627:	
  1048                           ;incstack = 0
  1049 ;; hardware stack exceeded
  1050                           ; Regs used in _lcd_init_8bits: [wreg+status,2+status,0+pclath+cstack]
  1051                           
  1052                           
  1053                           ;lcd.c: 146:     lcd_delay_40ms();
  1054  0271  120A  118A  240E  120A  118A  	fcall	_lcd_delay_40ms
  1055                           
  1056                           ;lcd.c: 148:  lcd_cmd(0x30);
  1057  0276  3030               	movlw	48
  1058  0277  120A  118A  241E  120A  118A  	fcall	_lcd_cmd
  1059                           
  1060                           ;lcd.c: 149:     lcd_delay_2ms();
  1061  027C  120A  118A  2445  120A  118A  	fcall	_lcd_delay_2ms
  1062                           
  1063                           ;lcd.c: 150:  lcd_cmd(0x30);
  1064  0281  3030               	movlw	48
  1065  0282  120A  118A  241E  120A  118A  	fcall	_lcd_cmd
  1066                           
  1067                           ;lcd.c: 151:     lcd_delay_2ms();
  1068  0287  120A  118A  2445  120A  118A  	fcall	_lcd_delay_2ms
  1069                           
  1070                           ;lcd.c: 152:  lcd_cmd(0x30);
  1071  028C  3030               	movlw	48
  1072  028D  120A  118A  241E  120A  118A  	fcall	_lcd_cmd
  1073                           
  1074                           ;lcd.c: 153:     lcd_delay_2ms();
  1075  0292  120A  118A  2445  120A  118A  	fcall	_lcd_delay_2ms
  1076                           
  1077                           ;lcd.c: 155:  lcd_cmd(0x38);
  1078  0297  3038               	movlw	56
  1079  0298  120A  118A  241E  120A  118A  	fcall	_lcd_cmd
  1080                           
  1081                           ;lcd.c: 156:  lcd_cmd(0x06);
  1082  029D  3006               	movlw	6
  1083  029E  120A  118A  241E  120A  118A  	fcall	_lcd_cmd
  1084                           
  1085                           ;lcd.c: 157:  lcd_cmd(0x0E);
  1086  02A3  300E               	movlw	14
  1087  02A4  120A  118A  241E  120A  118A  	fcall	_lcd_cmd
  1088                           
  1089                           ;lcd.c: 158:     lcd_clear();
  1090  02A9  120A  118A  242E  120A  118A  	fcall	_lcd_clear
  1091  02AE                     l188:
  1092  02AE  0008               	return
  1093  02AF                     __end_of_lcd_init_8bits:
  1094                           
  1095                           	psect	text5
  1096  01E2                     __ptext5:	
  1097 ;; *************** function _lcd_init_4bits *****************
  1098 ;; Defined at:
  1099 ;;		line 161 in file "lcd.c"
  1100 ;; Parameters:    Size  Location     Type
  1101 ;;		None
  1102 ;; Auto vars:     Size  Location     Type
  1103 ;;		None
  1104 ;; Return value:  Size  Location     Type
  1105 ;;                  1    wreg      void 
  1106 ;; Registers used:
  1107 ;;		wreg, status,2, status,0, pclath, cstack
  1108 ;; Tracked objects:
  1109 ;;		On entry : 0/0
  1110 ;;		On exit  : 0/0
  1111 ;;		Unchanged: 0/0
  1112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1113 ;;      Params:         0       0       0       0       0
  1114 ;;      Locals:         0       0       0       0       0
  1115 ;;      Temps:          0       0       0       0       0
  1116 ;;      Totals:         0       0       0       0       0
  1117 ;;Total ram usage:        0 bytes
  1118 ;; Hardware stack levels used: 1
  1119 ;; Hardware stack levels required when called: 7
  1120 ;; This function calls:
  1121 ;;		_lcd_clear
  1122 ;;		_lcd_cmd
  1123 ;;		_lcd_delay_2ms
  1124 ;;		_lcd_delay_40ms
  1125 ;;		_lcd_send_nibble
  1126 ;; This function is called by:
  1127 ;;		_lcd_init
  1128 ;; This function uses a non-reentrant model
  1129 ;;
  1130                           
  1131                           
  1132                           ;psect for function _lcd_init_4bits
  1133  01E2                     _lcd_init_4bits:
  1134  01E2                     l1629:	
  1135                           ;incstack = 0
  1136 ;; hardware stack exceeded
  1137                           ; Regs used in _lcd_init_4bits: [wreg+status,2+status,0+pclath+cstack]
  1138                           
  1139                           
  1140                           ;lcd.c: 164:     lcd_delay_40ms();
  1141  01E2  120A  118A  240E  120A  118A  	fcall	_lcd_delay_40ms
  1142                           
  1143                           ;lcd.c: 166:     lcd_send_nibble(0x03);
  1144  01E7  3003               	movlw	3
  1145  01E8  120A  118A  2358  120A  118A  	fcall	_lcd_send_nibble
  1146                           
  1147                           ;lcd.c: 167:     lcd_delay_2ms();
  1148  01ED  120A  118A  2445  120A  118A  	fcall	_lcd_delay_2ms
  1149                           
  1150                           ;lcd.c: 168:     lcd_send_nibble(0x03);
  1151  01F2  3003               	movlw	3
  1152  01F3  120A  118A  2358  120A  118A  	fcall	_lcd_send_nibble
  1153                           
  1154                           ;lcd.c: 169:     lcd_delay_2ms();
  1155  01F8  120A  118A  2445  120A  118A  	fcall	_lcd_delay_2ms
  1156                           
  1157                           ;lcd.c: 170:     lcd_send_nibble(0x03);
  1158  01FD  3003               	movlw	3
  1159  01FE  120A  118A  2358  120A  118A  	fcall	_lcd_send_nibble
  1160                           
  1161                           ;lcd.c: 171:     lcd_delay_2ms();
  1162  0203  120A  118A  2445  120A  118A  	fcall	_lcd_delay_2ms
  1163                           
  1164                           ;lcd.c: 173:     lcd_send_nibble(0x02);
  1165  0208  3002               	movlw	2
  1166  0209  120A  118A  2358  120A  118A  	fcall	_lcd_send_nibble
  1167                           
  1168                           ;lcd.c: 174:     lcd_delay_2ms();
  1169  020E  120A  118A  2445  120A  118A  	fcall	_lcd_delay_2ms
  1170                           
  1171                           ;lcd.c: 176:  lcd_cmd(0x28);
  1172  0213  3028               	movlw	40
  1173  0214  120A  118A  241E  120A  118A  	fcall	_lcd_cmd
  1174                           
  1175                           ;lcd.c: 177:  lcd_cmd(0x06);
  1176  0219  3006               	movlw	6
  1177  021A  120A  118A  241E  120A  118A  	fcall	_lcd_cmd
  1178                           
  1179                           ;lcd.c: 178:  lcd_cmd(0x0E);
  1180  021F  300E               	movlw	14
  1181  0220  120A  118A  241E  120A  118A  	fcall	_lcd_cmd
  1182                           
  1183                           ;lcd.c: 179:     lcd_clear();
  1184  0225  120A  118A  242E  120A  118A  	fcall	_lcd_clear
  1185  022A                     l191:
  1186  022A  0008               	return
  1187  022B                     __end_of_lcd_init_4bits:
  1188                           
  1189                           	psect	text6
  1190  040E                     __ptext6:	
  1191 ;; *************** function _lcd_delay_40ms *****************
  1192 ;; Defined at:
  1193 ;;		line 60 in file "lcd.c"
  1194 ;; Parameters:    Size  Location     Type
  1195 ;;		None
  1196 ;; Auto vars:     Size  Location     Type
  1197 ;;		None
  1198 ;; Return value:  Size  Location     Type
  1199 ;;                  1    wreg      void 
  1200 ;; Registers used:
  1201 ;;		wreg
  1202 ;; Tracked objects:
  1203 ;;		On entry : 0/0
  1204 ;;		On exit  : 0/0
  1205 ;;		Unchanged: 0/0
  1206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1207 ;;      Params:         0       0       0       0       0
  1208 ;;      Locals:         0       0       0       0       0
  1209 ;;      Temps:          0       3       0       0       0
  1210 ;;      Totals:         0       3       0       0       0
  1211 ;;Total ram usage:        3 bytes
  1212 ;; Hardware stack levels used: 1
  1213 ;; Hardware stack levels required when called: 1
  1214 ;; This function calls:
  1215 ;;		Nothing
  1216 ;; This function is called by:
  1217 ;;		_lcd_init_8bits
  1218 ;;		_lcd_init_4bits
  1219 ;; This function uses a non-reentrant model
  1220 ;;
  1221                           
  1222                           
  1223                           ;psect for function _lcd_delay_40ms
  1224  040E                     _lcd_delay_40ms:
  1225  040E                     l1569:	
  1226                           ;incstack = 0
  1227                           ; Regs used in _lcd_delay_40ms: [wreg]
  1228                           
  1229  040E  3002               	movlw	2
  1230  040F  1283               	bcf	3,5	;RP0=0, select bank0
  1231  0410  1303               	bcf	3,6	;RP1=0, select bank0
  1232  0411  00A2               	movwf	??_lcd_delay_40ms+2
  1233  0412  3004               	movlw	4
  1234  0413  00A1               	movwf	??_lcd_delay_40ms+1
  1235  0414  30B9               	movlw	185
  1236  0415  00A0               	movwf	??_lcd_delay_40ms
  1237  0416                     u1097:
  1238  0416  0BA0               	decfsz	??_lcd_delay_40ms,f
  1239  0417  2C16               	goto	u1097
  1240  0418  0BA1               	decfsz	??_lcd_delay_40ms+1,f
  1241  0419  2C16               	goto	u1097
  1242  041A  0BA2               	decfsz	??_lcd_delay_40ms+2,f
  1243  041B  2C16               	goto	u1097
  1244  041C  2C1D               	nop2
  1245  041D                     l149:
  1246  041D  0008               	return
  1247  041E                     __end_of_lcd_delay_40ms:
  1248                           
  1249                           	psect	text7
  1250  042E                     __ptext7:	
  1251 ;; *************** function _lcd_clear *****************
  1252 ;; Defined at:
  1253 ;;		line 190 in file "lcd.c"
  1254 ;; Parameters:    Size  Location     Type
  1255 ;;		None
  1256 ;; Auto vars:     Size  Location     Type
  1257 ;;		None
  1258 ;; Return value:  Size  Location     Type
  1259 ;;                  1    wreg      void 
  1260 ;; Registers used:
  1261 ;;		wreg, status,2, status,0, pclath, cstack
  1262 ;; Tracked objects:
  1263 ;;		On entry : 0/0
  1264 ;;		On exit  : 0/0
  1265 ;;		Unchanged: 0/0
  1266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1267 ;;      Params:         0       0       0       0       0
  1268 ;;      Locals:         0       0       0       0       0
  1269 ;;      Temps:          0       0       0       0       0
  1270 ;;      Totals:         0       0       0       0       0
  1271 ;;Total ram usage:        0 bytes
  1272 ;; Hardware stack levels used: 1
  1273 ;; Hardware stack levels required when called: 6
  1274 ;; This function calls:
  1275 ;;		_lcd_cmd
  1276 ;;		_lcd_delay_2ms
  1277 ;; This function is called by:
  1278 ;;		_lcd_init_8bits
  1279 ;;		_lcd_init_4bits
  1280 ;;		_lcd_shutdown
  1281 ;; This function uses a non-reentrant model
  1282 ;;
  1283                           
  1284                           
  1285                           ;psect for function _lcd_clear
  1286  042E                     _lcd_clear:
  1287  042E                     l1571:	
  1288                           ;incstack = 0
  1289 ;; hardware stack exceeded
  1290                           ; Regs used in _lcd_clear: [wreg+status,2+status,0+pclath+cstack]
  1291                           
  1292                           
  1293                           ;lcd.c: 192:     lcd_cmd(0x01);
  1294  042E  3001               	movlw	1
  1295  042F  120A  118A  241E  120A  118A  	fcall	_lcd_cmd
  1296                           
  1297                           ;lcd.c: 193:     lcd_delay_2ms();
  1298  0434  120A  118A  2445  120A  118A  	fcall	_lcd_delay_2ms
  1299  0439                     l199:
  1300  0439  0008               	return
  1301  043A                     __end_of_lcd_clear:
  1302                           
  1303                           	psect	text8
  1304  0445                     __ptext8:	
  1305 ;; *************** function _lcd_delay_2ms *****************
  1306 ;; Defined at:
  1307 ;;		line 59 in file "lcd.c"
  1308 ;; Parameters:    Size  Location     Type
  1309 ;;		None
  1310 ;; Auto vars:     Size  Location     Type
  1311 ;;		None
  1312 ;; Return value:  Size  Location     Type
  1313 ;;                  1    wreg      void 
  1314 ;; Registers used:
  1315 ;;		wreg
  1316 ;; Tracked objects:
  1317 ;;		On entry : 0/0
  1318 ;;		On exit  : 0/0
  1319 ;;		Unchanged: 0/0
  1320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1321 ;;      Params:         0       0       0       0       0
  1322 ;;      Locals:         0       0       0       0       0
  1323 ;;      Temps:          2       0       0       0       0
  1324 ;;      Totals:         2       0       0       0       0
  1325 ;;Total ram usage:        2 bytes
  1326 ;; Hardware stack levels used: 1
  1327 ;; Hardware stack levels required when called: 1
  1328 ;; This function calls:
  1329 ;;		Nothing
  1330 ;; This function is called by:
  1331 ;;		_lcd_init_8bits
  1332 ;;		_lcd_init_4bits
  1333 ;;		_lcd_clear
  1334 ;; This function uses a non-reentrant model
  1335 ;;
  1336                           
  1337                           
  1338                           ;psect for function _lcd_delay_2ms
  1339  0445                     _lcd_delay_2ms:
  1340  0445                     l1209:	
  1341                           ;incstack = 0
  1342                           ; Regs used in _lcd_delay_2ms: [wreg]
  1343                           
  1344  0445  300D               	movlw	13
  1345  0446  00F5               	movwf	??_lcd_delay_2ms+1
  1346  0447  30FB               	movlw	251
  1347  0448  00F4               	movwf	??_lcd_delay_2ms
  1348  0449                     u1107:
  1349  0449  0BF4               	decfsz	??_lcd_delay_2ms,f
  1350  044A  2C49               	goto	u1107
  1351  044B  0BF5               	decfsz	??_lcd_delay_2ms+1,f
  1352  044C  2C49               	goto	u1107
  1353  044D  2C4E               	nop2
  1354  044E                     l146:
  1355  044E  0008               	return
  1356  044F                     __end_of_lcd_delay_2ms:
  1357                           
  1358                           	psect	text9
  1359  02EB                     __ptext9:	
  1360 ;; *************** function _lcd_goto *****************
  1361 ;; Defined at:
  1362 ;;		line 202 in file "lcd.c"
  1363 ;; Parameters:    Size  Location     Type
  1364 ;;  lin             1    wreg     unsigned char 
  1365 ;;  col             1    4[BANK0 ] unsigned char 
  1366 ;; Auto vars:     Size  Location     Type
  1367 ;;  lin             1    7[BANK0 ] unsigned char 
  1368 ;; Return value:  Size  Location     Type
  1369 ;;                  1    wreg      void 
  1370 ;; Registers used:
  1371 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1372 ;; Tracked objects:
  1373 ;;		On entry : 0/0
  1374 ;;		On exit  : 0/0
  1375 ;;		Unchanged: 0/0
  1376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1377 ;;      Params:         0       1       0       0       0
  1378 ;;      Locals:         0       1       0       0       0
  1379 ;;      Temps:          0       2       0       0       0
  1380 ;;      Totals:         0       4       0       0       0
  1381 ;;Total ram usage:        4 bytes
  1382 ;; Hardware stack levels used: 1
  1383 ;; Hardware stack levels required when called: 6
  1384 ;; This function calls:
  1385 ;;		_lcd_cmd
  1386 ;; This function is called by:
  1387 ;;		_main
  1388 ;; This function uses a non-reentrant model
  1389 ;;
  1390                           
  1391                           
  1392                           ;psect for function _lcd_goto
  1393  02EB                     _lcd_goto:
  1394                           
  1395                           ;incstack = 0
  1396                           ; Regs used in _lcd_goto: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1397                           ;lcd_goto@lin stored from wreg
  1398  02EB  1283               	bcf	3,5	;RP0=0, select bank0
  1399  02EC  1303               	bcf	3,6	;RP1=0, select bank0
  1400  02ED  00A7               	movwf	lcd_goto@lin
  1401  02EE                     l1665:
  1402                           
  1403                           ;lcd.c: 202: void lcd_goto(unsigned char lin, unsigned char col);lcd.c: 203: {;lcd.c: 20
      +                          4:     switch(lin)
  1404  02EE  2B0F               	goto	l1677
  1405  02EF                     l1667:
  1406                           
  1407                           ;lcd.c: 207:         {;lcd.c: 208:             lcd_cmd(0x80+col);
  1408  02EF  0824               	movf	lcd_goto@col,w
  1409  02F0  3E80               	addlw	128
  1410  02F1  120A  118A  241E  120A  118A  	fcall	_lcd_cmd
  1411                           
  1412                           ;lcd.c: 209:             break;
  1413  02F6  2B25               	goto	l211
  1414  02F7                     l1669:
  1415                           
  1416                           ;lcd.c: 212:         {;lcd.c: 213:             lcd_cmd(0xc0+col);
  1417  02F7  0824               	movf	lcd_goto@col,w
  1418  02F8  3EC0               	addlw	192
  1419  02F9  120A  118A  241E  120A  118A  	fcall	_lcd_cmd
  1420                           
  1421                           ;lcd.c: 214:             break;
  1422  02FE  2B25               	goto	l211
  1423  02FF                     l1671:
  1424                           
  1425                           ;lcd.c: 217:         {;lcd.c: 218:             lcd_cmd(0x90+col);
  1426  02FF  0824               	movf	lcd_goto@col,w
  1427  0300  3E90               	addlw	144
  1428  0301  120A  118A  241E  120A  118A  	fcall	_lcd_cmd
  1429                           
  1430                           ;lcd.c: 219:             break;
  1431  0306  2B25               	goto	l211
  1432  0307                     l1673:
  1433                           
  1434                           ;lcd.c: 222:         {;lcd.c: 223:             lcd_cmd(0xd0+col);
  1435  0307  0824               	movf	lcd_goto@col,w
  1436  0308  3ED0               	addlw	208
  1437  0309  120A  118A  241E  120A  118A  	fcall	_lcd_cmd
  1438                           
  1439                           ;lcd.c: 224:             break;
  1440  030E  2B25               	goto	l211
  1441  030F                     l1677:
  1442  030F  0827               	movf	lcd_goto@lin,w
  1443  0310  00A5               	movwf	??_lcd_goto
  1444  0311  01A6               	clrf	??_lcd_goto+1
  1445                           
  1446                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1447                           ; Switch size 1, requested type "simple"
  1448                           ; Number of cases is 1, Range of values is 0 to 0
  1449                           ; switch strategies available:
  1450                           ; Name         Instructions Cycles
  1451                           ; simple_byte            4     3 (average)
  1452                           ; direct_byte           11     8 (fixed)
  1453                           ; jumptable            260     6 (fixed)
  1454                           ;	Chosen strategy is simple_byte
  1455  0312  0826               	movf	??_lcd_goto+1,w
  1456  0313  3A00               	xorlw	0	; case 0
  1457  0314  1903               	skipnz
  1458  0315  2B17               	goto	l1765
  1459  0316  2B25               	goto	l211
  1460  0317                     l1765:
  1461                           
  1462                           ; Switch size 1, requested type "simple"
  1463                           ; Number of cases is 4, Range of values is 1 to 4
  1464                           ; switch strategies available:
  1465                           ; Name         Instructions Cycles
  1466                           ; simple_byte           13     7 (average)
  1467                           ; direct_byte           23    11 (fixed)
  1468                           ; jumptable            263     9 (fixed)
  1469                           ;	Chosen strategy is simple_byte
  1470  0317  0825               	movf	??_lcd_goto,w
  1471  0318  3A01               	xorlw	1	; case 1
  1472  0319  1903               	skipnz
  1473  031A  2AEF               	goto	l1667
  1474  031B  3A03               	xorlw	3	; case 2
  1475  031C  1903               	skipnz
  1476  031D  2AF7               	goto	l1669
  1477  031E  3A01               	xorlw	1	; case 3
  1478  031F  1903               	skipnz
  1479  0320  2AFF               	goto	l1671
  1480  0321  3A07               	xorlw	7	; case 4
  1481  0322  1903               	skipnz
  1482  0323  2B07               	goto	l1673
  1483  0324  2B25               	goto	l211
  1484  0325                     l211:
  1485  0325  0008               	return
  1486  0326                     __end_of_lcd_goto:
  1487                           
  1488                           	psect	text10
  1489  041E                     __ptext10:	
  1490 ;; *************** function _lcd_cmd *****************
  1491 ;; Defined at:
  1492 ;;		line 105 in file "lcd.c"
  1493 ;; Parameters:    Size  Location     Type
  1494 ;;  data            1    wreg     unsigned char 
  1495 ;; Auto vars:     Size  Location     Type
  1496 ;;  data            1    5[COMMON] unsigned char 
  1497 ;; Return value:  Size  Location     Type
  1498 ;;                  1    wreg      void 
  1499 ;; Registers used:
  1500 ;;		wreg, status,2, status,0, pclath, cstack
  1501 ;; Tracked objects:
  1502 ;;		On entry : 0/0
  1503 ;;		On exit  : 0/0
  1504 ;;		Unchanged: 0/0
  1505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1506 ;;      Params:         0       0       0       0       0
  1507 ;;      Locals:         1       0       0       0       0
  1508 ;;      Temps:          0       0       0       0       0
  1509 ;;      Totals:         1       0       0       0       0
  1510 ;;Total ram usage:        1 bytes
  1511 ;; Hardware stack levels used: 1
  1512 ;; Hardware stack levels required when called: 5
  1513 ;; This function calls:
  1514 ;;		_lcd_byte_4bits
  1515 ;;		_lcd_byte_8bits
  1516 ;;		_lcd_delay_40us
  1517 ;; This function is called by:
  1518 ;;		_lcd_init_8bits
  1519 ;;		_lcd_init_4bits
  1520 ;;		_lcd_clear
  1521 ;;		_lcd_goto
  1522 ;;		_lcd_shutdown
  1523 ;; This function uses a non-reentrant model
  1524 ;;
  1525                           
  1526                           
  1527                           ;psect for function _lcd_cmd
  1528  041E                     _lcd_cmd:
  1529                           
  1530                           ;incstack = 0
  1531                           ; Regs used in _lcd_cmd: [wreg+status,2+status,0+pclath+cstack]
  1532                           ;lcd_cmd@data stored from wreg
  1533  041E  00F5               	movwf	lcd_cmd@data
  1534  041F                     l1563:
  1535                           
  1536                           ;lcd.c: 109:     if (8 == 8)
  1537  041F  1283               	bcf	3,5	;RP0=0, select bank0
  1538  0420  1303               	bcf	3,6	;RP1=0, select bank0
  1539  0421  1106               	bcf	6,2	;volatile
  1540  0422                     l1565:
  1541                           
  1542                           ;lcd.c: 110:         lcd_byte_8bits(data);
  1543  0422  0875               	movf	lcd_cmd@data,w
  1544  0423  120A  118A  243A  120A  118A  	fcall	_lcd_byte_8bits
  1545  0428                     l173:
  1546                           
  1547                           ;lcd.c: 114:     lcd_delay_40us();
  1548  0428  120A  118A  245D  120A  118A  	fcall	_lcd_delay_40us
  1549  042D                     l174:
  1550  042D  0008               	return
  1551  042E                     __end_of_lcd_cmd:
  1552                           
  1553                           	psect	text11
  1554  045D                     __ptext11:	
  1555 ;; *************** function _lcd_delay_40us *****************
  1556 ;; Defined at:
  1557 ;;		line 58 in file "lcd.c"
  1558 ;; Parameters:    Size  Location     Type
  1559 ;;		None
  1560 ;; Auto vars:     Size  Location     Type
  1561 ;;		None
  1562 ;; Return value:  Size  Location     Type
  1563 ;;                  1    wreg      void 
  1564 ;; Registers used:
  1565 ;;		wreg
  1566 ;; Tracked objects:
  1567 ;;		On entry : 0/0
  1568 ;;		On exit  : 0/0
  1569 ;;		Unchanged: 0/0
  1570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1571 ;;      Params:         0       0       0       0       0
  1572 ;;      Locals:         0       0       0       0       0
  1573 ;;      Temps:          1       0       0       0       0
  1574 ;;      Totals:         1       0       0       0       0
  1575 ;;Total ram usage:        1 bytes
  1576 ;; Hardware stack levels used: 1
  1577 ;; Hardware stack levels required when called: 1
  1578 ;; This function calls:
  1579 ;;		Nothing
  1580 ;; This function is called by:
  1581 ;;		_lcd_cmd
  1582 ;;		_lcd_char
  1583 ;; This function uses a non-reentrant model
  1584 ;;
  1585                           
  1586                           
  1587                           ;psect for function _lcd_delay_40us
  1588  045D                     _lcd_delay_40us:
  1589  045D                     l1195:	
  1590                           ;incstack = 0
  1591                           ; Regs used in _lcd_delay_40us: [wreg]
  1592                           
  1593  045D  3042               	movlw	66
  1594  045E  00F4               	movwf	??_lcd_delay_40us
  1595  045F                     u1117:
  1596  045F  0BF4               	decfsz	??_lcd_delay_40us,f
  1597  0460  2C5F               	goto	u1117
  1598  0461  0000               	nop
  1599  0462                     l143:
  1600  0462  0008               	return
  1601  0463                     __end_of_lcd_delay_40us:
  1602                           
  1603                           	psect	text12
  1604  043A                     __ptext12:	
  1605 ;; *************** function _lcd_byte_8bits *****************
  1606 ;; Defined at:
  1607 ;;		line 99 in file "lcd.c"
  1608 ;; Parameters:    Size  Location     Type
  1609 ;;  data            1    wreg     unsigned char 
  1610 ;; Auto vars:     Size  Location     Type
  1611 ;;  data            1    4[COMMON] unsigned char 
  1612 ;; Return value:  Size  Location     Type
  1613 ;;                  1    wreg      void 
  1614 ;; Registers used:
  1615 ;;		wreg, status,2, status,0, pclath, cstack
  1616 ;; Tracked objects:
  1617 ;;		On entry : 0/0
  1618 ;;		On exit  : 0/0
  1619 ;;		Unchanged: 0/0
  1620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1621 ;;      Params:         0       0       0       0       0
  1622 ;;      Locals:         1       0       0       0       0
  1623 ;;      Temps:          0       0       0       0       0
  1624 ;;      Totals:         1       0       0       0       0
  1625 ;;Total ram usage:        1 bytes
  1626 ;; Hardware stack levels used: 1
  1627 ;; Hardware stack levels required when called: 3
  1628 ;; This function calls:
  1629 ;;		_lcd_en_pulse
  1630 ;; This function is called by:
  1631 ;;		_lcd_cmd
  1632 ;;		_lcd_char
  1633 ;; This function uses a non-reentrant model
  1634 ;;
  1635                           
  1636                           
  1637                           ;psect for function _lcd_byte_8bits
  1638  043A                     _lcd_byte_8bits:
  1639                           
  1640                           ;incstack = 0
  1641                           ; Regs used in _lcd_byte_8bits: [wreg+status,2+status,0+pclath+cstack]
  1642                           ;lcd_byte_8bits@data stored from wreg
  1643  043A  00F4               	movwf	lcd_byte_8bits@data
  1644  043B                     l1559:
  1645                           
  1646                           ;lcd.c: 99: void lcd_byte_8bits(unsigned char data);lcd.c: 100: {;lcd.c: 101:  PORTD = d
      +                          ata;
  1647  043B  0874               	movf	lcd_byte_8bits@data,w
  1648  043C  1283               	bcf	3,5	;RP0=0, select bank0
  1649  043D  1303               	bcf	3,6	;RP1=0, select bank0
  1650  043E  0088               	movwf	8	;volatile
  1651  043F                     l1561:
  1652                           
  1653                           ;lcd.c: 102:     lcd_en_pulse();
  1654  043F  120A  118A  23ED  120A  118A  	fcall	_lcd_en_pulse
  1655  0444                     l169:
  1656  0444  0008               	return
  1657  0445                     __end_of_lcd_byte_8bits:
  1658                           
  1659                           	psect	text13
  1660  03A9                     __ptext13:	
  1661 ;; *************** function _lcd_byte_4bits *****************
  1662 ;; Defined at:
  1663 ;;		line 86 in file "lcd.c"
  1664 ;; Parameters:    Size  Location     Type
  1665 ;;  data            1    wreg     unsigned char 
  1666 ;; Auto vars:     Size  Location     Type
  1667 ;;  data            1    2[BANK0 ] unsigned char 
  1668 ;;  nibble          1    3[BANK0 ] unsigned char 
  1669 ;; Return value:  Size  Location     Type
  1670 ;;                  1    wreg      void 
  1671 ;; Registers used:
  1672 ;;		wreg, status,2, status,0, pclath, cstack
  1673 ;; Tracked objects:
  1674 ;;		On entry : 0/0
  1675 ;;		On exit  : 0/0
  1676 ;;		Unchanged: 0/0
  1677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1678 ;;      Params:         0       0       0       0       0
  1679 ;;      Locals:         0       2       0       0       0
  1680 ;;      Temps:          0       2       0       0       0
  1681 ;;      Totals:         0       4       0       0       0
  1682 ;;Total ram usage:        4 bytes
  1683 ;; Hardware stack levels used: 1
  1684 ;; Hardware stack levels required when called: 4
  1685 ;; This function calls:
  1686 ;;		_lcd_send_nibble
  1687 ;; This function is called by:
  1688 ;;		_lcd_cmd
  1689 ;;		_lcd_char
  1690 ;; This function uses a non-reentrant model
  1691 ;;
  1692                           
  1693                           
  1694                           ;psect for function _lcd_byte_4bits
  1695  03A9                     _lcd_byte_4bits:
  1696                           
  1697                           ;incstack = 0
  1698                           ; Regs used in _lcd_byte_4bits: [wreg+status,2+status,0+pclath+cstack]
  1699                           ;lcd_byte_4bits@data stored from wreg
  1700  03A9  1283               	bcf	3,5	;RP0=0, select bank0
  1701  03AA  1303               	bcf	3,6	;RP1=0, select bank0
  1702  03AB  00A2               	movwf	lcd_byte_4bits@data
  1703  03AC                     l1551:
  1704                           
  1705                           ;lcd.c: 86: void lcd_byte_4bits(unsigned char data);lcd.c: 87: {;lcd.c: 88:     unsigned
      +                           char nibble;;lcd.c: 91:     nibble = (data >> 4);
  1706  03AC  0822               	movf	lcd_byte_4bits@data,w
  1707  03AD  00A0               	movwf	??_lcd_byte_4bits
  1708  03AE  3004               	movlw	4
  1709  03AF                     u875:
  1710  03AF  1003               	clrc
  1711  03B0  0CA0               	rrf	??_lcd_byte_4bits,f
  1712  03B1  3EFF               	addlw	-1
  1713  03B2  1D03               	skipz
  1714  03B3  2BAF               	goto	u875
  1715  03B4  0820               	movf	??_lcd_byte_4bits,w
  1716  03B5  00A1               	movwf	??_lcd_byte_4bits+1
  1717  03B6  0821               	movf	??_lcd_byte_4bits+1,w
  1718  03B7  00A3               	movwf	lcd_byte_4bits@nibble
  1719  03B8                     l1553:
  1720                           
  1721                           ;lcd.c: 92:     lcd_send_nibble(nibble);
  1722  03B8  0823               	movf	lcd_byte_4bits@nibble,w
  1723  03B9  120A  118A  2358  120A  118A  	fcall	_lcd_send_nibble
  1724  03BE                     l1555:
  1725                           
  1726                           ;lcd.c: 95:     nibble = (data & 0x0F);
  1727  03BE  1283               	bcf	3,5	;RP0=0, select bank0
  1728  03BF  1303               	bcf	3,6	;RP1=0, select bank0
  1729  03C0  0822               	movf	lcd_byte_4bits@data,w
  1730  03C1  390F               	andlw	15
  1731  03C2  00A0               	movwf	??_lcd_byte_4bits
  1732  03C3  0820               	movf	??_lcd_byte_4bits,w
  1733  03C4  00A3               	movwf	lcd_byte_4bits@nibble
  1734  03C5                     l1557:
  1735                           
  1736                           ;lcd.c: 96:     lcd_send_nibble(nibble);
  1737  03C5  0823               	movf	lcd_byte_4bits@nibble,w
  1738  03C6  120A  118A  2358  120A  118A  	fcall	_lcd_send_nibble
  1739  03CB                     l166:
  1740  03CB  0008               	return
  1741  03CC                     __end_of_lcd_byte_4bits:
  1742                           
  1743                           	psect	text14
  1744  0358                     __ptext14:	
  1745 ;; *************** function _lcd_send_nibble *****************
  1746 ;; Defined at:
  1747 ;;		line 70 in file "lcd.c"
  1748 ;; Parameters:    Size  Location     Type
  1749 ;;  data            1    wreg     unsigned char 
  1750 ;; Auto vars:     Size  Location     Type
  1751 ;;  data            1    4[COMMON] unsigned char 
  1752 ;; Return value:  Size  Location     Type
  1753 ;;                  1    wreg      void 
  1754 ;; Registers used:
  1755 ;;		wreg, status,2, status,0, pclath, cstack
  1756 ;; Tracked objects:
  1757 ;;		On entry : 0/0
  1758 ;;		On exit  : 0/0
  1759 ;;		Unchanged: 0/0
  1760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1761 ;;      Params:         0       0       0       0       0
  1762 ;;      Locals:         1       0       0       0       0
  1763 ;;      Temps:          0       0       0       0       0
  1764 ;;      Totals:         1       0       0       0       0
  1765 ;;Total ram usage:        1 bytes
  1766 ;; Hardware stack levels used: 1
  1767 ;; Hardware stack levels required when called: 3
  1768 ;; This function calls:
  1769 ;;		_lcd_en_pulse
  1770 ;; This function is called by:
  1771 ;;		_lcd_byte_4bits
  1772 ;;		_lcd_init_4bits
  1773 ;; This function uses a non-reentrant model
  1774 ;;
  1775                           
  1776                           
  1777                           ;psect for function _lcd_send_nibble
  1778  0358                     _lcd_send_nibble:
  1779                           
  1780                           ;incstack = 0
  1781                           ; Regs used in _lcd_send_nibble: [wreg+status,2+status,0+pclath+cstack]
  1782                           ;lcd_send_nibble@data stored from wreg
  1783  0358  00F4               	movwf	lcd_send_nibble@data
  1784  0359                     l1525:
  1785                           
  1786                           ;lcd.c: 70: void lcd_send_nibble(unsigned char data);lcd.c: 71: {;lcd.c: 74:     if (dat
      +                          a&0x01) var4 = 1;
  1787  0359  1C74               	btfss	lcd_send_nibble@data,0
  1788  035A  2B5C               	goto	u831
  1789  035B  2B5D               	goto	u830
  1790  035C                     u831:
  1791  035C  2B60               	goto	l1529
  1792  035D                     u830:
  1793  035D                     l1527:
  1794  035D  01F8               	clrf	_var4
  1795  035E  0AF8               	incf	_var4,f
  1796  035F  2B61               	goto	l1531
  1797  0360                     l1529:
  1798  0360  01F8               	clrf	_var4
  1799  0361                     l1531:
  1800                           
  1801                           ;lcd.c: 76:  if (data&0x02) var5 = 1;
  1802  0361  1CF4               	btfss	lcd_send_nibble@data,1
  1803  0362  2B64               	goto	u841
  1804  0363  2B65               	goto	u840
  1805  0364                     u841:
  1806  0364  2B6A               	goto	l1535
  1807  0365                     u840:
  1808  0365                     l1533:
  1809  0365  1283               	bcf	3,5	;RP0=0, select bank0
  1810  0366  1303               	bcf	3,6	;RP1=0, select bank0
  1811  0367  01C1               	clrf	_var5
  1812  0368  0AC1               	incf	_var5,f
  1813  0369  2B6D               	goto	l1537
  1814  036A                     l1535:
  1815  036A  1283               	bcf	3,5	;RP0=0, select bank0
  1816  036B  1303               	bcf	3,6	;RP1=0, select bank0
  1817  036C  01C1               	clrf	_var5
  1818  036D                     l1537:
  1819                           
  1820                           ;lcd.c: 78:  if (data&0x04) var6 = 1;
  1821  036D  1D74               	btfss	lcd_send_nibble@data,2
  1822  036E  2B70               	goto	u851
  1823  036F  2B71               	goto	u850
  1824  0370                     u851:
  1825  0370  2B74               	goto	l1541
  1826  0371                     u850:
  1827  0371                     l1539:
  1828  0371  01C0               	clrf	_var6
  1829  0372  0AC0               	incf	_var6,f
  1830  0373  2B75               	goto	l1543
  1831  0374                     l1541:
  1832  0374  01C0               	clrf	_var6
  1833  0375                     l1543:
  1834                           
  1835                           ;lcd.c: 80:  if (data&0x08) var7 = 1;
  1836  0375  1DF4               	btfss	lcd_send_nibble@data,3
  1837  0376  2B78               	goto	u861
  1838  0377  2B79               	goto	u860
  1839  0378                     u861:
  1840  0378  2B7C               	goto	l1547
  1841  0379                     u860:
  1842  0379                     l1545:
  1843  0379  01BF               	clrf	_var7
  1844  037A  0ABF               	incf	_var7,f
  1845  037B  2B7D               	goto	l1549
  1846  037C                     l1547:
  1847  037C  01BF               	clrf	_var7
  1848  037D                     l1549:
  1849                           
  1850                           ;lcd.c: 83:     lcd_en_pulse();
  1851  037D  120A  118A  23ED  120A  118A  	fcall	_lcd_en_pulse
  1852  0382                     l163:
  1853  0382  0008               	return
  1854  0383                     __end_of_lcd_send_nibble:
  1855                           
  1856                           	psect	text15
  1857  03ED                     __ptext15:	
  1858 ;; *************** function _lcd_en_pulse *****************
  1859 ;; Defined at:
  1860 ;;		line 62 in file "lcd.c"
  1861 ;; Parameters:    Size  Location     Type
  1862 ;;		None
  1863 ;; Auto vars:     Size  Location     Type
  1864 ;;		None
  1865 ;; Return value:  Size  Location     Type
  1866 ;;                  1    wreg      void 
  1867 ;; Registers used:
  1868 ;;		status,2, status,0, pclath, cstack
  1869 ;; Tracked objects:
  1870 ;;		On entry : 0/0
  1871 ;;		On exit  : 0/0
  1872 ;;		Unchanged: 0/0
  1873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1874 ;;      Params:         0       0       0       0       0
  1875 ;;      Locals:         0       0       0       0       0
  1876 ;;      Temps:          0       0       0       0       0
  1877 ;;      Totals:         0       0       0       0       0
  1878 ;;Total ram usage:        0 bytes
  1879 ;; Hardware stack levels used: 1
  1880 ;; Hardware stack levels required when called: 2
  1881 ;; This function calls:
  1882 ;;		_lcd_delay_1us
  1883 ;; This function is called by:
  1884 ;;		_lcd_send_nibble
  1885 ;;		_lcd_byte_8bits
  1886 ;; This function uses a non-reentrant model
  1887 ;;
  1888                           
  1889                           
  1890                           ;psect for function _lcd_en_pulse
  1891  03ED                     _lcd_en_pulse:
  1892  03ED                     l1519:	
  1893                           ;incstack = 0
  1894                           ; Regs used in _lcd_en_pulse: [status,2+status,0+pclath+cstack]
  1895                           
  1896                           
  1897                           ;lcd.c: 64:     PORTBbits.RB3 = 1;
  1898  03ED  1283               	bcf	3,5	;RP0=0, select bank0
  1899  03EE  1303               	bcf	3,6	;RP1=0, select bank0
  1900  03EF  1586               	bsf	6,3	;volatile
  1901  03F0                     l1521:
  1902                           
  1903                           ;lcd.c: 65:     lcd_delay_1us();
  1904  03F0  120A  118A  2463  120A  118A  	fcall	_lcd_delay_1us
  1905  03F5                     l1523:
  1906                           
  1907                           ;lcd.c: 66:     PORTBbits.RB3 = 0;
  1908  03F5  1283               	bcf	3,5	;RP0=0, select bank0
  1909  03F6  1303               	bcf	3,6	;RP1=0, select bank0
  1910  03F7  1186               	bcf	6,3	;volatile
  1911                           
  1912                           ;lcd.c: 67:     lcd_delay_1us();
  1913  03F8  120A  118A  2463  120A  118A  	fcall	_lcd_delay_1us
  1914  03FD                     l152:
  1915  03FD  0008               	return
  1916  03FE                     __end_of_lcd_en_pulse:
  1917                           
  1918                           	psect	text16
  1919  0463                     __ptext16:	
  1920 ;; *************** function _lcd_delay_1us *****************
  1921 ;; Defined at:
  1922 ;;		line 57 in file "lcd.c"
  1923 ;; Parameters:    Size  Location     Type
  1924 ;;		None
  1925 ;; Auto vars:     Size  Location     Type
  1926 ;;		None
  1927 ;; Return value:  Size  Location     Type
  1928 ;;                  1    wreg      void 
  1929 ;; Registers used:
  1930 ;;		None
  1931 ;; Tracked objects:
  1932 ;;		On entry : 0/0
  1933 ;;		On exit  : 0/0
  1934 ;;		Unchanged: 0/0
  1935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1936 ;;      Params:         0       0       0       0       0
  1937 ;;      Locals:         0       0       0       0       0
  1938 ;;      Temps:          0       0       0       0       0
  1939 ;;      Totals:         0       0       0       0       0
  1940 ;;Total ram usage:        0 bytes
  1941 ;; Hardware stack levels used: 1
  1942 ;; Hardware stack levels required when called: 1
  1943 ;; This function calls:
  1944 ;;		Nothing
  1945 ;; This function is called by:
  1946 ;;		_lcd_en_pulse
  1947 ;; This function uses a non-reentrant model
  1948 ;;
  1949                           
  1950                           
  1951                           ;psect for function _lcd_delay_1us
  1952  0463                     _lcd_delay_1us:
  1953  0463                     l1517:	
  1954                           ;incstack = 0
  1955                           ; Regs used in _lcd_delay_1us: []
  1956                           
  1957  0463  2C64               	nop2	;2 cycle nop
  1958  0464  2C65               	nop2	;2 cycle nop
  1959  0465  0000               	nop
  1960  0466                     l140:
  1961  0466  0008               	return
  1962  0467                     __end_of_lcd_delay_1us:
  1963                           
  1964                           	psect	text17
  1965  0383                     __ptext17:	
  1966 ;; *************** function _itoa *****************
  1967 ;; Defined at:
  1968 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\itoa.c"
  1969 ;; Parameters:    Size  Location     Type
  1970 ;;  buf             1    wreg     PTR unsigned char 
  1971 ;;		 -> pulses_char_val(10), 
  1972 ;;  val             2   16[BANK0 ] int 
  1973 ;;  base            2   18[BANK0 ] int 
  1974 ;; Auto vars:     Size  Location     Type
  1975 ;;  buf             1   21[BANK0 ] PTR unsigned char 
  1976 ;;		 -> pulses_char_val(10), 
  1977 ;;  cp              1    0        PTR unsigned char 
  1978 ;;		 -> pulses_char_val(10), 
  1979 ;; Return value:  Size  Location     Type
  1980 ;;                  1    wreg      PTR unsigned char 
  1981 ;; Registers used:
  1982 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1983 ;; Tracked objects:
  1984 ;;		On entry : 0/0
  1985 ;;		On exit  : 0/0
  1986 ;;		Unchanged: 0/0
  1987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1988 ;;      Params:         0       4       0       0       0
  1989 ;;      Locals:         0       1       0       0       0
  1990 ;;      Temps:          0       1       0       0       0
  1991 ;;      Totals:         0       6       0       0       0
  1992 ;;Total ram usage:        6 bytes
  1993 ;; Hardware stack levels used: 1
  1994 ;; Hardware stack levels required when called: 3
  1995 ;; This function calls:
  1996 ;;		_utoa
  1997 ;; This function is called by:
  1998 ;;		_main
  1999 ;; This function uses a non-reentrant model
  2000 ;;
  2001                           
  2002                           
  2003                           ;psect for function _itoa
  2004  0383                     _itoa:
  2005                           
  2006                           ;incstack = 0
  2007                           ; Regs used in _itoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2008                           ;itoa@buf stored from wreg
  2009  0383  1283               	bcf	3,5	;RP0=0, select bank0
  2010  0384  1303               	bcf	3,6	;RP1=0, select bank0
  2011  0385  00B5               	movwf	itoa@buf
  2012  0386                     l1697:
  2013  0386                     l1699:
  2014  0386  1FB1               	btfss	itoa@val+1,7
  2015  0387  2B89               	goto	u1061
  2016  0388  2B8A               	goto	u1060
  2017  0389                     u1061:
  2018  0389  2B9A               	goto	l1707
  2019  038A                     u1060:
  2020  038A                     l1701:
  2021  038A  302D               	movlw	45
  2022  038B  00B4               	movwf	??_itoa
  2023  038C  0835               	movf	itoa@buf,w
  2024  038D  0084               	movwf	4
  2025  038E  0834               	movf	??_itoa,w
  2026  038F  1383               	bcf	3,7	;select IRP bank0
  2027  0390  0080               	movwf	0
  2028  0391                     l1703:
  2029  0391  3001               	movlw	1
  2030  0392  00B4               	movwf	??_itoa
  2031  0393  0834               	movf	??_itoa,w
  2032  0394  07B5               	addwf	itoa@buf,f
  2033  0395                     l1705:
  2034  0395  09B0               	comf	itoa@val,f
  2035  0396  09B1               	comf	itoa@val+1,f
  2036  0397  0AB0               	incf	itoa@val,f
  2037  0398  1903               	skipnz
  2038  0399  0AB1               	incf	itoa@val+1,f
  2039  039A                     l1707:
  2040  039A  0831               	movf	itoa@val+1,w
  2041  039B  00A8               	movwf	utoa@val+1
  2042  039C  0830               	movf	itoa@val,w
  2043  039D  00A7               	movwf	utoa@val
  2044  039E  0833               	movf	itoa@base+1,w
  2045  039F  00AA               	movwf	utoa@base+1
  2046  03A0  0832               	movf	itoa@base,w
  2047  03A1  00A9               	movwf	utoa@base
  2048  03A2  0835               	movf	itoa@buf,w
  2049  03A3  120A  118A  20BE  120A  118A  	fcall	_utoa
  2050  03A8                     l751:
  2051  03A8  0008               	return
  2052  03A9                     __end_of_itoa:
  2053                           
  2054                           	psect	text18
  2055  00BE                     __ptext18:	
  2056 ;; *************** function _utoa *****************
  2057 ;; Defined at:
  2058 ;;		line 17 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\itoa.c"
  2059 ;; Parameters:    Size  Location     Type
  2060 ;;  buf             1    wreg     PTR unsigned char 
  2061 ;;		 -> pulses_char_val(10), 
  2062 ;;  val             2    7[BANK0 ] unsigned int 
  2063 ;;  base            2    9[BANK0 ] int 
  2064 ;; Auto vars:     Size  Location     Type
  2065 ;;  buf             1   15[BANK0 ] PTR unsigned char 
  2066 ;;		 -> pulses_char_val(10), 
  2067 ;;  v               2   12[BANK0 ] unsigned int 
  2068 ;;  c               1   14[BANK0 ] unsigned char 
  2069 ;; Return value:  Size  Location     Type
  2070 ;;                  1    wreg      PTR unsigned char 
  2071 ;; Registers used:
  2072 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2073 ;; Tracked objects:
  2074 ;;		On entry : 0/0
  2075 ;;		On exit  : 0/0
  2076 ;;		Unchanged: 0/0
  2077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2078 ;;      Params:         0       4       0       0       0
  2079 ;;      Locals:         0       4       0       0       0
  2080 ;;      Temps:          0       1       0       0       0
  2081 ;;      Totals:         0       9       0       0       0
  2082 ;;Total ram usage:        9 bytes
  2083 ;; Hardware stack levels used: 1
  2084 ;; Hardware stack levels required when called: 2
  2085 ;; This function calls:
  2086 ;;		___lwdiv
  2087 ;;		___lwmod
  2088 ;; This function is called by:
  2089 ;;		_itoa
  2090 ;; This function uses a non-reentrant model
  2091 ;;
  2092                           
  2093                           
  2094                           ;psect for function _utoa
  2095  00BE                     _utoa:
  2096                           
  2097                           ;incstack = 0
  2098                           ; Regs used in _utoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2099                           ;utoa@buf stored from wreg
  2100  00BE  1283               	bcf	3,5	;RP0=0, select bank0
  2101  00BF  1303               	bcf	3,6	;RP1=0, select bank0
  2102  00C0  00AF               	movwf	utoa@buf
  2103  00C1                     l1631:
  2104  00C1  0828               	movf	utoa@val+1,w
  2105  00C2  00AD               	movwf	utoa@v+1
  2106  00C3  0827               	movf	utoa@val,w
  2107  00C4  00AC               	movwf	utoa@v
  2108  00C5                     l1633:
  2109  00C5  082A               	movf	utoa@base+1,w
  2110  00C6  00A1               	movwf	___lwdiv@divisor+1
  2111  00C7  0829               	movf	utoa@base,w
  2112  00C8  00A0               	movwf	___lwdiv@divisor
  2113  00C9  082D               	movf	utoa@v+1,w
  2114  00CA  00A3               	movwf	___lwdiv@dividend+1
  2115  00CB  082C               	movf	utoa@v,w
  2116  00CC  00A2               	movwf	___lwdiv@dividend
  2117  00CD  120A  118A  222B  120A  118A  	fcall	___lwdiv
  2118  00D2  1283               	bcf	3,5	;RP0=0, select bank0
  2119  00D3  1303               	bcf	3,6	;RP1=0, select bank0
  2120  00D4  0821               	movf	?___lwdiv+1,w
  2121  00D5  00AD               	movwf	utoa@v+1
  2122  00D6  0820               	movf	?___lwdiv,w
  2123  00D7  00AC               	movwf	utoa@v
  2124  00D8                     l1635:
  2125  00D8  3001               	movlw	1
  2126  00D9  00AB               	movwf	??_utoa
  2127  00DA  082B               	movf	??_utoa,w
  2128  00DB  07AF               	addwf	utoa@buf,f
  2129  00DC                     l1637:
  2130  00DC  082C               	movf	utoa@v,w
  2131  00DD  042D               	iorwf	utoa@v+1,w
  2132  00DE  1D03               	btfss	3,2
  2133  00DF  28E1               	goto	u1011
  2134  00E0  28E2               	goto	u1010
  2135  00E1                     u1011:
  2136  00E1  28C5               	goto	l1633
  2137  00E2                     u1010:
  2138  00E2                     l1639:
  2139  00E2  082F               	movf	utoa@buf,w
  2140  00E3  0084               	movwf	4
  2141  00E4  1383               	bcf	3,7	;select IRP bank0
  2142  00E5  0180               	clrf	0
  2143  00E6                     l1641:
  2144  00E6  3001               	movlw	1
  2145  00E7  02AF               	subwf	utoa@buf,f
  2146  00E8                     l1643:
  2147  00E8  082A               	movf	utoa@base+1,w
  2148  00E9  00A1               	movwf	___lwmod@divisor+1
  2149  00EA  0829               	movf	utoa@base,w
  2150  00EB  00A0               	movwf	___lwmod@divisor
  2151  00EC  0828               	movf	utoa@val+1,w
  2152  00ED  00A3               	movwf	___lwmod@dividend+1
  2153  00EE  0827               	movf	utoa@val,w
  2154  00EF  00A2               	movwf	___lwmod@dividend
  2155  00F0  120A  118A  22AF  120A  118A  	fcall	___lwmod
  2156  00F5  1283               	bcf	3,5	;RP0=0, select bank0
  2157  00F6  1303               	bcf	3,6	;RP1=0, select bank0
  2158  00F7  0820               	movf	?___lwmod,w
  2159  00F8  00AB               	movwf	??_utoa
  2160  00F9  082B               	movf	??_utoa,w
  2161  00FA  00AE               	movwf	utoa@c
  2162  00FB                     l1645:
  2163  00FB  082A               	movf	utoa@base+1,w
  2164  00FC  00A1               	movwf	___lwdiv@divisor+1
  2165  00FD  0829               	movf	utoa@base,w
  2166  00FE  00A0               	movwf	___lwdiv@divisor
  2167  00FF  0828               	movf	utoa@val+1,w
  2168  0100  00A3               	movwf	___lwdiv@dividend+1
  2169  0101  0827               	movf	utoa@val,w
  2170  0102  00A2               	movwf	___lwdiv@dividend
  2171  0103  120A  118A  222B  120A  118A  	fcall	___lwdiv
  2172  0108  1283               	bcf	3,5	;RP0=0, select bank0
  2173  0109  1303               	bcf	3,6	;RP1=0, select bank0
  2174  010A  0821               	movf	?___lwdiv+1,w
  2175  010B  00A8               	movwf	utoa@val+1
  2176  010C  0820               	movf	?___lwdiv,w
  2177  010D  00A7               	movwf	utoa@val
  2178  010E                     l1647:
  2179  010E  300A               	movlw	10
  2180  010F  022E               	subwf	utoa@c,w
  2181  0110  1C03               	skipc
  2182  0111  2913               	goto	u1021
  2183  0112  2914               	goto	u1020
  2184  0113                     u1021:
  2185  0113  2918               	goto	l757
  2186  0114                     u1020:
  2187  0114                     l1649:
  2188  0114  3007               	movlw	7
  2189  0115  00AB               	movwf	??_utoa
  2190  0116  082B               	movf	??_utoa,w
  2191  0117  07AE               	addwf	utoa@c,f
  2192  0118                     l757:
  2193  0118  3030               	movlw	48
  2194  0119  00AB               	movwf	??_utoa
  2195  011A  082B               	movf	??_utoa,w
  2196  011B  07AE               	addwf	utoa@c,f
  2197  011C                     l1651:
  2198  011C  082E               	movf	utoa@c,w
  2199  011D  00AB               	movwf	??_utoa
  2200  011E  082F               	movf	utoa@buf,w
  2201  011F  0084               	movwf	4
  2202  0120  082B               	movf	??_utoa,w
  2203  0121  1383               	bcf	3,7	;select IRP bank0
  2204  0122  0080               	movwf	0
  2205  0123                     l1653:
  2206  0123  3001               	movlw	1
  2207  0124  02AF               	subwf	utoa@buf,f
  2208  0125                     l1655:
  2209  0125  0827               	movf	utoa@val,w
  2210  0126  0428               	iorwf	utoa@val+1,w
  2211  0127  1D03               	btfss	3,2
  2212  0128  292A               	goto	u1031
  2213  0129  292B               	goto	u1030
  2214  012A                     u1031:
  2215  012A  28E8               	goto	l1643
  2216  012B                     u1030:
  2217  012B                     l1657:
  2218                           
  2219                           ;	Return value of _utoa is never used
  2220  012B  3001               	movlw	1
  2221  012C  00AB               	movwf	??_utoa
  2222  012D  082B               	movf	??_utoa,w
  2223  012E  07AF               	addwf	utoa@buf,f
  2224  012F                     l759:
  2225  012F  0008               	return
  2226  0130                     __end_of_utoa:
  2227                           
  2228                           	psect	text19
  2229  02AF                     __ptext19:	
  2230 ;; *************** function ___lwmod *****************
  2231 ;; Defined at:
  2232 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
  2233 ;; Parameters:    Size  Location     Type
  2234 ;;  divisor         2    0[BANK0 ] unsigned int 
  2235 ;;  dividend        2    2[BANK0 ] unsigned int 
  2236 ;; Auto vars:     Size  Location     Type
  2237 ;;  counter         1    5[COMMON] unsigned char 
  2238 ;; Return value:  Size  Location     Type
  2239 ;;                  2    0[BANK0 ] unsigned int 
  2240 ;; Registers used:
  2241 ;;		wreg, status,2, status,0
  2242 ;; Tracked objects:
  2243 ;;		On entry : 0/0
  2244 ;;		On exit  : 0/0
  2245 ;;		Unchanged: 0/0
  2246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2247 ;;      Params:         0       4       0       0       0
  2248 ;;      Locals:         1       0       0       0       0
  2249 ;;      Temps:          1       0       0       0       0
  2250 ;;      Totals:         2       4       0       0       0
  2251 ;;Total ram usage:        6 bytes
  2252 ;; Hardware stack levels used: 1
  2253 ;; Hardware stack levels required when called: 1
  2254 ;; This function calls:
  2255 ;;		Nothing
  2256 ;; This function is called by:
  2257 ;;		_utoa
  2258 ;; This function uses a non-reentrant model
  2259 ;;
  2260                           
  2261                           
  2262                           ;psect for function ___lwmod
  2263  02AF                     ___lwmod:
  2264  02AF                     l1599:	
  2265                           ;incstack = 0
  2266                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2267                           
  2268  02AF  1283               	bcf	3,5	;RP0=0, select bank0
  2269  02B0  1303               	bcf	3,6	;RP1=0, select bank0
  2270  02B1  0820               	movf	___lwmod@divisor,w
  2271  02B2  0421               	iorwf	___lwmod@divisor+1,w
  2272  02B3  1903               	btfsc	3,2
  2273  02B4  2AB6               	goto	u951
  2274  02B5  2AB7               	goto	u950
  2275  02B6                     u951:
  2276  02B6  2AE6               	goto	l1617
  2277  02B7                     u950:
  2278  02B7                     l1601:
  2279  02B7  01F5               	clrf	___lwmod@counter
  2280  02B8  0AF5               	incf	___lwmod@counter,f
  2281  02B9  2AC5               	goto	l1607
  2282  02BA                     l1603:
  2283  02BA  3001               	movlw	1
  2284  02BB                     u965:
  2285  02BB  1003               	clrc
  2286  02BC  0DA0               	rlf	___lwmod@divisor,f
  2287  02BD  0DA1               	rlf	___lwmod@divisor+1,f
  2288  02BE  3EFF               	addlw	-1
  2289  02BF  1D03               	skipz
  2290  02C0  2ABB               	goto	u965
  2291  02C1                     l1605:
  2292  02C1  3001               	movlw	1
  2293  02C2  00F4               	movwf	??___lwmod
  2294  02C3  0874               	movf	??___lwmod,w
  2295  02C4  07F5               	addwf	___lwmod@counter,f
  2296  02C5                     l1607:
  2297  02C5  1FA1               	btfss	___lwmod@divisor+1,7
  2298  02C6  2AC8               	goto	u971
  2299  02C7  2AC9               	goto	u970
  2300  02C8                     u971:
  2301  02C8  2ABA               	goto	l1603
  2302  02C9                     u970:
  2303  02C9                     l1609:
  2304  02C9  0821               	movf	___lwmod@divisor+1,w
  2305  02CA  0223               	subwf	___lwmod@dividend+1,w
  2306  02CB  1D03               	skipz
  2307  02CC  2ACF               	goto	u985
  2308  02CD  0820               	movf	___lwmod@divisor,w
  2309  02CE  0222               	subwf	___lwmod@dividend,w
  2310  02CF                     u985:
  2311  02CF  1C03               	skipc
  2312  02D0  2AD2               	goto	u981
  2313  02D1  2AD3               	goto	u980
  2314  02D2                     u981:
  2315  02D2  2AD9               	goto	l1613
  2316  02D3                     u980:
  2317  02D3                     l1611:
  2318  02D3  0820               	movf	___lwmod@divisor,w
  2319  02D4  02A2               	subwf	___lwmod@dividend,f
  2320  02D5  0821               	movf	___lwmod@divisor+1,w
  2321  02D6  1C03               	skipc
  2322  02D7  03A3               	decf	___lwmod@dividend+1,f
  2323  02D8  02A3               	subwf	___lwmod@dividend+1,f
  2324  02D9                     l1613:
  2325  02D9  3001               	movlw	1
  2326  02DA                     u995:
  2327  02DA  1003               	clrc
  2328  02DB  0CA1               	rrf	___lwmod@divisor+1,f
  2329  02DC  0CA0               	rrf	___lwmod@divisor,f
  2330  02DD  3EFF               	addlw	-1
  2331  02DE  1D03               	skipz
  2332  02DF  2ADA               	goto	u995
  2333  02E0                     l1615:
  2334  02E0  3001               	movlw	1
  2335  02E1  02F5               	subwf	___lwmod@counter,f
  2336  02E2  1D03               	btfss	3,2
  2337  02E3  2AE5               	goto	u1001
  2338  02E4  2AE6               	goto	u1000
  2339  02E5                     u1001:
  2340  02E5  2AC9               	goto	l1609
  2341  02E6                     u1000:
  2342  02E6                     l1617:
  2343  02E6  0823               	movf	___lwmod@dividend+1,w
  2344  02E7  00A1               	movwf	?___lwmod+1
  2345  02E8  0822               	movf	___lwmod@dividend,w
  2346  02E9  00A0               	movwf	?___lwmod
  2347  02EA                     l579:
  2348  02EA  0008               	return
  2349  02EB                     __end_of___lwmod:
  2350                           
  2351                           	psect	text20
  2352  022B                     __ptext20:	
  2353 ;; *************** function ___lwdiv *****************
  2354 ;; Defined at:
  2355 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  2356 ;; Parameters:    Size  Location     Type
  2357 ;;  divisor         2    0[BANK0 ] unsigned int 
  2358 ;;  dividend        2    2[BANK0 ] unsigned int 
  2359 ;; Auto vars:     Size  Location     Type
  2360 ;;  quotient        2    5[BANK0 ] unsigned int 
  2361 ;;  counter         1    4[BANK0 ] unsigned char 
  2362 ;; Return value:  Size  Location     Type
  2363 ;;                  2    0[BANK0 ] unsigned int 
  2364 ;; Registers used:
  2365 ;;		wreg, status,2, status,0
  2366 ;; Tracked objects:
  2367 ;;		On entry : 0/0
  2368 ;;		On exit  : 0/0
  2369 ;;		Unchanged: 0/0
  2370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2371 ;;      Params:         0       4       0       0       0
  2372 ;;      Locals:         0       3       0       0       0
  2373 ;;      Temps:          1       0       0       0       0
  2374 ;;      Totals:         1       7       0       0       0
  2375 ;;Total ram usage:        8 bytes
  2376 ;; Hardware stack levels used: 1
  2377 ;; Hardware stack levels required when called: 1
  2378 ;; This function calls:
  2379 ;;		Nothing
  2380 ;; This function is called by:
  2381 ;;		_utoa
  2382 ;; This function uses a non-reentrant model
  2383 ;;
  2384                           
  2385                           
  2386                           ;psect for function ___lwdiv
  2387  022B                     ___lwdiv:
  2388  022B                     l1573:	
  2389                           ;incstack = 0
  2390                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2391                           
  2392  022B  1283               	bcf	3,5	;RP0=0, select bank0
  2393  022C  1303               	bcf	3,6	;RP1=0, select bank0
  2394  022D  01A5               	clrf	___lwdiv@quotient
  2395  022E  01A6               	clrf	___lwdiv@quotient+1
  2396  022F                     l1575:
  2397  022F  0820               	movf	___lwdiv@divisor,w
  2398  0230  0421               	iorwf	___lwdiv@divisor+1,w
  2399  0231  1903               	btfsc	3,2
  2400  0232  2A34               	goto	u881
  2401  0233  2A35               	goto	u880
  2402  0234                     u881:
  2403  0234  2A6C               	goto	l1595
  2404  0235                     u880:
  2405  0235                     l1577:
  2406  0235  01A4               	clrf	___lwdiv@counter
  2407  0236  0AA4               	incf	___lwdiv@counter,f
  2408  0237  2A43               	goto	l1583
  2409  0238                     l1579:
  2410  0238  3001               	movlw	1
  2411  0239                     u895:
  2412  0239  1003               	clrc
  2413  023A  0DA0               	rlf	___lwdiv@divisor,f
  2414  023B  0DA1               	rlf	___lwdiv@divisor+1,f
  2415  023C  3EFF               	addlw	-1
  2416  023D  1D03               	skipz
  2417  023E  2A39               	goto	u895
  2418  023F                     l1581:
  2419  023F  3001               	movlw	1
  2420  0240  00F4               	movwf	??___lwdiv
  2421  0241  0874               	movf	??___lwdiv,w
  2422  0242  07A4               	addwf	___lwdiv@counter,f
  2423  0243                     l1583:
  2424  0243  1FA1               	btfss	___lwdiv@divisor+1,7
  2425  0244  2A46               	goto	u901
  2426  0245  2A47               	goto	u900
  2427  0246                     u901:
  2428  0246  2A38               	goto	l1579
  2429  0247                     u900:
  2430  0247                     l1585:
  2431  0247  3001               	movlw	1
  2432  0248                     u915:
  2433  0248  1003               	clrc
  2434  0249  0DA5               	rlf	___lwdiv@quotient,f
  2435  024A  0DA6               	rlf	___lwdiv@quotient+1,f
  2436  024B  3EFF               	addlw	-1
  2437  024C  1D03               	skipz
  2438  024D  2A48               	goto	u915
  2439  024E  0821               	movf	___lwdiv@divisor+1,w
  2440  024F  0223               	subwf	___lwdiv@dividend+1,w
  2441  0250  1D03               	skipz
  2442  0251  2A54               	goto	u925
  2443  0252  0820               	movf	___lwdiv@divisor,w
  2444  0253  0222               	subwf	___lwdiv@dividend,w
  2445  0254                     u925:
  2446  0254  1C03               	skipc
  2447  0255  2A57               	goto	u921
  2448  0256  2A58               	goto	u920
  2449  0257                     u921:
  2450  0257  2A5F               	goto	l1591
  2451  0258                     u920:
  2452  0258                     l1587:
  2453  0258  0820               	movf	___lwdiv@divisor,w
  2454  0259  02A2               	subwf	___lwdiv@dividend,f
  2455  025A  0821               	movf	___lwdiv@divisor+1,w
  2456  025B  1C03               	skipc
  2457  025C  03A3               	decf	___lwdiv@dividend+1,f
  2458  025D  02A3               	subwf	___lwdiv@dividend+1,f
  2459  025E                     l1589:
  2460  025E  1425               	bsf	___lwdiv@quotient,0
  2461  025F                     l1591:
  2462  025F  3001               	movlw	1
  2463  0260                     u935:
  2464  0260  1003               	clrc
  2465  0261  0CA1               	rrf	___lwdiv@divisor+1,f
  2466  0262  0CA0               	rrf	___lwdiv@divisor,f
  2467  0263  3EFF               	addlw	-1
  2468  0264  1D03               	skipz
  2469  0265  2A60               	goto	u935
  2470  0266                     l1593:
  2471  0266  3001               	movlw	1
  2472  0267  02A4               	subwf	___lwdiv@counter,f
  2473  0268  1D03               	btfss	3,2
  2474  0269  2A6B               	goto	u941
  2475  026A  2A6C               	goto	u940
  2476  026B                     u941:
  2477  026B  2A47               	goto	l1585
  2478  026C                     u940:
  2479  026C                     l1595:
  2480  026C  0826               	movf	___lwdiv@quotient+1,w
  2481  026D  00A1               	movwf	?___lwdiv+1
  2482  026E  0825               	movf	___lwdiv@quotient,w
  2483  026F  00A0               	movwf	?___lwdiv
  2484  0270                     l569:
  2485  0270  0008               	return
  2486  0271                     __end_of___lwdiv:
  2487                           
  2488                           	psect	text21
  2489  0195                     __ptext21:	
  2490 ;; *************** function _init *****************
  2491 ;; Defined at:
  2492 ;;		line 74 in file "main.c"
  2493 ;; Parameters:    Size  Location     Type
  2494 ;;		None
  2495 ;; Auto vars:     Size  Location     Type
  2496 ;;		None
  2497 ;; Return value:  Size  Location     Type
  2498 ;;                  1    wreg      void 
  2499 ;; Registers used:
  2500 ;;		wreg, status,2
  2501 ;; Tracked objects:
  2502 ;;		On entry : 0/0
  2503 ;;		On exit  : 0/0
  2504 ;;		Unchanged: 0/0
  2505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2506 ;;      Params:         0       0       0       0       0
  2507 ;;      Locals:         0       0       0       0       0
  2508 ;;      Temps:          0       0       0       0       0
  2509 ;;      Totals:         0       0       0       0       0
  2510 ;;Total ram usage:        0 bytes
  2511 ;; Hardware stack levels used: 1
  2512 ;; Hardware stack levels required when called: 1
  2513 ;; This function calls:
  2514 ;;		Nothing
  2515 ;; This function is called by:
  2516 ;;		_main
  2517 ;; This function uses a non-reentrant model
  2518 ;;
  2519                           
  2520                           
  2521                           ;psect for function _init
  2522  0195                     _init:
  2523  0195                     l1309:	
  2524                           ;incstack = 0
  2525                           ; Regs used in _init: [wreg+status,2]
  2526                           
  2527                           
  2528                           ;main.c: 77:     PORTA = 0b00000000;
  2529  0195  1283               	bcf	3,5	;RP0=0, select bank0
  2530  0196  1303               	bcf	3,6	;RP1=0, select bank0
  2531  0197  0185               	clrf	5	;volatile
  2532                           
  2533                           ;main.c: 78:     PORTB = 0b00000000;
  2534  0198  0186               	clrf	6	;volatile
  2535                           
  2536                           ;main.c: 79:     PORTC = 0b00000000;
  2537  0199  0187               	clrf	7	;volatile
  2538                           
  2539                           ;main.c: 80:     TRISD = 0b00000000;
  2540  019A  1683               	bsf	3,5	;RP0=1, select bank1
  2541  019B  1303               	bcf	3,6	;RP1=0, select bank1
  2542  019C  0188               	clrf	8	;volatile
  2543                           
  2544                           ;main.c: 81:     PORTE = 0b00000000;
  2545  019D  1283               	bcf	3,5	;RP0=0, select bank0
  2546  019E  1303               	bcf	3,6	;RP1=0, select bank0
  2547  019F  0189               	clrf	9	;volatile
  2548  01A0                     l1311:
  2549                           
  2550                           ;main.c: 83:     TRISA = 0b00000001;
  2551  01A0  3001               	movlw	1
  2552  01A1  1683               	bsf	3,5	;RP0=1, select bank1
  2553  01A2  1303               	bcf	3,6	;RP1=0, select bank1
  2554  01A3  0085               	movwf	5	;volatile
  2555  01A4                     l1313:
  2556                           
  2557                           ;main.c: 84:     TRISB = 0b00000001;
  2558  01A4  3001               	movlw	1
  2559  01A5  0086               	movwf	6	;volatile
  2560  01A6                     l1315:
  2561                           
  2562                           ;main.c: 85:     TRISC = 0b00000110;
  2563  01A6  3006               	movlw	6
  2564  01A7  0087               	movwf	7	;volatile
  2565  01A8                     l1317:
  2566                           
  2567                           ;main.c: 86:     PORTD = 0b00000000;
  2568  01A8  1283               	bcf	3,5	;RP0=0, select bank0
  2569  01A9  1303               	bcf	3,6	;RP1=0, select bank0
  2570  01AA  0188               	clrf	8	;volatile
  2571  01AB                     l1319:
  2572                           
  2573                           ;main.c: 87:     TRISE = 0b00000000;
  2574  01AB  1683               	bsf	3,5	;RP0=1, select bank1
  2575  01AC  1303               	bcf	3,6	;RP1=0, select bank1
  2576  01AD  0189               	clrf	9	;volatile
  2577  01AE                     l1321:
  2578                           
  2579                           ;main.c: 90:     OPTION_REG = 0b10000001;
  2580  01AE  3081               	movlw	129
  2581  01AF  0081               	movwf	1	;volatile
  2582  01B0                     l1323:
  2583                           
  2584                           ;main.c: 101:     INTCON = 0b01010000;
  2585  01B0  3050               	movlw	80
  2586  01B1  008B               	movwf	11	;volatile
  2587  01B2                     l1325:
  2588                           
  2589                           ;main.c: 114:     T1CON = 0b00000001;
  2590  01B2  3001               	movlw	1
  2591  01B3  1283               	bcf	3,5	;RP0=0, select bank0
  2592  01B4  1303               	bcf	3,6	;RP1=0, select bank0
  2593  01B5  0090               	movwf	16	;volatile
  2594                           
  2595                           ;main.c: 125:     TMR1 = 0;
  2596  01B6  018E               	clrf	14	;volatile
  2597  01B7  018F               	clrf	15	;volatile
  2598  01B8                     l1327:
  2599                           
  2600                           ;main.c: 127:     PIE1bits.TMR1IE = 1;
  2601  01B8  1683               	bsf	3,5	;RP0=1, select bank1
  2602  01B9  1303               	bcf	3,6	;RP1=0, select bank1
  2603  01BA  140C               	bsf	12,0	;volatile
  2604                           
  2605                           ;main.c: 131:     CCPR1H = 0b00000000;
  2606  01BB  1283               	bcf	3,5	;RP0=0, select bank0
  2607  01BC  1303               	bcf	3,6	;RP1=0, select bank0
  2608  01BD  0196               	clrf	22	;volatile
  2609                           
  2610                           ;main.c: 132:     CCPR1L = 0b00000000;
  2611  01BE  0195               	clrf	21	;volatile
  2612  01BF                     l1329:
  2613                           
  2614                           ;main.c: 134:     CCP1CON = 0b00000101;
  2615  01BF  3005               	movlw	5
  2616  01C0  0097               	movwf	23	;volatile
  2617  01C1                     l1331:
  2618                           
  2619                           ;main.c: 145:     PIE1bits.CCP1IE = 1;
  2620  01C1  1683               	bsf	3,5	;RP0=1, select bank1
  2621  01C2  1303               	bcf	3,6	;RP1=0, select bank1
  2622  01C3  150C               	bsf	12,2	;volatile
  2623  01C4                     l1333:
  2624                           
  2625                           ;main.c: 146:     PIR1bits.CCP1IF = 0;
  2626  01C4  1283               	bcf	3,5	;RP0=0, select bank0
  2627  01C5  1303               	bcf	3,6	;RP1=0, select bank0
  2628  01C6  110C               	bcf	12,2	;volatile
  2629  01C7                     l1335:
  2630                           
  2631                           ;main.c: 148:     CCPR2H = 0b00000000;
  2632  01C7  019C               	clrf	28	;volatile
  2633  01C8                     l1337:
  2634                           
  2635                           ;main.c: 149:     CCPR2L = 0b00000000;
  2636  01C8  019B               	clrf	27	;volatile
  2637  01C9                     l1339:
  2638                           
  2639                           ;main.c: 151:     CCP2CON = 0b00000101;
  2640  01C9  3005               	movlw	5
  2641  01CA  009D               	movwf	29	;volatile
  2642  01CB                     l1341:
  2643                           
  2644                           ;main.c: 162:     PIE2bits.CCP2IE = 1;
  2645  01CB  1683               	bsf	3,5	;RP0=1, select bank1
  2646  01CC  1303               	bcf	3,6	;RP1=0, select bank1
  2647  01CD  140D               	bsf	13,0	;volatile
  2648  01CE                     l1343:
  2649                           
  2650                           ;main.c: 163:     PIR2bits.CCP2IF = 0;
  2651  01CE  1283               	bcf	3,5	;RP0=0, select bank0
  2652  01CF  1303               	bcf	3,6	;RP1=0, select bank0
  2653  01D0  100D               	bcf	13,0	;volatile
  2654  01D1                     l1345:
  2655                           
  2656                           ;main.c: 166:     CMCON = 0x07;
  2657  01D1  3007               	movlw	7
  2658  01D2  1683               	bsf	3,5	;RP0=1, select bank1
  2659  01D3  1303               	bcf	3,6	;RP1=0, select bank1
  2660  01D4  009C               	movwf	28	;volatile
  2661  01D5                     l1347:
  2662                           
  2663                           ;main.c: 169:     number_of_edges = 0;
  2664  01D5  01F9               	clrf	_number_of_edges
  2665  01D6                     l1349:
  2666                           
  2667                           ;main.c: 170:     tm1_overflow_cont = 0;
  2668  01D6  1283               	bcf	3,5	;RP0=0, select bank0
  2669  01D7  1303               	bcf	3,6	;RP1=0, select bank0
  2670  01D8  01BB               	clrf	_tm1_overflow_cont	;volatile
  2671  01D9  01BC               	clrf	_tm1_overflow_cont+1	;volatile
  2672  01DA                     l1351:
  2673                           
  2674                           ;main.c: 171:     tmr1_counter1 = 0;
  2675  01DA  01F6               	clrf	_tmr1_counter1	;volatile
  2676  01DB  01F7               	clrf	_tmr1_counter1+1	;volatile
  2677  01DC                     l1353:
  2678                           
  2679                           ;main.c: 172:     tmr1_counter2 = 0;
  2680  01DC  01B9               	clrf	_tmr1_counter2	;volatile
  2681  01DD  01BA               	clrf	_tmr1_counter2+1	;volatile
  2682  01DE                     l1355:
  2683                           
  2684                           ;main.c: 173:     two_edges_flag = 0;
  2685  01DE  01C2               	clrf	_two_edges_flag
  2686  01DF                     l1357:
  2687                           
  2688                           ;main.c: 174:     total_cont = 0;
  2689  01DF  01BD               	clrf	_total_cont	;volatile
  2690  01E0  01BE               	clrf	_total_cont+1	;volatile
  2691  01E1                     l98:
  2692  01E1  0008               	return
  2693  01E2                     __end_of_init:
  2694                           
  2695                           	psect	text22
  2696  0020                     __ptext22:	
  2697 ;; *************** function _myIsr *****************
  2698 ;; Defined at:
  2699 ;;		line 18 in file "main.c"
  2700 ;; Parameters:    Size  Location     Type
  2701 ;;		None
  2702 ;; Auto vars:     Size  Location     Type
  2703 ;;		None
  2704 ;; Return value:  Size  Location     Type
  2705 ;;                  1    wreg      void 
  2706 ;; Registers used:
  2707 ;;		wreg, status,2, status,0
  2708 ;; Tracked objects:
  2709 ;;		On entry : 0/0
  2710 ;;		On exit  : 0/0
  2711 ;;		Unchanged: 0/0
  2712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2713 ;;      Params:         0       0       0       0       0
  2714 ;;      Locals:         0       0       0       0       0
  2715 ;;      Temps:          4       0       0       0       0
  2716 ;;      Totals:         4       0       0       0       0
  2717 ;;Total ram usage:        4 bytes
  2718 ;; Hardware stack levels used: 1
  2719 ;; This function calls:
  2720 ;;		Nothing
  2721 ;; This function is called by:
  2722 ;;		Interrupt level 1
  2723 ;; This function uses a non-reentrant model
  2724 ;;
  2725                           
  2726                           
  2727                           ;psect for function _myIsr
  2728  0020                     _myIsr:
  2729  0020                     i1l1409:
  2730                           
  2731                           ;main.c: 21:     if (INTCONbits.INTE && INTCONbits.INTF) {
  2732  0020  1E0B               	btfss	11,4	;volatile
  2733  0021  2823               	goto	u66_21
  2734  0022  2824               	goto	u66_20
  2735  0023                     u66_21:
  2736  0023  2838               	goto	i1l1417
  2737  0024                     u66_20:
  2738  0024                     i1l1411:
  2739  0024  1C8B               	btfss	11,1	;volatile
  2740  0025  2827               	goto	u67_21
  2741  0026  2828               	goto	u67_20
  2742  0027                     u67_21:
  2743  0027  2838               	goto	i1l1417
  2744  0028                     u67_20:
  2745  0028                     i1l1413:
  2746                           
  2747                           ;main.c: 22:         INTCONbits.INTF = 0;
  2748  0028  108B               	bcf	11,1	;volatile
  2749  0029                     i1l1415:
  2750                           
  2751                           ;main.c: 23:         PORTBbits.RB1 = ~PORTBbits.RB1;
  2752  0029  1003               	clrc
  2753  002A  1283               	bcf	3,5	;RP0=0, select bank0
  2754  002B  1303               	bcf	3,6	;RP1=0, select bank0
  2755  002C  1C86               	btfss	6,1	;volatile
  2756  002D  1403               	setc
  2757  002E  1803               	btfsc	3,0
  2758  002F  2831               	goto	u68_21
  2759  0030  2835               	goto	u68_20
  2760  0031                     u68_21:
  2761  0031  1283               	bcf	3,5	;RP0=0, select bank0
  2762  0032  1303               	bcf	3,6	;RP1=0, select bank0
  2763  0033  1486               	bsf	6,1	;volatile
  2764  0034  2838               	goto	u69_24
  2765  0035                     u68_20:
  2766  0035  1283               	bcf	3,5	;RP0=0, select bank0
  2767  0036  1303               	bcf	3,6	;RP1=0, select bank0
  2768  0037  1086               	bcf	6,1	;volatile
  2769  0038                     u69_24:
  2770  0038                     i1l1417:
  2771                           
  2772                           ;main.c: 26:     if(PIE1bits.TMR1IE && PIR1bits.TMR1IF)
  2773  0038  1683               	bsf	3,5	;RP0=1, select bank1
  2774  0039  1303               	bcf	3,6	;RP1=0, select bank1
  2775  003A  1C0C               	btfss	12,0	;volatile
  2776  003B  283D               	goto	u70_21
  2777  003C  283E               	goto	u70_20
  2778  003D                     u70_21:
  2779  003D  2862               	goto	i1l1433
  2780  003E                     u70_20:
  2781  003E                     i1l1419:
  2782  003E  1283               	bcf	3,5	;RP0=0, select bank0
  2783  003F  1303               	bcf	3,6	;RP1=0, select bank0
  2784  0040  1C0C               	btfss	12,0	;volatile
  2785  0041  2843               	goto	u71_21
  2786  0042  2844               	goto	u71_20
  2787  0043                     u71_21:
  2788  0043  2862               	goto	i1l1433
  2789  0044                     u71_20:
  2790  0044                     i1l1421:
  2791                           
  2792                           ;main.c: 27:     {;main.c: 30:         PORTBbits.RB7 = !PORTBbits.RB7;
  2793  0044  1003               	clrc
  2794  0045  1F86               	btfss	6,7	;volatile
  2795  0046  1403               	setc
  2796  0047  1803               	btfsc	3,0
  2797  0048  284A               	goto	u72_21
  2798  0049  284E               	goto	u72_20
  2799  004A                     u72_21:
  2800  004A  1283               	bcf	3,5	;RP0=0, select bank0
  2801  004B  1303               	bcf	3,6	;RP1=0, select bank0
  2802  004C  1786               	bsf	6,7	;volatile
  2803  004D  2851               	goto	u73_24
  2804  004E                     u72_20:
  2805  004E  1283               	bcf	3,5	;RP0=0, select bank0
  2806  004F  1303               	bcf	3,6	;RP1=0, select bank0
  2807  0050  1386               	bcf	6,7	;volatile
  2808  0051                     u73_24:
  2809  0051                     i1l1423:
  2810                           
  2811                           ;main.c: 31:         TMR1 = 0;
  2812  0051  018E               	clrf	14	;volatile
  2813  0052  018F               	clrf	15	;volatile
  2814  0053                     i1l1425:
  2815                           
  2816                           ;main.c: 32:         if (number_of_edges == 1) {
  2817  0053  0379               	decf	_number_of_edges,w
  2818  0054  1D03               	btfss	3,2
  2819  0055  2857               	goto	u74_21
  2820  0056  2858               	goto	u74_20
  2821  0057                     u74_21:
  2822  0057  285F               	goto	i1l1429
  2823  0058                     u74_20:
  2824  0058                     i1l1427:
  2825                           
  2826                           ;main.c: 33:             tm1_overflow_cont++;
  2827  0058  3001               	movlw	1
  2828  0059  07BB               	addwf	_tm1_overflow_cont,f	;volatile
  2829  005A  1803               	skipnc
  2830  005B  0ABC               	incf	_tm1_overflow_cont+1,f	;volatile
  2831  005C  3000               	movlw	0
  2832  005D  07BC               	addwf	_tm1_overflow_cont+1,f	;volatile
  2833                           
  2834                           ;main.c: 34:         }
  2835  005E  2861               	goto	i1l1431
  2836  005F                     i1l1429:
  2837                           
  2838                           ;main.c: 36:             tm1_overflow_cont = 0;
  2839  005F  01BB               	clrf	_tm1_overflow_cont	;volatile
  2840  0060  01BC               	clrf	_tm1_overflow_cont+1	;volatile
  2841  0061                     i1l1431:
  2842                           
  2843                           ;main.c: 38:         PIR1bits.TMR1IF = 0;
  2844  0061  100C               	bcf	12,0	;volatile
  2845  0062                     i1l1433:
  2846                           
  2847                           ;main.c: 41:     if (PIE1bits.CCP1IE && PIR1bits.CCP1IF)
  2848  0062  1683               	bsf	3,5	;RP0=1, select bank1
  2849  0063  1303               	bcf	3,6	;RP1=0, select bank1
  2850  0064  1D0C               	btfss	12,2	;volatile
  2851  0065  2867               	goto	u75_21
  2852  0066  2868               	goto	u75_20
  2853  0067                     u75_21:
  2854  0067  28AE               	goto	i1l1459
  2855  0068                     u75_20:
  2856  0068                     i1l1435:
  2857  0068  1283               	bcf	3,5	;RP0=0, select bank0
  2858  0069  1303               	bcf	3,6	;RP1=0, select bank0
  2859  006A  1D0C               	btfss	12,2	;volatile
  2860  006B  286D               	goto	u76_21
  2861  006C  286E               	goto	u76_20
  2862  006D                     u76_21:
  2863  006D  28AE               	goto	i1l1459
  2864  006E                     u76_20:
  2865  006E                     i1l1437:
  2866                           
  2867                           ;main.c: 42:     {;main.c: 43:         if (number_of_edges == 0) {
  2868  006E  0879               	movf	_number_of_edges,w
  2869  006F  1D03               	btfss	3,2
  2870  0070  2872               	goto	u77_21
  2871  0071  2873               	goto	u77_20
  2872  0072                     u77_21:
  2873  0072  287A               	goto	i1l1443
  2874  0073                     u77_20:
  2875  0073                     i1l1439:
  2876                           
  2877                           ;main.c: 44:             tmr1_counter1 = CCPR1;
  2878  0073  0816               	movf	22,w	;volatile
  2879  0074  00F7               	movwf	_tmr1_counter1+1	;volatile
  2880  0075  0815               	movf	21,w	;volatile
  2881  0076  00F6               	movwf	_tmr1_counter1	;volatile
  2882  0077                     i1l1441:
  2883                           
  2884                           ;main.c: 45:             number_of_edges = 1;
  2885  0077  01F9               	clrf	_number_of_edges
  2886  0078  0AF9               	incf	_number_of_edges,f
  2887                           
  2888                           ;main.c: 46:         }
  2889  0079  28AD               	goto	i1l1457
  2890  007A                     i1l1443:
  2891                           
  2892                           ;main.c: 48:             PORTBbits.RB6 = !PORTBbits.RB6;
  2893  007A  1003               	clrc
  2894  007B  1F06               	btfss	6,6	;volatile
  2895  007C  1403               	setc
  2896  007D  1803               	btfsc	3,0
  2897  007E  2880               	goto	u78_21
  2898  007F  2884               	goto	u78_20
  2899  0080                     u78_21:
  2900  0080  1283               	bcf	3,5	;RP0=0, select bank0
  2901  0081  1303               	bcf	3,6	;RP1=0, select bank0
  2902  0082  1706               	bsf	6,6	;volatile
  2903  0083  2887               	goto	u79_24
  2904  0084                     u78_20:
  2905  0084  1283               	bcf	3,5	;RP0=0, select bank0
  2906  0085  1303               	bcf	3,6	;RP1=0, select bank0
  2907  0086  1306               	bcf	6,6	;volatile
  2908  0087                     u79_24:
  2909  0087                     i1l1445:
  2910                           
  2911                           ;main.c: 49:             tmr1_counter2 = CCPR1;
  2912  0087  0816               	movf	22,w	;volatile
  2913  0088  00BA               	movwf	_tmr1_counter2+1	;volatile
  2914  0089  0815               	movf	21,w	;volatile
  2915  008A  00B9               	movwf	_tmr1_counter2	;volatile
  2916  008B                     i1l1447:
  2917                           
  2918                           ;main.c: 50:             number_of_edges = 0;
  2919  008B  01F9               	clrf	_number_of_edges
  2920  008C                     i1l1449:
  2921                           
  2922                           ;main.c: 51:             two_edges_flag = 1;
  2923  008C  01C2               	clrf	_two_edges_flag
  2924  008D  0AC2               	incf	_two_edges_flag,f
  2925                           
  2926                           ;main.c: 53:             if(tm1_overflow_cont == 0) {
  2927  008E  083B               	movf	_tm1_overflow_cont,w	;volatile
  2928  008F  043C               	iorwf	_tm1_overflow_cont+1,w	;volatile
  2929  0090  1D03               	btfss	3,2
  2930  0091  2893               	goto	u80_21
  2931  0092  2894               	goto	u80_20
  2932  0093                     u80_21:
  2933  0093  289D               	goto	i1l1453
  2934  0094                     u80_20:
  2935  0094                     i1l1451:
  2936                           
  2937                           ;main.c: 54:                 total_cont = tmr1_counter2 - tmr1_counter1;
  2938  0094  0876               	movf	_tmr1_counter1,w	;volatile
  2939  0095  0239               	subwf	_tmr1_counter2,w	;volatile
  2940  0096  00BD               	movwf	_total_cont	;volatile
  2941  0097  0877               	movf	_tmr1_counter1+1,w	;volatile
  2942  0098  1C03               	skipc
  2943  0099  0A77               	incf	_tmr1_counter1+1,w	;volatile
  2944  009A  023A               	subwf	_tmr1_counter2+1,w	;volatile
  2945  009B  00BE               	movwf	_total_cont+1	;volatile
  2946                           
  2947                           ;main.c: 55:             }
  2948  009C  28AD               	goto	i1l1457
  2949  009D                     i1l1453:
  2950                           
  2951                           ;main.c: 57:                 total_cont = 65536 - tmr1_counter1;
  2952  009D  01F0               	clrf	??_myIsr
  2953  009E  01F1               	clrf	??_myIsr+1
  2954  009F  0876               	movf	_tmr1_counter1,w	;volatile
  2955  00A0  0270               	subwf	??_myIsr,w
  2956  00A1  00BD               	movwf	_total_cont	;volatile
  2957  00A2  0877               	movf	_tmr1_counter1+1,w	;volatile
  2958  00A3  1C03               	skipc
  2959  00A4  0A77               	incf	_tmr1_counter1+1,w	;volatile
  2960  00A5  0271               	subwf	??_myIsr+1,w
  2961  00A6  00BE               	movwf	_total_cont+1	;volatile
  2962  00A7                     i1l1455:
  2963                           
  2964                           ;main.c: 58:                 total_cont += tmr1_counter2;
  2965  00A7  0839               	movf	_tmr1_counter2,w	;volatile
  2966  00A8  07BD               	addwf	_total_cont,f	;volatile
  2967  00A9  1803               	skipnc
  2968  00AA  0ABE               	incf	_total_cont+1,f	;volatile
  2969  00AB  083A               	movf	_tmr1_counter2+1,w	;volatile
  2970  00AC  07BE               	addwf	_total_cont+1,f	;volatile
  2971  00AD                     i1l1457:
  2972                           
  2973                           ;main.c: 63:         PIR1bits.CCP1IF = 0;
  2974  00AD  110C               	bcf	12,2	;volatile
  2975  00AE                     i1l1459:
  2976                           
  2977                           ;main.c: 66:     if (PIE2bits.CCP2IE && PIR2bits.CCP2IF)
  2978  00AE  1683               	bsf	3,5	;RP0=1, select bank1
  2979  00AF  1303               	bcf	3,6	;RP1=0, select bank1
  2980  00B0  1C0D               	btfss	13,0	;volatile
  2981  00B1  28B3               	goto	u81_21
  2982  00B2  28B4               	goto	u81_20
  2983  00B3                     u81_21:
  2984  00B3  28B7               	goto	i1l95
  2985  00B4                     u81_20:
  2986  00B4                     i1l1461:
  2987  00B4  1283               	bcf	3,5	;RP0=0, select bank0
  2988  00B5  1303               	bcf	3,6	;RP1=0, select bank0
  2989  00B6  080D               	movf	13,w	;volatile
  2990  00B7                     i1l95:
  2991  00B7  0873               	movf	??_myIsr+3,w
  2992  00B8  008A               	movwf	10
  2993  00B9  0E72               	swapf	??_myIsr+2,w
  2994  00BA  0083               	movwf	3
  2995  00BB  0EFE               	swapf	btemp,f
  2996  00BC  0E7E               	swapf	btemp,w
  2997  00BD  0009               	retfie
  2998  00BE                     __end_of_myIsr:
  2999  007E                     btemp	set	126	;btemp
  3000  007E                     wtemp0	set	126
  3001                           
  3002                           	psect	intentry
  3003  0004                     __pintentry:	
  3004                           ;incstack = 0
  3005 ;; hardware stack exceeded
  3006                           ; Regs used in _myIsr: [wreg+status,2+status,0]
  3007                           
  3008  0004                     interrupt_function:
  3009  007E                     saved_w	set	btemp
  3010  0004  00FE               	movwf	btemp
  3011  0005  0E03               	swapf	3,w
  3012  0006  00F2               	movwf	??_myIsr+2
  3013  0007  080A               	movf	10,w
  3014  0008  00F3               	movwf	??_myIsr+3
  3015  0009  120A  118A  2820   	ljmp	_myIsr
  3016                           
  3017                           	psect	config
  3018                           
  3019                           ;Config register CONFIG @ 0x2007
  3020                           ;	Oscillator Selection bits
  3021                           ;	FOSC = HS, HS oscillator
  3022                           ;	Watchdog Timer Enable bit
  3023                           ;	WDTE = OFF, WDT disabled
  3024                           ;	Power-up Timer Enable bit
  3025                           ;	PWRTE = ON, PWRT enabled
  3026                           ;	Brown-out Reset Enable bit
  3027                           ;	BOREN = ON, BOR enabled
  3028                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  3029                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
  3030                           ;	Data EEPROM Memory Code Protection bit
  3031                           ;	CPD = OFF, Data EEPROM code protection off
  3032                           ;	Flash Program Memory Write Enable bits
  3033                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  3034                           ;	In-Circuit Debugger Mode bit
  3035                           ;	DEBUG = 0x1, unprogrammed default
  3036                           ;	Flash Program Memory Code Protection bit
  3037                           ;	CP = OFF, Code protection off
  3038  2007                     	org	8199
  3039  2007  3FF2               	dw	16370

Data Sizes:
    Strings     17
    Constant    0
    Data        0
    BSS         24
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     25      45
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(1) Largest target is 10
		 -> pulses_char_val(BANK0[10]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 10
		 -> pulses_char_val(BANK0[10]), 

    itoa@buf	PTR unsigned char  size(1) Largest target is 10
		 -> pulses_char_val(BANK0[10]), 

    itoa@cp	PTR unsigned char  size(1) Largest target is 10
		 -> pulses_char_val(BANK0[10]), 

    lcd_puts@vector	PTR unsigned char  size(2) Largest target is 17
		 -> pulses_char_val(BANK0[10]), STR_1(CODE[17]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 10
		 -> pulses_char_val(BANK0[10]), 


Critical Paths under _main in COMMON

    _lcd_puts->_lcd_char
    _lcd_char->_lcd_byte_8bits
    _lcd_char->_lcd_delay_40us
    _lcd_init_8bits->_lcd_cmd
    _lcd_init_8bits->_lcd_delay_2ms
    _lcd_init_4bits->_lcd_cmd
    _lcd_init_4bits->_lcd_delay_2ms
    _lcd_clear->_lcd_cmd
    _lcd_clear->_lcd_delay_2ms
    _lcd_goto->_lcd_cmd
    _lcd_cmd->_lcd_byte_8bits
    _lcd_cmd->_lcd_delay_40us
    _lcd_byte_4bits->_lcd_send_nibble
    _utoa->___lwmod

Critical Paths under _myIsr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_itoa
    _lcd_char->_lcd_byte_4bits
    _lcd_cmd->_lcd_byte_4bits
    _itoa->_utoa
    _utoa->___lwdiv

Critical Paths under _myIsr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _myIsr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myIsr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myIsr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    5183
                                             22 BANK0      3     3      0
                               _init
                               _itoa
                           _lcd_goto
                           _lcd_init
                           _lcd_puts
 ---------------------------------------------------------------------------------
 (1) _lcd_puts                                             9     6      3     871
                                              4 BANK0      9     6      3
                           _lcd_char
 ---------------------------------------------------------------------------------
 (2) _lcd_char                                             1     1      0     347
                                              5 COMMON     1     1      0
                     _lcd_byte_4bits
                     _lcd_byte_8bits
                     _lcd_delay_40us
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0    1512
                     _lcd_init_4bits
                     _lcd_init_8bits
 ---------------------------------------------------------------------------------
 (2) _lcd_init_8bits                                       0     0      0     694
                          _lcd_clear
                            _lcd_cmd
                      _lcd_delay_2ms
                     _lcd_delay_40ms
 ---------------------------------------------------------------------------------
 (2) _lcd_init_4bits                                       0     0      0     818
                          _lcd_clear
                            _lcd_cmd
                      _lcd_delay_2ms
                     _lcd_delay_40ms
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (3) _lcd_delay_40ms                                       3     3      0       0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _lcd_clear                                            0     0      0     347
                            _lcd_cmd
                      _lcd_delay_2ms
 ---------------------------------------------------------------------------------
 (3) _lcd_delay_2ms                                        2     2      0       0
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _lcd_goto                                             4     3      1     682
                                              4 BANK0      4     3      1
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (3) _lcd_cmd                                              1     1      0     347
                                              5 COMMON     1     1      0
                     _lcd_byte_4bits
                     _lcd_byte_8bits
                     _lcd_delay_40us
 ---------------------------------------------------------------------------------
 (3) _lcd_delay_40us                                       1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _lcd_byte_8bits                                       1     1      0      31
                                              4 COMMON     1     1      0
                       _lcd_en_pulse
 ---------------------------------------------------------------------------------
 (3) _lcd_byte_4bits                                       4     4      0     254
                                              0 BANK0      4     4      0
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (4) _lcd_send_nibble                                      1     1      0     124
                                              4 COMMON     1     1      0
                       _lcd_en_pulse
 ---------------------------------------------------------------------------------
 (4) _lcd_en_pulse                                         0     0      0       0
                      _lcd_delay_1us
 ---------------------------------------------------------------------------------
 (5) _lcd_delay_1us                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _itoa                                                 7     3      4    2118
                                             16 BANK0      6     2      4
                               _utoa
 ---------------------------------------------------------------------------------
 (2) _utoa                                                 9     5      4    1669
                                              7 BANK0      9     5      4
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     412
                                              4 COMMON     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     601
                                              4 COMMON     1     1      0
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _myIsr                                                4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init
   _itoa
     _utoa
       ___lwdiv
       ___lwmod
   _lcd_goto
     _lcd_cmd
       _lcd_byte_4bits
         _lcd_send_nibble
           _lcd_en_pulse
             _lcd_delay_1us
       _lcd_byte_8bits
         _lcd_en_pulse
       _lcd_delay_40us
   _lcd_init
     _lcd_init_4bits
       _lcd_clear
         _lcd_cmd
         _lcd_delay_2ms
       _lcd_cmd
       _lcd_delay_2ms
       _lcd_delay_40ms
       _lcd_send_nibble
     _lcd_init_8bits
       _lcd_clear
       _lcd_cmd
       _lcd_delay_2ms
       _lcd_delay_40ms
   _lcd_puts
     _lcd_char
       _lcd_byte_4bits
       _lcd_byte_8bits
       _lcd_delay_40us

 _myIsr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      37       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     19      2D       5       56.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      37      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Jan 28 18:10:44 2022

             lcd_cmd@data 0075              lcd_char@data 0075                         pc 0002  
                      l98 01E1                        fsr 0004                       l211 0325  
                     l140 0466                       l143 0462                       l152 03FD  
                     l146 044E                       l163 0382                       l173 0428  
                     l149 041D                       l166 03CB                       l174 042D  
                     l191 022A                       l169 0444                       l185 0357  
                     l178 0408                       l179 040D                       l188 02AE  
                     l196 045C                       l199 0439                       l751 03A8  
                     l569 0270                       l579 02EA                       l757 0118  
                     l759 012F                       u900 0247                       u901 0246  
                     u830 035D                       u831 035C                       u920 0258  
                     u840 0365                       u921 0257                       u841 0364  
                     u850 0371                       u915 0248                       u851 0370  
                     u940 026C                       u860 0379                       u941 026B  
                     u925 0254                       u861 0378                       u950 02B7  
                     u935 0260                       u951 02B6                       u880 0235  
                     u881 0234                       u970 02C9                       u971 02C8  
                     u875 03AF                       u980 02D3                       u981 02D2  
                     u965 02BB                       u895 0239                       u985 02CF  
                     u995 02DA                       fsr0 0004                       indf 0000  
             lcd_goto@col 0024               lcd_goto@lin 0027                      l1311 01A0  
                    l1321 01AE                      l1313 01A4                      l1209 0445  
                    l1331 01C1                      l1323 01B0                      l1315 01A6  
                    l1341 01CB                      l1333 01C4                      l1325 01B2  
                    l1317 01A8                      l1309 0195                      l1351 01DA  
                    l1343 01CE                      l1335 01C7                      l1327 01B8  
                    l1319 01AB                      l1353 01DC                      l1345 01D1  
                    l1337 01C8                      l1329 01BF                      l1601 02B7  
                    l1521 03F0                      l1355 01DE                      l1347 01D5  
                    l1339 01C9                      l1611 02D3                      l1603 02BA  
                    l1523 03F5                      l1531 0361                      l1195 045D  
                    l1357 01DF                      l1349 01D6                      l1613 02D9  
                    l1605 02C1                      l1701 038A                      l1517 0463  
                    l1541 0374                      l1533 0365                      l1525 0359  
                    l1621 03FF                      l1615 02E0                      l1607 02C5  
                    l1631 00C1                      l1703 0391                      l1519 03ED  
                    l1543 0375                      l1535 036A                      l1527 035D  
                    l1551 03AC                      l1623 0402                      l1711 0130  
                    l1609 02C9                      l1617 02E6                      l1641 00E6  
                    l1633 00C5                      l1705 0395                      l1545 0379  
                    l1537 036D                      l1529 0360                      l1553 03B8  
                    l1561 043F                      l1721 0154                      l1713 0131  
                    l1651 011C                      l1643 00E8                      l1635 00D8  
                    l1707 039A                      l1547 037C                      l1539 0371  
                    l1555 03BE                      l1563 041F                      l1571 042E  
                    l1627 0271                      l1723 015B                      l1731 0182  
                    l1715 0136                      l1581 023F                      l1573 022B  
                    l1653 0123                      l1645 00FB                      l1637 00DC  
                    l1549 037D                      l1557 03C5                      l1565 0422  
                    l1629 01E2                      l1661 0457                      l1725 015C  
                    l1717 013C                      l1591 025F                      l1583 0243  
                    l1575 022F                      l1655 0125                      l1647 010E  
                    l1639 00E2                      l1559 043B                      l1671 02FF  
                    l1727 016A                      l1719 0145                      l1593 0266  
                    l1585 0247                      l1577 0235                      l1657 012B  
                    l1649 0114                      l1673 0307                      l1665 02EE  
                    l1569 040E                      l1729 0173                      l1587 0258  
                    l1579 0238                      l1595 026C                      l1667 02EF  
                    l1691 0345                      l1589 025E                      l1765 0317  
                    l1669 02F7                      l1677 030F                      l1693 034B  
                    l1685 0326                      l1599 02AF                      l1695 0351  
                    l1687 0329                      l1697 0386                      l1689 032B  
                    l1699 0386                      STR_1 03DC                      u1000 02E6  
                    u1001 02E5                      u1010 00E2                      u1011 00E1  
                    u1020 0114                      u1021 0113                      u1030 012B  
                    u1031 012A                      u1040 0335                      u1050 0357  
                    u1107 0449                      u1051 0356                      u1060 038A  
                    u1061 0389                      u1117 045F                      u1070 015B  
                    u1071 015A                      u1087 018A                      u1097 0416  
                    i1l95 00B7                      _TMR1 000E            ??_lcd_en_pulse 0074  
        ?_lcd_send_nibble 0070                      _main 0130                      _init 0195  
                    _var4 0078                      _var5 0041                      _var6 0040  
                    _var7 003F                      _itoa 0383                      btemp 007E  
                    _utoa 00BE               lcd_puts@cnt 002C                      start 000C  
         ??_lcd_delay_2ms 0074           ??_lcd_delay_1us 0074                     ?_main 0070  
                   ?_init 0070                     ?_itoa 0030                     _CCPR1 0015  
                   _CMCON 009C                     ?_utoa 0027                     _T1CON 0010  
         __end_of___lwdiv 0271           __end_of___lwmod 02EB                     _PORTA 0005  
                   _PORTB 0006                     _PORTC 0007                     _PORTD 0008  
                   _PORTE 0009                     u70_20 003E                     u70_21 003D  
                   u71_20 0044                     u71_21 0043                     u80_20 0094  
                   u72_20 004E                     u80_21 0093                     u72_21 004A  
                   u81_20 00B4                     u81_21 00B3                     _TRISA 0085  
                   u73_24 0051                     _TRISB 0086                     _TRISC 0087  
                   _TRISD 0088                     _TRISE 0089                     u74_20 0058  
                   u66_20 0024                     u74_21 0057                     u66_21 0023  
                   u75_20 0068                     u67_20 0028                     u75_21 0067  
                   u67_21 0027                     u76_20 006E                     u68_20 0035  
                   u76_21 006D                     u68_21 0031                     u77_20 0073  
                   u77_21 0072                     u69_24 0038                     u78_20 0084  
                   u78_21 0080                     u79_24 0087           __end_of_lcd_cmd 042E  
                   _myIsr 0020                     pclath 000A                     utoa@c 002E  
                   utoa@v 002C                     status 0003                     wtemp0 007E  
         __initialization 000F              __end_of_main 0195              __end_of_init 01E2  
            __end_of_itoa 03A9              __end_of_utoa 0130          ??_lcd_delay_40ms 0020  
        ??_lcd_delay_40us 0074                    ??_main 0036                    ??_init 0074  
                  ??_itoa 0034                    ??_utoa 002B                    ?_myIsr 0070  
                  _CCPR1H 0016                    _CCPR2H 001C                    _CCPR1L 0015  
                  _CCPR2L 001B                    i1l1411 0024                    i1l1421 0044  
                  i1l1413 0028                    i1l1431 0061                    i1l1423 0051  
                  i1l1415 0029                    i1l1441 0077                    i1l1425 0053  
                  i1l1433 0062                    i1l1417 0038                    i1l1409 0020  
                  i1l1451 0094                    i1l1443 007A                    i1l1435 0068  
                  i1l1427 0058                    i1l1419 003E                    i1l1461 00B4  
                  i1l1453 009D                    i1l1445 0087                    i1l1437 006E  
                  i1l1429 005F                    i1l1455 00A7                    i1l1447 008B  
                  i1l1439 0073                    i1l1449 008C                    i1l1457 00AD  
                  i1l1459 00AE                    _INTCON 000B          __end_of_lcd_char 040E  
        __end_of_lcd_init 045D          __end_of_lcd_goto 0326          __end_of_lcd_puts 0358  
               ??___lwdiv 0074                 ??___lwmod 0074          ??_lcd_byte_4bits 0020  
        ??_lcd_byte_8bits 0074      __end_of_lcd_en_pulse 03FE                 ??_lcd_cmd 0075  
        ??_lcd_init_4bits 0076          ??_lcd_init_8bits 0076                    saved_w 007E  
 __end_of__initialization 001C            __pcstackCOMMON 0070             __end_of_myIsr 00BE  
      __size_of_lcd_clear 000C                   ??_myIsr 0070                __pbssBANK0 0039  
         _number_of_edges 0079                __pmaintext 0130                __pintentry 0004  
                 _CCP1CON 0017                   _CCP2CON 001D           _pulses_char_val 0043  
               ?_lcd_char 0070                 ?_lcd_init 0070                 ?_lcd_goto 0024  
               ?_lcd_puts 0024                __stringtab 03CC         __end_of_lcd_clear 043A  
__size_of_lcd_send_nibble 002B     __size_of_lcd_en_pulse 0011                   ___lwdiv 022B  
                 ___lwmod 02AF            lcd_puts@LENGHT 0026     __end_of_lcd_delay_2ms 044F  
   __end_of_lcd_delay_1us 0467                   __ptext1 0326                   __ptext2 03FE  
                 __ptext3 0457                   __ptext4 0271                   __ptext5 01E2  
                 __ptext6 040E                   __ptext7 042E                   __ptext8 0445  
                 __ptext9 02EB                   _lcd_cmd 041E        lcd_byte_4bits@data 0022  
              ??_lcd_char 0075                   clrloop0 0450                ??_lcd_init 0076  
              ??_lcd_goto 0025                ??_lcd_puts 0027      end_of_initialization 001C  
          lcd_puts@vector 0024                   itoa@buf 0035                   itoa@val 0030  
            _lcd_en_pulse 03ED        lcd_byte_8bits@data 0074                   utoa@buf 002F  
                 utoa@val 0027                 _PORTBbits 0006                _total_cont 003D  
       ??_lcd_send_nibble 0074       start_initialization 000F   __size_of_lcd_delay_40ms 0010  
 __size_of_lcd_delay_40us 0006            _two_edges_flag 0042             _tmr1_counter1 0076  
           _tmr1_counter2 0039               __pbssCOMMON 0076                 ___latbits 0002  
           __pcstackBANK0 0020   __size_of_lcd_byte_4bits 0023   __size_of_lcd_byte_8bits 000B  
 __size_of_lcd_init_4bits 0049   __size_of_lcd_init_8bits 003E         __size_of_lcd_char 0010  
       __size_of_lcd_init 0006         __size_of_lcd_goto 003B         __size_of_lcd_puts 0032  
        ___lwdiv@dividend 0022                  ?___lwdiv 0020                  ?___lwmod 0020  
               _lcd_clear 042E                 __pstrings 03CC                  ?_lcd_cmd 0070  
        ___lwdiv@quotient 0025            __size_of_myIsr 009E         interrupt_function 0004  
               clear_ram0 044F                  _PIE1bits 008C                  _PIE2bits 008D  
    lcd_byte_4bits@nibble 0023                  _PIR1bits 000C                  _PIR2bits 000D  
              ?_lcd_clear 0070       lcd_send_nibble@data 0074               __stringbase 03DB  
          _lcd_delay_40ms 040E            _lcd_delay_40us 045D                 lcd_puts@x 002B  
       _tm1_overflow_cont 003B    __size_of_lcd_delay_2ms 000A    __size_of_lcd_delay_1us 0004  
         _lcd_send_nibble 0358          __size_of___lwdiv 0046          __size_of___lwmod 003C  
      __end_of__stringtab 03DC    __end_of_lcd_delay_40ms 041E    __end_of_lcd_delay_40us 0463  
        __size_of_lcd_cmd 0010           ___lwdiv@divisor 0020           ___lwdiv@counter 0024  
                __ptext10 041E                  __ptext11 045D                  __ptext20 022B  
                __ptext12 043A                  __ptext21 0195                  __ptext13 03A9  
                __ptext22 0020                  __ptext14 0358                  __ptext15 03ED  
                __ptext16 0463                  __ptext17 0383                  __ptext18 00BE  
                __ptext19 02AF            _lcd_byte_4bits 03A9            _lcd_byte_8bits 043A  
                _lcd_char 03FE                  _lcd_init 0457                  _lcd_goto 02EB  
          _lcd_init_4bits 01E2                  _lcd_puts 0326            _lcd_init_8bits 0271  
           __size_of_main 0065             __size_of_init 004D             __size_of_itoa 0026  
           __size_of_utoa 0072               ??_lcd_clear 0076             _lcd_delay_2ms 0445  
           _lcd_delay_1us 0463           ?_lcd_delay_40ms 0070           ?_lcd_delay_40us 0070  
              _INTCONbits 000B    __end_of_lcd_byte_4bits 03CC    __end_of_lcd_byte_8bits 0445  
  __end_of_lcd_init_4bits 022B                  itoa@base 0032    __end_of_lcd_init_8bits 02AF  
                intlevel1 0000   __end_of_lcd_send_nibble 0383          ___lwmod@dividend 0022  
               stringcode 03D6            ?_lcd_delay_2ms 0070            ?_lcd_delay_1us 0070  
                utoa@base 0029                _OPTION_REG 0081           ___lwmod@divisor 0020  
         ___lwmod@counter 0075           ?_lcd_byte_4bits 0070           ?_lcd_byte_8bits 0070  
                stringdir 03D6                  stringtab 03CC           ?_lcd_init_4bits 0070  
         ?_lcd_init_8bits 0070             ?_lcd_en_pulse 0070  
