

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Jan 28 17:39:27 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    18                           	psect	maintext,global,class=CODE,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2,group=3
    21                           	psect	text3,local,class=CODE,merge=1,delta=2,group=3
    22                           	psect	text4,local,class=CODE,merge=1,delta=2,group=3
    23                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    24                           	psect	text6,local,class=CODE,merge=1,delta=2,group=3
    25                           	psect	text7,local,class=CODE,merge=1,delta=2,group=3
    26                           	psect	text8,local,class=CODE,merge=1,delta=2,group=3
    27                           	psect	text9,local,class=CODE,merge=1,delta=2,group=3
    28                           	psect	text10,local,class=CODE,merge=1,delta=2,group=3
    29                           	psect	text11,local,class=CODE,merge=1,delta=2,group=3
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2,group=3
    33                           	psect	text15,local,class=CODE,merge=1,delta=2,group=3
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2,group=3
    43                           	psect	text25,local,class=CODE,merge=1,delta=2,group=3
    44                           	psect	text26,local,class=CODE,merge=1,delta=2,group=1
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2,group=2
    48                           	psect	text30,local,class=CODE,merge=1,delta=2,group=2
    49                           	psect	text31,local,class=CODE,merge=1,delta=2
    50                           	psect	text32,local,class=CODE,merge=1,delta=2
    51                           	psect	text33,local,class=CODE,merge=1,delta=2
    52                           	psect	text34,local,class=CODE,merge=1,delta=2
    53                           	psect	text35,local,class=CODE,merge=1,delta=2
    54                           	psect	text36,local,class=CODE,merge=1,delta=2
    55                           	psect	text37,local,class=CODE,merge=1,delta=2
    56                           	psect	text38,local,class=CODE,merge=1,delta=2
    57                           	psect	text39,local,class=CODE,merge=1,delta=2
    58                           	psect	text40,local,class=CODE,merge=1,delta=2
    59                           	psect	text41,local,class=CODE,merge=1,delta=2,group=3
    60                           	psect	text42,local,class=CODE,merge=1,delta=2,group=3
    61                           	psect	text43,local,class=CODE,merge=1,delta=2,group=3
    62                           	psect	text44,local,class=CODE,merge=1,delta=2,group=3
    63                           	psect	text45,local,class=CODE,merge=1,delta=2,group=3
    64                           	psect	text46,local,class=CODE,merge=1,delta=2,group=3
    65                           	psect	text47,local,class=CODE,merge=1,delta=2,group=3
    66                           	psect	text48,local,class=CODE,merge=1,delta=2,group=3
    67                           	psect	text49,local,class=CODE,merge=1,delta=2,group=3
    68                           	psect	text50,local,class=CODE,merge=1,delta=2,group=3
    69                           	psect	text51,local,class=CODE,merge=1,delta=2,group=3
    70                           	psect	text52,local,class=CODE,merge=1,delta=2
    71                           	psect	intentry,global,class=CODE,delta=2
    72                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    73                           	dabs	1,0x7E,2
    74  0000                     
    75                           ; Version 2.20
    76                           ; Generated 12/02/2020 GMT
    77                           ; 
    78                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    79                           ; All rights reserved.
    80                           ; 
    81                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    82                           ; 
    83                           ; Redistribution and use in source and binary forms, with or without modification, are
    84                           ; permitted provided that the following conditions are met:
    85                           ; 
    86                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    87                           ;        conditions and the following disclaimer.
    88                           ; 
    89                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    90                           ;        of conditions and the following disclaimer in the documentation and/or other
    91                           ;        materials provided with the distribution.
    92                           ; 
    93                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    94                           ;        software without specific prior written permission.
    95                           ; 
    96                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    97                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    98                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    99                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   100                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   101                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   102                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   103                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   104                           ; 
   105                           ; 
   106                           ; Code-generator required, PIC16F877A Definitions
   107                           ; 
   108                           ; SFR Addresses
   109  0000                     	;# 
   110  0001                     	;# 
   111  0002                     	;# 
   112  0003                     	;# 
   113  0004                     	;# 
   114  0005                     	;# 
   115  0006                     	;# 
   116  0007                     	;# 
   117  0008                     	;# 
   118  0009                     	;# 
   119  000A                     	;# 
   120  000B                     	;# 
   121  000C                     	;# 
   122  000D                     	;# 
   123  000E                     	;# 
   124  000E                     	;# 
   125  000F                     	;# 
   126  0010                     	;# 
   127  0011                     	;# 
   128  0012                     	;# 
   129  0013                     	;# 
   130  0014                     	;# 
   131  0015                     	;# 
   132  0015                     	;# 
   133  0016                     	;# 
   134  0017                     	;# 
   135  0018                     	;# 
   136  0019                     	;# 
   137  001A                     	;# 
   138  001B                     	;# 
   139  001B                     	;# 
   140  001C                     	;# 
   141  001D                     	;# 
   142  001E                     	;# 
   143  001F                     	;# 
   144  0081                     	;# 
   145  0085                     	;# 
   146  0086                     	;# 
   147  0087                     	;# 
   148  0088                     	;# 
   149  0089                     	;# 
   150  008C                     	;# 
   151  008D                     	;# 
   152  008E                     	;# 
   153  0091                     	;# 
   154  0092                     	;# 
   155  0093                     	;# 
   156  0094                     	;# 
   157  0098                     	;# 
   158  0099                     	;# 
   159  009C                     	;# 
   160  009D                     	;# 
   161  009E                     	;# 
   162  009F                     	;# 
   163  010C                     	;# 
   164  010D                     	;# 
   165  010E                     	;# 
   166  010F                     	;# 
   167  018C                     	;# 
   168  018D                     	;# 
   169  0000                     	;# 
   170  0001                     	;# 
   171  0002                     	;# 
   172  0003                     	;# 
   173  0004                     	;# 
   174  0005                     	;# 
   175  0006                     	;# 
   176  0007                     	;# 
   177  0008                     	;# 
   178  0009                     	;# 
   179  000A                     	;# 
   180  000B                     	;# 
   181  000C                     	;# 
   182  000D                     	;# 
   183  000E                     	;# 
   184  000E                     	;# 
   185  000F                     	;# 
   186  0010                     	;# 
   187  0011                     	;# 
   188  0012                     	;# 
   189  0013                     	;# 
   190  0014                     	;# 
   191  0015                     	;# 
   192  0015                     	;# 
   193  0016                     	;# 
   194  0017                     	;# 
   195  0018                     	;# 
   196  0019                     	;# 
   197  001A                     	;# 
   198  001B                     	;# 
   199  001B                     	;# 
   200  001C                     	;# 
   201  001D                     	;# 
   202  001E                     	;# 
   203  001F                     	;# 
   204  0081                     	;# 
   205  0085                     	;# 
   206  0086                     	;# 
   207  0087                     	;# 
   208  0088                     	;# 
   209  0089                     	;# 
   210  008C                     	;# 
   211  008D                     	;# 
   212  008E                     	;# 
   213  0091                     	;# 
   214  0092                     	;# 
   215  0093                     	;# 
   216  0094                     	;# 
   217  0098                     	;# 
   218  0099                     	;# 
   219  009C                     	;# 
   220  009D                     	;# 
   221  009E                     	;# 
   222  009F                     	;# 
   223  010C                     	;# 
   224  010D                     	;# 
   225  010E                     	;# 
   226  010F                     	;# 
   227  018C                     	;# 
   228  018D                     	;# 
   229  0000                     	;# 
   230  0001                     	;# 
   231  0002                     	;# 
   232  0003                     	;# 
   233  0004                     	;# 
   234  0005                     	;# 
   235  0006                     	;# 
   236  0007                     	;# 
   237  0008                     	;# 
   238  0009                     	;# 
   239  000A                     	;# 
   240  000B                     	;# 
   241  000C                     	;# 
   242  000D                     	;# 
   243  000E                     	;# 
   244  000E                     	;# 
   245  000F                     	;# 
   246  0010                     	;# 
   247  0011                     	;# 
   248  0012                     	;# 
   249  0013                     	;# 
   250  0014                     	;# 
   251  0015                     	;# 
   252  0015                     	;# 
   253  0016                     	;# 
   254  0017                     	;# 
   255  0018                     	;# 
   256  0019                     	;# 
   257  001A                     	;# 
   258  001B                     	;# 
   259  001B                     	;# 
   260  001C                     	;# 
   261  001D                     	;# 
   262  001E                     	;# 
   263  001F                     	;# 
   264  0081                     	;# 
   265  0085                     	;# 
   266  0086                     	;# 
   267  0087                     	;# 
   268  0088                     	;# 
   269  0089                     	;# 
   270  008C                     	;# 
   271  008D                     	;# 
   272  008E                     	;# 
   273  0091                     	;# 
   274  0092                     	;# 
   275  0093                     	;# 
   276  0094                     	;# 
   277  0098                     	;# 
   278  0099                     	;# 
   279  009C                     	;# 
   280  009D                     	;# 
   281  009E                     	;# 
   282  009F                     	;# 
   283  010C                     	;# 
   284  010D                     	;# 
   285  010E                     	;# 
   286  010F                     	;# 
   287  018C                     	;# 
   288  018D                     	;# 
   289                           
   290                           	psect	idataBANK0
   291  1792                     __pidataBANK0:
   292                           
   293                           ;initializer for _float_value
   294  1792  3479               	retlw	121
   295  1793  34E9               	retlw	233
   296  1794  34F6               	retlw	246
   297  1795  3442               	retlw	66
   298                           
   299                           ;initializer for _long_value1
   300  1796  3415               	retlw	21
   301  1797  34CD               	retlw	205
   302  1798  345B               	retlw	91
   303  1799  3407               	retlw	7
   304                           
   305                           ;initializer for _unsigned_value
   306  179A  34DB               	retlw	219
   307  179B  3403               	retlw	3
   308                           
   309                           ;initializer for _int_value
   310  179C  34D2               	retlw	210
   311  179D  3404               	retlw	4
   312                           
   313                           	psect	idataBANK1
   314  092A                     __pidataBANK1:
   315                           
   316                           ;initializer for string_testing@F1253
   317  092A  3464               	retlw	100
   318  092B  3465               	retlw	101
   319  092C  3466               	retlw	102
   320  092D  3400               	retlw	0
   321  092E  3400               	retlw	0
   322  092F  3400               	retlw	0
   323  0930  3400               	retlw	0
   324  0931  3400               	retlw	0
   325  0932  3400               	retlw	0
   326  0933  3400               	retlw	0
   327                           
   328                           ;initializer for string_testing@F1251
   329  0934  3461               	retlw	97
   330  0935  3462               	retlw	98
   331  0936  3463               	retlw	99
   332  0937  3400               	retlw	0
   333  0938  3400               	retlw	0
   334  0939  3400               	retlw	0
   335  093A  3400               	retlw	0
   336  093B  3400               	retlw	0
   337  093C  3400               	retlw	0
   338  093D  3400               	retlw	0
   339                           
   340                           	psect	stringtext
   341  0700                     __pstringtext:
   342  0700                     stringtab:
   343  0700                     __stringtab:
   344                           
   345                           ;	String table - string pointers are 2 bytes each
   346  0700  1BFF               	btfsc	btemp+1,7
   347  0701  2F0A               	ljmp	stringcode
   348  0702  1383               	bcf	3,7
   349  0703  187F               	btfsc	btemp+1,0
   350  0704  1783               	bsf	3,7
   351  0705  0800               	movf	0,w
   352  0706  0A84               	incf	4,f
   353  0707  1903               	skipnz
   354  0708  0AFF               	incf	btemp+1,f
   355  0709  0008               	return
   356  070A                     stringcode:
   357  070A  087F               	movf	btemp+1,w
   358  070B  397F               	andlw	127
   359  070C  008A               	movwf	10
   360  070D  0804               	movf	4,w
   361  070E  0A84               	incf	4,f
   362  070F  1903               	skipnz
   363  0710  0AFF               	incf	btemp+1,f
   364  0711  0082               	movwf	2
   365  0712                     __stringbase:
   366  0712                     __end_of__stringtab:
   367  0712                     _dpowers:
   368  0712  3401               	retlw	1
   369  0713  3400               	retlw	0
   370  0714  340A               	retlw	10
   371  0715  3400               	retlw	0
   372  0716  3464               	retlw	100
   373  0717  3400               	retlw	0
   374  0718  34E8               	retlw	232
   375  0719  3403               	retlw	3
   376  071A  3410               	retlw	16
   377  071B  3427               	retlw	39
   378  071C                     __end_of_dpowers:
   379  0009                     _PORTEbits	set	9
   380  001F                     _ADCON0	set	31
   381  000B                     _INTCON	set	11
   382  0008                     _PORTD	set	8
   383  0009                     _PORTE	set	9
   384  0007                     _PORTC	set	7
   385  0006                     _PORTB	set	6
   386  0005                     _PORTA	set	5
   387  001E                     _ADRESH	set	30
   388  001F                     _ADCON0bits	set	31
   389  0006                     _PORTBbits	set	6
   390  000B                     _INTCONbits	set	11
   391  009F                     _ADCON1	set	159
   392  009C                     _CMCON	set	156
   393  0081                     _OPTION_REG	set	129
   394  0089                     _TRISE	set	137
   395  0087                     _TRISC	set	135
   396  0086                     _TRISB	set	134
   397  0085                     _TRISA	set	133
   398  0088                     _TRISD	set	136
   399  009E                     _ADRESL	set	158
   400  071C                     STR_3:
   401  071C  3458               	retlw	88	;'X'
   402  071D  3443               	retlw	67	;'C'
   403  071E  3438               	retlw	56	;'8'
   404  071F  3420               	retlw	32	;' '
   405  0720  344C               	retlw	76	;'L'
   406  0721  3449               	retlw	73	;'I'
   407  0722  3442               	retlw	66	;'B'
   408  0723  3453               	retlw	83	;'S'
   409  0724  3420               	retlw	32	;' '
   410  0725  3454               	retlw	84	;'T'
   411  0726  3445               	retlw	69	;'E'
   412  0727  3453               	retlw	83	;'S'
   413  0728  3454               	retlw	84	;'T'
   414  0729  3449               	retlw	73	;'I'
   415  072A  344E               	retlw	78	;'N'
   416  072B  3447               	retlw	71	;'G'
   417  072C  3400               	retlw	0
   418  072D                     STR_13:
   419  072D  3469               	retlw	105	;'i'
   420  072E  3473               	retlw	115	;'s'
   421  072F  3478               	retlw	120	;'x'
   422  0730  3464               	retlw	100	;'d'
   423  0731  3469               	retlw	105	;'i'
   424  0732  3467               	retlw	103	;'g'
   425  0733  3469               	retlw	105	;'i'
   426  0734  3474               	retlw	116	;'t'
   427  0735  3428               	retlw	40	;'('
   428  0736  3463               	retlw	99	;'c'
   429  0737  3429               	retlw	41	;')'
   430  0738  343F               	retlw	63	;'?'
   431  0739  3420               	retlw	32	;' '
   432  073A  3425               	retlw	37	;'%'
   433  073B  3464               	retlw	100	;'d'
   434  073C  3400               	retlw	0
   435  073D                     STR_1:
   436  073D  3441               	retlw	65	;'A'
   437  073E  342F               	retlw	47	;'/'
   438  073F  3444               	retlw	68	;'D'
   439  0740  3420               	retlw	32	;' '
   440  0741  3443               	retlw	67	;'C'
   441  0742  344F               	retlw	79	;'O'
   442  0743  344E               	retlw	78	;'N'
   443  0744  3456               	retlw	86	;'V'
   444  0745  3445               	retlw	69	;'E'
   445  0746  3452               	retlw	82	;'R'
   446  0747  3453               	retlw	83	;'S'
   447  0748  3449               	retlw	73	;'I'
   448  0749  344F               	retlw	79	;'O'
   449  074A  344E               	retlw	78	;'N'
   450  074B  3400               	retlw	0
   451  074C                     STR_22:
   452  074C  3461               	retlw	97	;'a'
   453  074D  3420               	retlw	32	;' '
   454  074E  3474               	retlw	116	;'t'
   455  074F  346F               	retlw	111	;'o'
   456  0750  3420               	retlw	32	;' '
   457  0751  3475               	retlw	117	;'u'
   458  0752  3470               	retlw	112	;'p'
   459  0753  3470               	retlw	112	;'p'
   460  0754  3465               	retlw	101	;'e'
   461  0755  3472               	retlw	114	;'r'
   462  0756  343A               	retlw	58	;':'
   463  0757  3420               	retlw	32	;' '
   464  0758  3425               	retlw	37	;'%'
   465  0759  3463               	retlw	99	;'c'
   466  075A  3400               	retlw	0
   467  075B                     STR_21:
   468  075B  3441               	retlw	65	;'A'
   469  075C  3420               	retlw	32	;' '
   470  075D  3474               	retlw	116	;'t'
   471  075E  346F               	retlw	111	;'o'
   472  075F  3420               	retlw	32	;' '
   473  0760  346C               	retlw	108	;'l'
   474  0761  346F               	retlw	111	;'o'
   475  0762  3477               	retlw	119	;'w'
   476  0763  3465               	retlw	101	;'e'
   477  0764  3472               	retlw	114	;'r'
   478  0765  343A               	retlw	58	;':'
   479  0766  3420               	retlw	32	;' '
   480  0767  3425               	retlw	37	;'%'
   481  0768  3463               	retlw	99	;'c'
   482  0769  3400               	retlw	0
   483  076A                     STR_19:
   484  076A  3469               	retlw	105	;'i'
   485  076B  3473               	retlw	115	;'s'
   486  076C  3461               	retlw	97	;'a'
   487  076D  346C               	retlw	108	;'l'
   488  076E  3470               	retlw	112	;'p'
   489  076F  3468               	retlw	104	;'h'
   490  0770  3461               	retlw	97	;'a'
   491  0771  3428               	retlw	40	;'('
   492  0772  3463               	retlw	99	;'c'
   493  0773  3429               	retlw	41	;')'
   494  0774  343F               	retlw	63	;'?'
   495  0775  3420               	retlw	32	;' '
   496  0776  3425               	retlw	37	;'%'
   497  0777  3464               	retlw	100	;'d'
   498  0778  3400               	retlw	0
   499  0779                     STR_11:
   500  0779  3469               	retlw	105	;'i'
   501  077A  3473               	retlw	115	;'s'
   502  077B  3473               	retlw	115	;'s'
   503  077C  3470               	retlw	112	;'p'
   504  077D  3461               	retlw	97	;'a'
   505  077E  3463               	retlw	99	;'c'
   506  077F  3465               	retlw	101	;'e'
   507  0780  3428               	retlw	40	;'('
   508  0781  3463               	retlw	99	;'c'
   509  0782  3429               	retlw	41	;')'
   510  0783  343F               	retlw	63	;'?'
   511  0784  3420               	retlw	32	;' '
   512  0785  3425               	retlw	37	;'%'
   513  0786  3464               	retlw	100	;'d'
   514  0787  3400               	retlw	0
   515  0788                     STR_9:
   516  0788  3469               	retlw	105	;'i'
   517  0789  3473               	retlw	115	;'s'
   518  078A  3467               	retlw	103	;'g'
   519  078B  3472               	retlw	114	;'r'
   520  078C  3461               	retlw	97	;'a'
   521  078D  3470               	retlw	112	;'p'
   522  078E  3468               	retlw	104	;'h'
   523  078F  3428               	retlw	40	;'('
   524  0790  3463               	retlw	99	;'c'
   525  0791  3429               	retlw	41	;')'
   526  0792  343F               	retlw	63	;'?'
   527  0793  3420               	retlw	32	;' '
   528  0794  3425               	retlw	37	;'%'
   529  0795  3464               	retlw	100	;'d'
   530  0796  3400               	retlw	0
   531  0797                     STR_20:
   532  0797  3469               	retlw	105	;'i'
   533  0798  3473               	retlw	115	;'s'
   534  0799  3461               	retlw	97	;'a'
   535  079A  3473               	retlw	115	;'s'
   536  079B  3463               	retlw	99	;'c'
   537  079C  3469               	retlw	105	;'i'
   538  079D  3469               	retlw	105	;'i'
   539  079E  3428               	retlw	40	;'('
   540  079F  3463               	retlw	99	;'c'
   541  07A0  3429               	retlw	41	;')'
   542  07A1  343F               	retlw	63	;'?'
   543  07A2  3420               	retlw	32	;' '
   544  07A3  3425               	retlw	37	;'%'
   545  07A4  3464               	retlw	100	;'d'
   546  07A5  3400               	retlw	0
   547  07A6                     STR_14:
   548  07A6  3469               	retlw	105	;'i'
   549  07A7  3473               	retlw	115	;'s'
   550  07A8  3463               	retlw	99	;'c'
   551  07A9  346E               	retlw	110	;'n'
   552  07AA  3474               	retlw	116	;'t'
   553  07AB  3472               	retlw	114	;'r'
   554  07AC  346C               	retlw	108	;'l'
   555  07AD  3428               	retlw	40	;'('
   556  07AE  3463               	retlw	99	;'c'
   557  07AF  3429               	retlw	41	;')'
   558  07B0  343F               	retlw	63	;'?'
   559  07B1  3420               	retlw	32	;' '
   560  07B2  3425               	retlw	37	;'%'
   561  07B3  3464               	retlw	100	;'d'
   562  07B4  3400               	retlw	0
   563  07B5                     STR_18:
   564  07B5  3469               	retlw	105	;'i'
   565  07B6  3473               	retlw	115	;'s'
   566  07B7  3461               	retlw	97	;'a'
   567  07B8  346C               	retlw	108	;'l'
   568  07B9  346E               	retlw	110	;'n'
   569  07BA  3475               	retlw	117	;'u'
   570  07BB  346D               	retlw	109	;'m'
   571  07BC  3428               	retlw	40	;'('
   572  07BD  3463               	retlw	99	;'c'
   573  07BE  3429               	retlw	41	;')'
   574  07BF  343F               	retlw	63	;'?'
   575  07C0  3420               	retlw	32	;' '
   576  07C1  3425               	retlw	37	;'%'
   577  07C2  3464               	retlw	100	;'d'
   578  07C3  3400               	retlw	0
   579  07C4                     STR_12:
   580  07C4  3469               	retlw	105	;'i'
   581  07C5  3473               	retlw	115	;'s'
   582  07C6  3475               	retlw	117	;'u'
   583  07C7  3470               	retlw	112	;'p'
   584  07C8  3470               	retlw	112	;'p'
   585  07C9  3465               	retlw	101	;'e'
   586  07CA  3472               	retlw	114	;'r'
   587  07CB  3428               	retlw	40	;'('
   588  07CC  3463               	retlw	99	;'c'
   589  07CD  3429               	retlw	41	;')'
   590  07CE  343F               	retlw	63	;'?'
   591  07CF  3420               	retlw	32	;' '
   592  07D0  3425               	retlw	37	;'%'
   593  07D1  3464               	retlw	100	;'d'
   594  07D2  3400               	retlw	0
   595  07D3                     STR_16:
   596  07D3  3469               	retlw	105	;'i'
   597  07D4  3473               	retlw	115	;'s'
   598  07D5  346C               	retlw	108	;'l'
   599  07D6  346F               	retlw	111	;'o'
   600  07D7  3477               	retlw	119	;'w'
   601  07D8  3465               	retlw	101	;'e'
   602  07D9  3472               	retlw	114	;'r'
   603  07DA  3428               	retlw	40	;'('
   604  07DB  3463               	retlw	99	;'c'
   605  07DC  3429               	retlw	41	;')'
   606  07DD  343F               	retlw	63	;'?'
   607  07DE  3420               	retlw	32	;' '
   608  07DF  3425               	retlw	37	;'%'
   609  07E0  3464               	retlw	100	;'d'
   610  07E1  3400               	retlw	0
   611  07E2                     STR_10:
   612  07E2  3469               	retlw	105	;'i'
   613  07E3  3473               	retlw	115	;'s'
   614  07E4  3470               	retlw	112	;'p'
   615  07E5  3475               	retlw	117	;'u'
   616  07E6  346E               	retlw	110	;'n'
   617  07E7  3463               	retlw	99	;'c'
   618  07E8  3474               	retlw	116	;'t'
   619  07E9  3428               	retlw	40	;'('
   620  07EA  3463               	retlw	99	;'c'
   621  07EB  3429               	retlw	41	;')'
   622  07EC  343F               	retlw	63	;'?'
   623  07ED  3420               	retlw	32	;' '
   624  07EE  3425               	retlw	37	;'%'
   625  07EF  3464               	retlw	100	;'d'
   626  07F0  3400               	retlw	0
   627  07F1                     STR_15:
   628  07F1  3469               	retlw	105	;'i'
   629  07F2  3473               	retlw	115	;'s'
   630  07F3  3464               	retlw	100	;'d'
   631  07F4  3469               	retlw	105	;'i'
   632  07F5  3467               	retlw	103	;'g'
   633  07F6  3469               	retlw	105	;'i'
   634  07F7  3474               	retlw	116	;'t'
   635  07F8  3428               	retlw	40	;'('
   636  07F9  3463               	retlw	99	;'c'
   637  07FA  3429               	retlw	41	;')'
   638  07FB  343F               	retlw	63	;'?'
   639  07FC  3420               	retlw	32	;' '
   640  07FD  3425               	retlw	37	;'%'
   641  07FE  3464               	retlw	100	;'d'
   642  07FF  3400               	retlw	0
   643  0800                     STR_17:
   644  0800  3469               	retlw	105	;'i'
   645  0801  3473               	retlw	115	;'s'
   646  0802  3470               	retlw	112	;'p'
   647  0803  3472               	retlw	114	;'r'
   648  0804  3469               	retlw	105	;'i'
   649  0805  346E               	retlw	110	;'n'
   650  0806  3474               	retlw	116	;'t'
   651  0807  3428               	retlw	40	;'('
   652  0808  3463               	retlw	99	;'c'
   653  0809  3429               	retlw	41	;')'
   654  080A  343F               	retlw	63	;'?'
   655  080B  3420               	retlw	32	;' '
   656  080C  3425               	retlw	37	;'%'
   657  080D  3464               	retlw	100	;'d'
   658  080E  3400               	retlw	0
   659  080F                     STR_23:
   660  080F  3461               	retlw	97	;'a'
   661  0810  3420               	retlw	32	;' '
   662  0811  3474               	retlw	116	;'t'
   663  0812  346F               	retlw	111	;'o'
   664  0813  3420               	retlw	32	;' '
   665  0814  3461               	retlw	97	;'a'
   666  0815  3473               	retlw	115	;'s'
   667  0816  3463               	retlw	99	;'c'
   668  0817  3469               	retlw	105	;'i'
   669  0818  3469               	retlw	105	;'i'
   670  0819  3420               	retlw	32	;' '
   671  081A  3425               	retlw	37	;'%'
   672  081B  3464               	retlw	100	;'d'
   673  081C  3400               	retlw	0
   674  081D                     STR_2:
   675  081D  3441               	retlw	65	;'A'
   676  081E  3444               	retlw	68	;'D'
   677  081F  3420               	retlw	32	;' '
   678  0820  3476               	retlw	118	;'v'
   679  0821  3461               	retlw	97	;'a'
   680  0822  346C               	retlw	108	;'l'
   681  0823  3475               	retlw	117	;'u'
   682  0824  3465               	retlw	101	;'e'
   683  0825  343A               	retlw	58	;':'
   684  0826  3420               	retlw	32	;' '
   685  0827  3425               	retlw	37	;'%'
   686  0828  3473               	retlw	115	;'s'
   687  0829  3400               	retlw	0
   688  082A                     STR_25:
   689  082A  3453               	retlw	83	;'S'
   690  082B  3454               	retlw	84	;'T'
   691  082C  3452               	retlw	82	;'R'
   692  082D  3449               	retlw	73	;'I'
   693  082E  344E               	retlw	78	;'N'
   694  082F  3447               	retlw	71	;'G'
   695  0830  3420               	retlw	32	;' '
   696  0831  344C               	retlw	76	;'L'
   697  0832  3449               	retlw	73	;'I'
   698  0833  3442               	retlw	66	;'B'
   699  0834  3400               	retlw	0
   700  0835                     STR_33:
   701  0835  346C               	retlw	108	;'l'
   702  0836  3465               	retlw	101	;'e'
   703  0837  346E               	retlw	110	;'n'
   704  0838  3467               	retlw	103	;'g'
   705  0839  3474               	retlw	116	;'t'
   706  083A  3468               	retlw	104	;'h'
   707  083B  343A               	retlw	58	;':'
   708  083C  3420               	retlw	32	;' '
   709  083D  3425               	retlw	37	;'%'
   710  083E  3464               	retlw	100	;'d'
   711  083F  3400               	retlw	0
   712  0840                     STR_8:
   713  0840  3443               	retlw	67	;'C'
   714  0841  3454               	retlw	84	;'T'
   715  0842  3459               	retlw	89	;'Y'
   716  0843  3450               	retlw	80	;'P'
   717  0844  3445               	retlw	69	;'E'
   718  0845  3420               	retlw	32	;' '
   719  0846  344C               	retlw	76	;'L'
   720  0847  3449               	retlw	73	;'I'
   721  0848  3442               	retlw	66	;'B'
   722  0849  3400               	retlw	0
   723  084A                     STR_6:
   724  084A  344D               	retlw	77	;'M'
   725  084B  3441               	retlw	65	;'A'
   726  084C  3454               	retlw	84	;'T'
   727  084D  3448               	retlw	72	;'H'
   728  084E  3420               	retlw	32	;' '
   729  084F  344C               	retlw	76	;'L'
   730  0850  3449               	retlw	73	;'I'
   731  0851  3442               	retlw	66	;'B'
   732  0852  3400               	retlw	0
   733  0853                     STR_46:
   734  0853  346D               	retlw	109	;'m'
   735  0854  3465               	retlw	101	;'e'
   736  0855  346D               	retlw	109	;'m'
   737  0856  346D               	retlw	109	;'m'
   738  0857  346F               	retlw	111	;'o'
   739  0858  3476               	retlw	118	;'v'
   740  0859  3465               	retlw	101	;'e'
   741  085A  3400               	retlw	0
   742  085B                     STR_51:
   743  085B  3428               	retlw	40	;'('
   744  085C  346E               	retlw	110	;'n'
   745  085D  3475               	retlw	117	;'u'
   746  085E  346C               	retlw	108	;'l'
   747  085F  346C               	retlw	108	;'l'
   748  0860  3429               	retlw	41	;')'
   749  0861  3400               	retlw	0
   750  0862                     STR_48:
   751  0862  3474               	retlw	116	;'t'
   752  0863  3465               	retlw	101	;'e'
   753  0864  3473               	retlw	115	;'s'
   754  0865  3474               	retlw	116	;'t'
   755  0866  3465               	retlw	101	;'e'
   756  0867  3432               	retlw	50	;'2'
   757  0868  3400               	retlw	0
   758  0869                     STR_4:
   759  0869  3453               	retlw	83	;'S'
   760  086A  3454               	retlw	84	;'T'
   761  086B  3444               	retlw	68	;'D'
   762  086C  344C               	retlw	76	;'L'
   763  086D  3449               	retlw	73	;'I'
   764  086E  3442               	retlw	66	;'B'
   765  086F  3400               	retlw	0
   766  0870                     STR_32:
   767  0870  3473               	retlw	115	;'s'
   768  0871  3474               	retlw	116	;'t'
   769  0872  3472               	retlw	114	;'r'
   770  0873  346C               	retlw	108	;'l'
   771  0874  3465               	retlw	101	;'e'
   772  0875  346E               	retlw	110	;'n'
   773  0876  3400               	retlw	0
   774  0877                     STR_37:
   775  0877  346D               	retlw	109	;'m'
   776  0878  3465               	retlw	101	;'e'
   777  0879  346D               	retlw	109	;'m'
   778  087A  3463               	retlw	99	;'c'
   779  087B  346D               	retlw	109	;'m'
   780  087C  3470               	retlw	112	;'p'
   781  087D  3400               	retlw	0
   782  087E                     STR_34:
   783  087E  3473               	retlw	115	;'s'
   784  087F  3474               	retlw	116	;'t'
   785  0880  3472               	retlw	114	;'r'
   786  0881  3463               	retlw	99	;'c'
   787  0882  346D               	retlw	109	;'m'
   788  0883  3470               	retlw	112	;'p'
   789  0884  3400               	retlw	0
   790  0885                     STR_30:
   791  0885  346D               	retlw	109	;'m'
   792  0886  3465               	retlw	101	;'e'
   793  0887  346D               	retlw	109	;'m'
   794  0888  3463               	retlw	99	;'c'
   795  0889  3468               	retlw	104	;'h'
   796  088A  3472               	retlw	114	;'r'
   797  088B  3400               	retlw	0
   798  088C                     STR_28:
   799  088C  3473               	retlw	115	;'s'
   800  088D  3474               	retlw	116	;'t'
   801  088E  3472               	retlw	114	;'r'
   802  088F  3463               	retlw	99	;'c'
   803  0890  3468               	retlw	104	;'h'
   804  0891  3472               	retlw	114	;'r'
   805  0892  3400               	retlw	0
   806  0893                     STR_26:
   807  0893  3473               	retlw	115	;'s'
   808  0894  3474               	retlw	116	;'t'
   809  0895  3472               	retlw	114	;'r'
   810  0896  3463               	retlw	99	;'c'
   811  0897  3461               	retlw	97	;'a'
   812  0898  3474               	retlw	116	;'t'
   813  0899  3400               	retlw	0
   814  089A                     STR_49:
   815  089A  346D               	retlw	109	;'m'
   816  089B  3465               	retlw	101	;'e'
   817  089C  346D               	retlw	109	;'m'
   818  089D  3473               	retlw	115	;'s'
   819  089E  3465               	retlw	101	;'e'
   820  089F  3474               	retlw	116	;'t'
   821  08A0  3400               	retlw	0
   822  08A1                     STR_43:
   823  08A1  346D               	retlw	109	;'m'
   824  08A2  3465               	retlw	101	;'e'
   825  08A3  346D               	retlw	109	;'m'
   826  08A4  3463               	retlw	99	;'c'
   827  08A5  3470               	retlw	112	;'p'
   828  08A6  3479               	retlw	121	;'y'
   829  08A7  3400               	retlw	0
   830  08A8                     STR_40:
   831  08A8  3473               	retlw	115	;'s'
   832  08A9  3474               	retlw	116	;'t'
   833  08AA  3472               	retlw	114	;'r'
   834  08AB  3463               	retlw	99	;'c'
   835  08AC  3470               	retlw	112	;'p'
   836  08AD  3479               	retlw	121	;'y'
   837  08AE  3400               	retlw	0
   838  08AF                     STR_42:
   839  08AF  3474               	retlw	116	;'t'
   840  08B0  3465               	retlw	101	;'e'
   841  08B1  3473               	retlw	115	;'s'
   842  08B2  3474               	retlw	116	;'t'
   843  08B3  3465               	retlw	101	;'e'
   844  08B4  3400               	retlw	0
   845  08B5                     STR_36:
   846  08B5  3461               	retlw	97	;'a'
   847  08B6  3462               	retlw	98	;'b'
   848  08B7  3463               	retlw	99	;'c'
   849  08B8  3464               	retlw	100	;'d'
   850  08B9  3400               	retlw	0
   851  08BA                     STR_39:
   852  08BA  3461               	retlw	97	;'a'
   853  08BB  3462               	retlw	98	;'b'
   854  08BC  3400               	retlw	0
   855  071C                     
   856                           	psect	cinit
   857  000F                     start_initialization:	
   858                           ; #config settings
   859                           
   860  000F                     __initialization:
   861                           
   862                           ; Initialize objects allocated to BANK1
   863  000F  1383               	bcf	3,7	;select IRP bank0
   864  0010  30F0               	movlw	low (__pdataBANK1+20)
   865  0011  00FD               	movwf	btemp+-1
   866  0012  3009               	movlw	high __pidataBANK1
   867  0013  00FE               	movwf	btemp
   868  0014  302A               	movlw	low __pidataBANK1
   869  0015  00FF               	movwf	btemp+1
   870  0016  30DC               	movlw	low __pdataBANK1
   871  0017  0084               	movwf	4
   872  0018  120A  158A  211B  120A  118A  	fcall	init_ram0
   873                           
   874                           ; Initialize objects allocated to BANK0
   875  001D  3070               	movlw	low (__pdataBANK0+12)
   876  001E  00FD               	movwf	btemp+-1
   877  001F  3017               	movlw	high __pidataBANK0
   878  0020  00FE               	movwf	btemp
   879  0021  3092               	movlw	low __pidataBANK0
   880  0022  00FF               	movwf	btemp+1
   881  0023  3064               	movlw	low __pdataBANK0
   882  0024  0084               	movwf	4
   883  0025  120A  158A  211B  120A  118A  	fcall	init_ram0
   884                           
   885                           ; Clear objects allocated to BANK3
   886  002A  1783               	bsf	3,7	;select IRP bank2
   887  002B  3090               	movlw	low __pbssBANK3
   888  002C  0084               	movwf	4
   889  002D  309A               	movlw	low (__pbssBANK3+10)
   890  002E  160A  118A  275E  120A  118A  	fcall	clear_ram0
   891                           
   892                           ; Clear objects allocated to BANK1
   893  0033  1383               	bcf	3,7	;select IRP bank0
   894  0034  30A0               	movlw	low __pbssBANK1
   895  0035  0084               	movwf	4
   896  0036  30DC               	movlw	low (__pbssBANK1+60)
   897  0037  160A  118A  275E  120A  118A  	fcall	clear_ram0
   898                           
   899                           ; Clear objects allocated to BANK0
   900  003C  304E               	movlw	low __pbssBANK0
   901  003D  0084               	movwf	4
   902  003E  3064               	movlw	low (__pbssBANK0+22)
   903  003F  160A  118A  275E  120A  118A  	fcall	clear_ram0
   904                           
   905                           ; Clear objects allocated to COMMON
   906  0044  01FA               	clrf	__pbssCOMMON& (0+127)
   907  0045  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   908  0046                     end_of_initialization:	
   909                           ;End of C runtime variable initialization code
   910                           
   911  0046                     __end_of__initialization:
   912  0046  0183               	clrf	3
   913  0047  120A  158A  2B22   	ljmp	_main	;jump to C main() function
   914                           
   915                           	psect	bssCOMMON
   916  007A                     __pbssCOMMON:
   917  007A                     _status:
   918  007A                     	ds	1
   919  007B                     _str_unsigned:
   920  007B                     	ds	1
   921                           
   922                           	psect	bssBANK0
   923  004E                     __pbssBANK0:
   924  004E                     _long_value2:
   925  004E                     	ds	4
   926  0052                     _neg_abs:
   927  0052                     	ds	2
   928  0054                     _pos_abs:
   929  0054                     	ds	2
   930  0056                     _var7:
   931  0056                     	ds	1
   932  0057                     _var6:
   933  0057                     	ds	1
   934  0058                     _var5:
   935  0058                     	ds	1
   936  0059                     _var4:
   937  0059                     	ds	1
   938  005A                     _long_char2:
   939  005A                     	ds	1
   940  005B                     _long_char1:
   941  005B                     	ds	1
   942  005C                     _int_char:
   943  005C                     	ds	1
   944  005D                     _ad_char_val:
   945  005D                     	ds	5
   946  0062                     _ad_value:
   947  0062                     	ds	2
   948                           
   949                           	psect	dataBANK0
   950  0064                     __pdataBANK0:
   951  0064                     _float_value:
   952  0064                     	ds	4
   953  0068                     _long_value1:
   954  0068                     	ds	4
   955  006C                     _unsigned_value:
   956  006C                     	ds	2
   957  006E                     _int_value:
   958  006E                     	ds	2
   959                           
   960                           	psect	bssBANK1
   961  00A0                     __pbssBANK1:
   962  00A0                     _str_hex2:
   963  00A0                     	ds	10
   964  00AA                     _str_dec2:
   965  00AA                     	ds	10
   966  00B4                     _str_hex1:
   967  00B4                     	ds	10
   968  00BE                     _str_dec1:
   969  00BE                     	ds	10
   970  00C8                     _neg_fabs:
   971  00C8                     	ds	4
   972  00CC                     _pos_fabs:
   973  00CC                     	ds	4
   974  00D0                     _neg_labs:
   975  00D0                     	ds	4
   976  00D4                     _pos_labs:
   977  00D4                     	ds	4
   978  00D8                     _random_num:
   979  00D8                     	ds	4
   980                           
   981                           	psect	dataBANK1
   982  00DC                     __pdataBANK1:
   983  00DC                     string_testing@F1253:
   984  00DC                     	ds	10
   985  00E6                     string_testing@F1251:
   986  00E6                     	ds	10
   987                           
   988                           	psect	bssBANK3
   989  0190                     __pbssBANK3:
   990  0190                     _str_float:
   991  0190                     	ds	10
   992                           
   993                           	psect	inittext
   994  0917                     init_fetch0:	
   995                           ;	Called with low address in FSR and high address in W
   996                           
   997  0917  087E               	movf	btemp,w
   998  0918  008A               	movwf	10
   999  0919  087F               	movf	btemp+1,w
  1000  091A  0082               	movwf	2
  1001  091B                     init_ram0:	
  1002                           ;Called with:
  1003                           ;	high address of idata address in btemp 
  1004                           ;	low address of idata address in btemp+1 
  1005                           ;	low address of data in FSR
  1006                           ;	high address + 1 of data in btemp-1
  1007                           
  1008  091B  120A  158A  2117  120A  158A  	fcall	init_fetch0
  1009  0920  0080               	movwf	0
  1010  0921  0A84               	incf	4,f
  1011  0922  0804               	movf	4,w
  1012  0923  067D               	xorwf	btemp+-1,w
  1013  0924  1903               	btfsc	3,2
  1014  0925  3400               	retlw	0
  1015  0926  0AFF               	incf	btemp+1,f
  1016  0927  1903               	btfsc	3,2
  1017  0928  0AFE               	incf	btemp,f
  1018  0929  291B               	goto	init_ram0
  1019                           
  1020                           	psect	clrtext
  1021  175E                     clear_ram0:	
  1022                           ;	Called with FSR containing the base address, and
  1023                           ;	W with the last address+1
  1024                           
  1025  175E  0064               	clrwdt	;clear the watchdog before getting into this loop
  1026  175F                     clrloop0:
  1027  175F  0180               	clrf	0	;clear RAM location pointed to by FSR
  1028  1760  0A84               	incf	4,f	;increment pointer
  1029  1761  0604               	xorwf	4,w	;XOR with final address
  1030  1762  1903               	btfsc	3,2	;have we reached the end yet?
  1031  1763  3400               	retlw	0	;all done for this memory range, return
  1032  1764  0604               	xorwf	4,w	;XOR again to restore value
  1033  1765  2F5F               	goto	clrloop0	;do the next byte
  1034                           
  1035                           	psect	cstackCOMMON
  1036  0070                     __pcstackCOMMON:
  1037  0070                     ?_isgraph:
  1038  0070                     ?_ispunct:	
  1039                           ; 1 bit 
  1040                           
  1041  0070                     ?_isspace:	
  1042                           ; 1 bit 
  1043                           
  1044  0070                     ?_isupper:	
  1045                           ; 1 bit 
  1046                           
  1047  0070                     ?_isxdigit:	
  1048                           ; 1 bit 
  1049                           
  1050  0070                     ?_iscntrl:	
  1051                           ; 1 bit 
  1052                           
  1053  0070                     ?_islower:	
  1054                           ; 1 bit 
  1055                           
  1056  0070                     ?_isprint:	
  1057                           ; 1 bit 
  1058                           
  1059  0070                     ?_isalnum:	
  1060                           ; 1 bit 
  1061                           
  1062  0070                     ?_isalpha:	
  1063                           ; 1 bit 
  1064                           
  1065  0070                     ?_isdigit:	
  1066                           ; 1 bit 
  1067                           
  1068  0070                     ?_lcd_char:	
  1069                           ; 1 bit 
  1070                           
  1071  0070                     ?_lcd_clear:	
  1072                           ; 1 bytes @ 0x0
  1073                           
  1074  0070                     ?_tolower:	
  1075                           ; 1 bytes @ 0x0
  1076                           
  1077  0070                     ?_toupper:	
  1078                           ; 1 bytes @ 0x0
  1079                           
  1080  0070                     ?_lcd_init:	
  1081                           ; 1 bytes @ 0x0
  1082                           
  1083  0070                     ?_myIsr:	
  1084                           ; 1 bytes @ 0x0
  1085                           
  1086  0070                     ??_myIsr:	
  1087                           ; 1 bytes @ 0x0
  1088                           
  1089  0070                     ?_amost1:	
  1090                           ; 1 bytes @ 0x0
  1091                           
  1092  0070                     ?_putch:	
  1093                           ; 1 bytes @ 0x0
  1094                           
  1095  0070                     ?_init:	
  1096                           ; 1 bytes @ 0x0
  1097                           
  1098  0070                     ?_show_ad:	
  1099                           ; 1 bytes @ 0x0
  1100                           
  1101  0070                     ?_stdlib_testing:	
  1102                           ; 1 bytes @ 0x0
  1103                           
  1104  0070                     ?_math_testing:	
  1105                           ; 1 bytes @ 0x0
  1106                           
  1107  0070                     ?_ctype_testing:	
  1108                           ; 1 bytes @ 0x0
  1109                           
  1110  0070                     ?_string_testing:	
  1111                           ; 1 bytes @ 0x0
  1112                           
  1113  0070                     ?_main:	
  1114                           ; 1 bytes @ 0x0
  1115                           
  1116  0070                     ?_lcd_delay_1us:	
  1117                           ; 1 bytes @ 0x0
  1118                           
  1119  0070                     ?_lcd_delay_40us:	
  1120                           ; 1 bytes @ 0x0
  1121                           
  1122  0070                     ?_lcd_delay_2ms:	
  1123                           ; 1 bytes @ 0x0
  1124                           
  1125  0070                     ?_lcd_delay_40ms:	
  1126                           ; 1 bytes @ 0x0
  1127                           
  1128  0070                     ?_lcd_en_pulse:	
  1129                           ; 1 bytes @ 0x0
  1130                           
  1131  0070                     ?_lcd_send_nibble:	
  1132                           ; 1 bytes @ 0x0
  1133                           
  1134  0070                     ?_lcd_byte_4bits:	
  1135                           ; 1 bytes @ 0x0
  1136                           
  1137  0070                     ?_lcd_byte_8bits:	
  1138                           ; 1 bytes @ 0x0
  1139                           
  1140  0070                     ?_lcd_cmd:	
  1141                           ; 1 bytes @ 0x0
  1142                           
  1143  0070                     ?_lcd_init_8bits:	
  1144                           ; 1 bytes @ 0x0
  1145                           
  1146  0070                     ?_lcd_init_4bits:	
  1147                           ; 1 bytes @ 0x0
  1148                           
  1149                           
  1150                           ; 1 bytes @ 0x0
  1151  0070                     	ds	2
  1152  0072                     ??_isgraph:
  1153  0072                     ??_ispunct:	
  1154                           ; 1 bytes @ 0x2
  1155                           
  1156  0072                     ??_isspace:	
  1157                           ; 1 bytes @ 0x2
  1158                           
  1159  0072                     ??_isupper:	
  1160                           ; 1 bytes @ 0x2
  1161                           
  1162  0072                     ??_iscntrl:	
  1163                           ; 1 bytes @ 0x2
  1164                           
  1165  0072                     ??_islower:	
  1166                           ; 1 bytes @ 0x2
  1167                           
  1168  0072                     ??_isprint:	
  1169                           ; 1 bytes @ 0x2
  1170                           
  1171  0072                     ??_tolower:	
  1172                           ; 1 bytes @ 0x2
  1173                           
  1174  0072                     ??_toupper:	
  1175                           ; 1 bytes @ 0x2
  1176                           
  1177  0072                     ?_strcat:	
  1178                           ; 1 bytes @ 0x2
  1179                           
  1180  0072                     ?_strchr:	
  1181                           ; 1 bytes @ 0x2
  1182                           
  1183  0072                     ?_memchr:	
  1184                           ; 1 bytes @ 0x2
  1185                           
  1186  0072                     ?_strcpy:	
  1187                           ; 1 bytes @ 0x2
  1188                           
  1189  0072                     ?_memcpy:	
  1190                           ; 1 bytes @ 0x2
  1191                           
  1192  0072                     ?_memmove:	
  1193                           ; 1 bytes @ 0x2
  1194                           
  1195  0072                     ?_memset:	
  1196                           ; 1 bytes @ 0x2
  1197                           
  1198  0072                     ??_isdigit:	
  1199                           ; 1 bytes @ 0x2
  1200                           
  1201  0072                     ??_amost1:	
  1202                           ; 1 bytes @ 0x2
  1203                           
  1204  0072                     ??_init:	
  1205                           ; 1 bytes @ 0x2
  1206                           
  1207  0072                     ??_lcd_delay_1us:	
  1208                           ; 1 bytes @ 0x2
  1209                           
  1210  0072                     ??_lcd_delay_40us:	
  1211                           ; 1 bytes @ 0x2
  1212                           
  1213  0072                     ??_lcd_delay_2ms:	
  1214                           ; 1 bytes @ 0x2
  1215                           
  1216  0072                     ??_lcd_delay_40ms:	
  1217                           ; 1 bytes @ 0x2
  1218                           
  1219  0072                     ??_lcd_en_pulse:	
  1220                           ; 1 bytes @ 0x2
  1221                           
  1222  0072                     ??_lcd_send_nibble:	
  1223                           ; 1 bytes @ 0x2
  1224                           
  1225  0072                     ??_lcd_byte_8bits:	
  1226                           ; 1 bytes @ 0x2
  1227                           
  1228  0072                     ?_strlen:	
  1229                           ; 1 bytes @ 0x2
  1230                           
  1231  0072                     ?_strcmp:	
  1232                           ; 2 bytes @ 0x2
  1233                           
  1234  0072                     ?_memcmp:	
  1235                           ; 2 bytes @ 0x2
  1236                           
  1237  0072                     ?___lwdiv:	
  1238                           ; 2 bytes @ 0x2
  1239                           
  1240  0072                     lcd_send_nibble@data:	
  1241                           ; 2 bytes @ 0x2
  1242                           
  1243  0072                     lcd_byte_8bits@data:	
  1244                           ; 1 bytes @ 0x2
  1245                           
  1246  0072                     iscntrl@c:	
  1247                           ; 1 bytes @ 0x2
  1248                           
  1249  0072                     _isgraph$973:	
  1250                           ; 1 bytes @ 0x2
  1251                           
  1252  0072                     _islower$976:	
  1253                           ; 1 bytes @ 0x2
  1254                           
  1255  0072                     _isprint$979:	
  1256                           ; 1 bytes @ 0x2
  1257                           
  1258  0072                     ispunct@c:	
  1259                           ; 1 bytes @ 0x2
  1260                           
  1261  0072                     _isspace$984:	
  1262                           ; 1 bytes @ 0x2
  1263                           
  1264  0072                     _isupper$987:	
  1265                           ; 1 bytes @ 0x2
  1266                           
  1267  0072                     _isdigit$998:	
  1268                           ; 1 bytes @ 0x2
  1269                           
  1270  0072                     strcat@from:	
  1271                           ; 1 bytes @ 0x2
  1272                           
  1273  0072                     tolower@c:	
  1274                           ; 1 bytes @ 0x2
  1275                           
  1276  0072                     ___lwdiv@divisor:	
  1277                           ; 1 bytes @ 0x2
  1278                           
  1279  0072                     memchr@n:	
  1280                           ; 2 bytes @ 0x2
  1281                           
  1282  0072                     memcmp@s2:	
  1283                           ; 2 bytes @ 0x2
  1284                           
  1285  0072                     memcpy@s1:	
  1286                           ; 2 bytes @ 0x2
  1287                           
  1288  0072                     memmove@s1:	
  1289                           ; 2 bytes @ 0x2
  1290                           
  1291  0072                     memset@c:	
  1292                           ; 2 bytes @ 0x2
  1293                           
  1294  0072                     strchr@chr:	
  1295                           ; 2 bytes @ 0x2
  1296                           
  1297  0072                     strcmp@s2:	
  1298                           ; 2 bytes @ 0x2
  1299                           
  1300  0072                     strcpy@from:	
  1301                           ; 2 bytes @ 0x2
  1302                           
  1303                           
  1304                           ; 2 bytes @ 0x2
  1305  0072                     	ds	1
  1306  0073                     ??_strcat:
  1307  0073                     ??_lcd_byte_4bits:	
  1308                           ; 1 bytes @ 0x3
  1309                           
  1310  0073                     amost1@value:	
  1311                           ; 1 bytes @ 0x3
  1312                           
  1313  0073                     isgraph@c:	
  1314                           ; 1 bytes @ 0x3
  1315                           
  1316  0073                     islower@c:	
  1317                           ; 1 bytes @ 0x3
  1318                           
  1319  0073                     isprint@c:	
  1320                           ; 1 bytes @ 0x3
  1321                           
  1322  0073                     isspace@c:	
  1323                           ; 1 bytes @ 0x3
  1324                           
  1325  0073                     isupper@c:	
  1326                           ; 1 bytes @ 0x3
  1327                           
  1328  0073                     isdigit@c:	
  1329                           ; 1 bytes @ 0x3
  1330                           
  1331  0073                     toupper@c:	
  1332                           ; 1 bytes @ 0x3
  1333                           
  1334                           
  1335                           ; 1 bytes @ 0x3
  1336  0073                     	ds	1
  1337  0074                     ??_isxdigit:
  1338  0074                     ??_isalpha:	
  1339                           ; 1 bytes @ 0x4
  1340                           
  1341  0074                     ??_strchr:	
  1342                           ; 1 bytes @ 0x4
  1343                           
  1344  0074                     ??_strlen:	
  1345                           ; 1 bytes @ 0x4
  1346                           
  1347  0074                     ??_strcmp:	
  1348                           ; 1 bytes @ 0x4
  1349                           
  1350  0074                     ??_strcpy:	
  1351                           ; 1 bytes @ 0x4
  1352                           
  1353  0074                     _isalpha$968:	
  1354                           ; 1 bytes @ 0x4
  1355                           
  1356  0074                     _isxdigit$995:	
  1357                           ; 1 bytes @ 0x4
  1358                           
  1359  0074                     strcat@to:	
  1360                           ; 1 bytes @ 0x4
  1361                           
  1362  0074                     strchr@ptr:	
  1363                           ; 1 bytes @ 0x4
  1364                           
  1365  0074                     ___lwdiv@dividend:	
  1366                           ; 1 bytes @ 0x4
  1367                           
  1368  0074                     memchr@v:	
  1369                           ; 2 bytes @ 0x4
  1370                           
  1371  0074                     memcmp@n:	
  1372                           ; 2 bytes @ 0x4
  1373                           
  1374  0074                     memcpy@n:	
  1375                           ; 2 bytes @ 0x4
  1376                           
  1377  0074                     memmove@n:	
  1378                           ; 2 bytes @ 0x4
  1379                           
  1380  0074                     memset@n:	
  1381                           ; 2 bytes @ 0x4
  1382                           
  1383                           
  1384                           ; 2 bytes @ 0x4
  1385  0074                     	ds	1
  1386  0075                     lcd_byte_4bits@data:
  1387  0075                     isalpha@c:	
  1388                           ; 1 bytes @ 0x5
  1389                           
  1390  0075                     isxdigit@c:	
  1391                           ; 1 bytes @ 0x5
  1392                           
  1393  0075                     strcat@cp:	
  1394                           ; 1 bytes @ 0x5
  1395                           
  1396  0075                     strcpy@cp:	
  1397                           ; 1 bytes @ 0x5
  1398                           
  1399  0075                     strlen@s:	
  1400                           ; 1 bytes @ 0x5
  1401                           
  1402                           
  1403                           ; 1 bytes @ 0x5
  1404  0075                     	ds	1
  1405  0076                     ??_isalnum:
  1406  0076                     ??_memchr:	
  1407                           ; 1 bytes @ 0x6
  1408                           
  1409  0076                     ??_memcmp:	
  1410                           ; 1 bytes @ 0x6
  1411                           
  1412  0076                     ??_memcpy:	
  1413                           ; 1 bytes @ 0x6
  1414                           
  1415  0076                     ??_memmove:	
  1416                           ; 1 bytes @ 0x6
  1417                           
  1418  0076                     ??_memset:	
  1419                           ; 1 bytes @ 0x6
  1420                           
  1421  0076                     ??___lwdiv:	
  1422                           ; 1 bytes @ 0x6
  1423                           
  1424  0076                     lcd_byte_4bits@nibble:	
  1425                           ; 1 bytes @ 0x6
  1426                           
  1427  0076                     _isalnum$964:	
  1428                           ; 1 bytes @ 0x6
  1429                           
  1430  0076                     strcpy@to:	
  1431                           ; 1 bytes @ 0x6
  1432                           
  1433  0076                     strlen@cp:	
  1434                           ; 1 bytes @ 0x6
  1435                           
  1436                           
  1437                           ; 1 bytes @ 0x6
  1438  0076                     	ds	1
  1439  0077                     ??_lcd_char:
  1440  0077                     ??_lcd_cmd:	
  1441                           ; 1 bytes @ 0x7
  1442                           
  1443  0077                     lcd_cmd@data:	
  1444                           ; 1 bytes @ 0x7
  1445                           
  1446  0077                     lcd_char@data:	
  1447                           ; 1 bytes @ 0x7
  1448                           
  1449  0077                     isalnum@c:	
  1450                           ; 1 bytes @ 0x7
  1451                           
  1452  0077                     memchr@p:	
  1453                           ; 1 bytes @ 0x7
  1454                           
  1455  0077                     memset@p:	
  1456                           ; 1 bytes @ 0x7
  1457                           
  1458  0077                     strcmp@r:	
  1459                           ; 1 bytes @ 0x7
  1460                           
  1461  0077                     ___lwdiv@quotient:	
  1462                           ; 1 bytes @ 0x7
  1463                           
  1464                           
  1465                           ; 2 bytes @ 0x7
  1466  0077                     	ds	1
  1467  0078                     ?_lcd_goto:
  1468  0078                     ??_lcd_clear:	
  1469                           ; 1 bytes @ 0x8
  1470                           
  1471  0078                     ??_lcd_init:	
  1472                           ; 1 bytes @ 0x8
  1473                           
  1474  0078                     ??_putch:	
  1475                           ; 1 bytes @ 0x8
  1476                           
  1477  0078                     ??_lcd_init_8bits:	
  1478                           ; 1 bytes @ 0x8
  1479                           
  1480  0078                     ??_lcd_init_4bits:	
  1481                           ; 1 bytes @ 0x8
  1482                           
  1483  0078                     putch@dado:	
  1484                           ; 1 bytes @ 0x8
  1485                           
  1486  0078                     lcd_goto@col:	
  1487                           ; 1 bytes @ 0x8
  1488                           
  1489  0078                     memchr@s:	
  1490                           ; 1 bytes @ 0x8
  1491                           
  1492  0078                     memcmp@s1:	
  1493                           ; 1 bytes @ 0x8
  1494                           
  1495  0078                     memset@p1:	
  1496                           ; 1 bytes @ 0x8
  1497                           
  1498  0078                     strcmp@s1:	
  1499                           ; 1 bytes @ 0x8
  1500                           
  1501                           
  1502                           ; 1 bytes @ 0x8
  1503  0078                     	ds	1
  1504  0079                     lcd_goto@lin:
  1505  0079                     ___lwdiv@counter:	
  1506                           ; 1 bytes @ 0x9
  1507                           
  1508                           
  1509                           ; 1 bytes @ 0x9
  1510  0079                     	ds	1
  1511  007A                     ??_main:
  1512                           
  1513                           	psect	cstackBANK0
  1514  0020                     __pcstackBANK0:	
  1515                           ; 1 bytes @ 0xA
  1516                           
  1517  0020                     ??_lcd_goto:
  1518  0020                     ?___lwmod:	
  1519                           ; 1 bytes @ 0x0
  1520                           
  1521  0020                     memcpy@tmp:	
  1522                           ; 2 bytes @ 0x0
  1523                           
  1524  0020                     memmove@d1:	
  1525                           ; 1 bytes @ 0x0
  1526                           
  1527  0020                     ___lwmod@divisor:	
  1528                           ; 1 bytes @ 0x0
  1529                           
  1530                           
  1531                           ; 2 bytes @ 0x0
  1532  0020                     	ds	1
  1533  0021                     memcpy@s:
  1534  0021                     memmove@s:	
  1535                           ; 2 bytes @ 0x1
  1536                           
  1537                           
  1538                           ; 2 bytes @ 0x1
  1539  0021                     	ds	1
  1540  0022                     ___lwmod@dividend:
  1541                           
  1542                           ; 2 bytes @ 0x2
  1543  0022                     	ds	1
  1544  0023                     memcpy@d:
  1545  0023                     memmove@d:	
  1546                           ; 1 bytes @ 0x3
  1547                           
  1548                           
  1549                           ; 1 bytes @ 0x3
  1550  0023                     	ds	1
  1551  0024                     ??___lwmod:
  1552  0024                     memcpy@d1:	
  1553                           ; 1 bytes @ 0x4
  1554                           
  1555                           
  1556                           ; 1 bytes @ 0x4
  1557  0024                     	ds	1
  1558  0025                     ___lwmod@counter:
  1559                           
  1560                           ; 1 bytes @ 0x5
  1561  0025                     	ds	1
  1562  0026                     ?_utoa:
  1563  0026                     ?_printf:	
  1564                           ; 1 bytes @ 0x6
  1565                           
  1566  0026                     printf@f:	
  1567                           ; 2 bytes @ 0x6
  1568                           
  1569  0026                     utoa@val:	
  1570                           ; 2 bytes @ 0x6
  1571                           
  1572                           
  1573                           ; 2 bytes @ 0x6
  1574  0026                     	ds	2
  1575  0028                     utoa@base:
  1576                           
  1577                           ; 2 bytes @ 0x8
  1578  0028                     	ds	2
  1579  002A                     ??_printf:
  1580  002A                     ??_utoa:	
  1581                           ; 1 bytes @ 0xA
  1582                           
  1583                           
  1584                           ; 1 bytes @ 0xA
  1585  002A                     	ds	1
  1586  002B                     utoa@v:
  1587                           
  1588                           ; 2 bytes @ 0xB
  1589  002B                     	ds	2
  1590  002D                     utoa@c:
  1591                           
  1592                           ; 1 bytes @ 0xD
  1593  002D                     	ds	1
  1594  002E                     printf@flag:
  1595  002E                     utoa@buf:	
  1596                           ; 1 bytes @ 0xE
  1597                           
  1598                           
  1599                           ; 1 bytes @ 0xE
  1600  002E                     	ds	1
  1601  002F                     ?_itoa:
  1602  002F                     printf@prec:	
  1603                           ; 1 bytes @ 0xF
  1604                           
  1605  002F                     itoa@val:	
  1606                           ; 1 bytes @ 0xF
  1607                           
  1608                           
  1609                           ; 2 bytes @ 0xF
  1610  002F                     	ds	1
  1611  0030                     printf@cp:
  1612                           
  1613                           ; 2 bytes @ 0x10
  1614  0030                     	ds	1
  1615  0031                     itoa@base:
  1616                           
  1617                           ; 2 bytes @ 0x11
  1618  0031                     	ds	1
  1619  0032                     printf@ap:
  1620                           
  1621                           ; 1 bytes @ 0x12
  1622  0032                     	ds	1
  1623  0033                     ??_itoa:
  1624  0033                     printf@val:	
  1625                           ; 1 bytes @ 0x13
  1626                           
  1627                           
  1628                           ; 2 bytes @ 0x13
  1629  0033                     	ds	1
  1630  0034                     itoa@buf:
  1631                           
  1632                           ; 1 bytes @ 0x14
  1633  0034                     	ds	1
  1634  0035                     printf@c:
  1635                           
  1636                           ; 1 bytes @ 0x15
  1637  0035                     	ds	1
  1638  0036                     ??_show_ad:
  1639  0036                     ??_stdlib_testing:	
  1640                           ; 1 bytes @ 0x16
  1641                           
  1642  0036                     ??_math_testing:	
  1643                           ; 1 bytes @ 0x16
  1644                           
  1645  0036                     ??_ctype_testing:	
  1646                           ; 1 bytes @ 0x16
  1647                           
  1648  0036                     ??_string_testing:	
  1649                           ; 1 bytes @ 0x16
  1650                           
  1651                           
  1652                           ; 1 bytes @ 0x16
  1653  0036                     	ds	4
  1654  003A                     string_testing@str:
  1655                           
  1656                           ; 10 bytes @ 0x1A
  1657  003A                     	ds	10
  1658  0044                     string_testing@string:
  1659                           
  1660                           ; 10 bytes @ 0x24
  1661  0044                     	ds	10
  1662                           
  1663                           	psect	maintext
  1664  0B22                     __pmaintext:	
  1665 ;;
  1666 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1667 ;;
  1668 ;; *************** function _main *****************
  1669 ;; Defined at:
  1670 ;;		line 469 in file "main.c"
  1671 ;; Parameters:    Size  Location     Type
  1672 ;;		None
  1673 ;; Auto vars:     Size  Location     Type
  1674 ;;		None
  1675 ;; Return value:  Size  Location     Type
  1676 ;;                  1    wreg      void 
  1677 ;; Registers used:
  1678 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1679 ;; Tracked objects:
  1680 ;;		On entry : B00/0
  1681 ;;		On exit  : 0/0
  1682 ;;		Unchanged: 0/0
  1683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1684 ;;      Params:         0       0       0       0       0
  1685 ;;      Locals:         0       0       0       0       0
  1686 ;;      Temps:          0       0       0       0       0
  1687 ;;      Totals:         0       0       0       0       0
  1688 ;;Total ram usage:        0 bytes
  1689 ;; Hardware stack levels required when called: 9
  1690 ;; This function calls:
  1691 ;;		_ctype_testing
  1692 ;;		_init
  1693 ;;		_lcd_init
  1694 ;;		_math_testing
  1695 ;;		_show_ad
  1696 ;;		_stdlib_testing
  1697 ;;		_string_testing
  1698 ;; This function is called by:
  1699 ;;		Startup code after reset
  1700 ;; This function uses a non-reentrant model
  1701 ;;
  1702                           
  1703                           
  1704                           ;psect for function _main
  1705  0B22                     _main:
  1706  0B22                     l3499:	
  1707                           ;incstack = 0
  1708 ;; hardware stack exceeded
  1709                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1710                           
  1711                           
  1712                           ;main.c: 472:     INTCONbits.GIE = 0;
  1713  0B22  138B               	bcf	11,7	;volatile
  1714  0B23                     l3501:
  1715                           
  1716                           ;main.c: 475:     init();
  1717  0B23  120A  158A  2282  120A  158A  	fcall	_init
  1718  0B28                     l3503:
  1719                           
  1720                           ;main.c: 478:     INTCONbits.GIE = 1;
  1721  0B28  178B               	bsf	11,7	;volatile
  1722                           
  1723                           ;main.c: 481:     lcd_init();
  1724  0B29  160A  118A  2750  120A  158A  	fcall	_lcd_init
  1725  0B2E                     l3505:
  1726                           
  1727                           ;main.c: 485:     {;main.c: 487:         show_ad();
  1728  0B2E  120A  158A  25E7  120A  158A  	fcall	_show_ad
  1729  0B33                     l3507:
  1730                           
  1731                           ;main.c: 490:         stdlib_testing();
  1732  0B33  120A  158A  2497  120A  158A  	fcall	_stdlib_testing
  1733  0B38                     l3509:
  1734                           
  1735                           ;main.c: 493:         math_testing();
  1736  0B38  120A  158A  245A  120A  158A  	fcall	_math_testing
  1737  0B3D                     l3511:
  1738                           
  1739                           ;main.c: 496:         ctype_testing();
  1740  0B3D  120A  118A  2381  120A  158A  	fcall	_ctype_testing
  1741  0B42                     l3513:
  1742                           
  1743                           ;main.c: 499:         string_testing();
  1744  0B42  120A  118A  204A  120A  158A  	fcall	_string_testing
  1745  0B47  2B2E               	goto	l3505
  1746  0B48  120A  118A  280C   	ljmp	start
  1747  0B4B                     __end_of_main:
  1748                           
  1749                           	psect	text1
  1750  004A                     __ptext1:	
  1751 ;; *************** function _string_testing *****************
  1752 ;; Defined at:
  1753 ;;		line 374 in file "main.c"
  1754 ;; Parameters:    Size  Location     Type
  1755 ;;		None
  1756 ;; Auto vars:     Size  Location     Type
  1757 ;;  string         10   36[BANK0 ] unsigned char [10]
  1758 ;;  str            10   26[BANK0 ] unsigned char [10]
  1759 ;; Return value:  Size  Location     Type
  1760 ;;                  1    wreg      void 
  1761 ;; Registers used:
  1762 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1763 ;; Tracked objects:
  1764 ;;		On entry : 0/0
  1765 ;;		On exit  : 0/0
  1766 ;;		Unchanged: 0/0
  1767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1768 ;;      Params:         0       0       0       0       0
  1769 ;;      Locals:         0      20       0       0       0
  1770 ;;      Temps:          0       4       0       0       0
  1771 ;;      Totals:         0      24       0       0       0
  1772 ;;Total ram usage:       24 bytes
  1773 ;; Hardware stack levels used: 1
  1774 ;; Hardware stack levels required when called: 8
  1775 ;; This function calls:
  1776 ;;		_lcd_clear
  1777 ;;		_lcd_goto
  1778 ;;		_memchr
  1779 ;;		_memcmp
  1780 ;;		_memcpy
  1781 ;;		_memmove
  1782 ;;		_memset
  1783 ;;		_printf
  1784 ;;		_strcat
  1785 ;;		_strchr
  1786 ;;		_strcmp
  1787 ;;		_strcpy
  1788 ;;		_strlen
  1789 ;; This function is called by:
  1790 ;;		_main
  1791 ;; This function uses a non-reentrant model
  1792 ;;
  1793                           
  1794                           
  1795                           ;psect for function _string_testing
  1796  004A                     _string_testing:
  1797  004A                     l3377:	
  1798                           ;incstack = 0
  1799 ;; hardware stack exceeded
  1800                           ; Regs used in _string_testing: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1801                           
  1802                           
  1803                           ;main.c: 377:     lcd_goto(1,0);
  1804  004A  01F8               	clrf	lcd_goto@col
  1805  004B  3001               	movlw	1
  1806  004C  120A  158A  23E3  120A  118A  	fcall	_lcd_goto
  1807  0051                     l3379:
  1808                           
  1809                           ;main.c: 378:     printf("XC8 LIBS TESTING");
  1810  0051  301C               	movlw	low (STR_3| (0+32768))
  1811  0052  1283               	bcf	3,5	;RP0=0, select bank0
  1812  0053  1303               	bcf	3,6	;RP1=0, select bank0
  1813  0054  00A6               	movwf	printf@f
  1814  0055  3087               	movlw	high (STR_3| (0+32768))
  1815  0056  00A7               	movwf	printf@f+1
  1816  0057  120A  158A  26BC  120A  118A  	fcall	_printf
  1817  005C                     l3381:
  1818                           
  1819                           ;main.c: 379:     lcd_goto(2,3);
  1820  005C  3003               	movlw	3
  1821  005D  1283               	bcf	3,5	;RP0=0, select bank0
  1822  005E  1303               	bcf	3,6	;RP1=0, select bank0
  1823  005F  00B6               	movwf	??_string_testing
  1824  0060  0836               	movf	??_string_testing,w
  1825  0061  00F8               	movwf	lcd_goto@col
  1826  0062  3002               	movlw	2
  1827  0063  120A  158A  23E3  120A  118A  	fcall	_lcd_goto
  1828                           
  1829                           ;main.c: 380:     printf("STRING LIB");
  1830  0068  302A               	movlw	low (STR_25| (0+32768))
  1831  0069  1283               	bcf	3,5	;RP0=0, select bank0
  1832  006A  1303               	bcf	3,6	;RP1=0, select bank0
  1833  006B  00A6               	movwf	printf@f
  1834  006C  3088               	movlw	high (STR_25| (0+32768))
  1835  006D  00A7               	movwf	printf@f+1
  1836  006E  120A  158A  26BC  120A  118A  	fcall	_printf
  1837  0073                     l3383:
  1838                           
  1839                           ;main.c: 381:     _delay((unsigned long)((3000)*(20000000/4000.0)));
  1840  0073  304D               	movlw	77
  1841  0074  1283               	bcf	3,5	;RP0=0, select bank0
  1842  0075  1303               	bcf	3,6	;RP1=0, select bank0
  1843  0076  00B8               	movwf	??_string_testing+2
  1844  0077  3019               	movlw	25
  1845  0078  00B7               	movwf	??_string_testing+1
  1846  0079  304F               	movlw	79
  1847  007A  00B6               	movwf	??_string_testing
  1848  007B                     u1977:
  1849  007B  0BB6               	decfsz	??_string_testing,f
  1850  007C  287B               	goto	u1977
  1851  007D  0BB7               	decfsz	??_string_testing+1,f
  1852  007E  287B               	goto	u1977
  1853  007F  0BB8               	decfsz	??_string_testing+2,f
  1854  0080  287B               	goto	u1977
  1855  0081                     l3385:
  1856                           
  1857                           ;main.c: 382:     lcd_clear();
  1858  0081  160A  118A  2786  120A  118A  	fcall	_lcd_clear
  1859  0086                     l3387:
  1860                           
  1861                           ;main.c: 384:     char string[10] = "abc";
  1862  0086  3044               	movlw	string_testing@string& (0+255)
  1863  0087  0084               	movwf	4
  1864  0088  30E6               	movlw	low string_testing@F1251
  1865  0089  1283               	bcf	3,5	;RP0=0, select bank0
  1866  008A  1303               	bcf	3,6	;RP1=0, select bank0
  1867  008B  00B6               	movwf	??_string_testing
  1868  008C  0804               	movf	4,w
  1869  008D  00B7               	movwf	??_string_testing+1
  1870  008E  300A               	movlw	10
  1871  008F  00B8               	movwf	??_string_testing+2
  1872  0090                     u1950:
  1873  0090  0836               	movf	??_string_testing,w
  1874  0091  0084               	movwf	4
  1875  0092  1383               	bcf	3,7	;select IRP bank1
  1876  0093  0800               	movf	0,w
  1877  0094  00B9               	movwf	??_string_testing+3
  1878  0095  0AB6               	incf	??_string_testing,f
  1879  0096  0837               	movf	??_string_testing+1,w
  1880  0097  0084               	movwf	4
  1881  0098  0839               	movf	??_string_testing+3,w
  1882  0099  0080               	movwf	0
  1883  009A  0AB7               	incf	??_string_testing+1,f
  1884  009B  0BB8               	decfsz	??_string_testing+2,f
  1885  009C  2890               	goto	u1950
  1886  009D                     l3389:
  1887                           
  1888                           ;main.c: 385:     char str[10] = "def";
  1889  009D  303A               	movlw	string_testing@str& (0+255)
  1890  009E  0084               	movwf	4
  1891  009F  30DC               	movlw	low string_testing@F1253
  1892  00A0  00B6               	movwf	??_string_testing
  1893  00A1  0804               	movf	4,w
  1894  00A2  00B7               	movwf	??_string_testing+1
  1895  00A3  300A               	movlw	10
  1896  00A4  00B8               	movwf	??_string_testing+2
  1897  00A5                     u1960:
  1898  00A5  0836               	movf	??_string_testing,w
  1899  00A6  0084               	movwf	4
  1900  00A7  1383               	bcf	3,7	;select IRP bank1
  1901  00A8  0800               	movf	0,w
  1902  00A9  00B9               	movwf	??_string_testing+3
  1903  00AA  0AB6               	incf	??_string_testing,f
  1904  00AB  0837               	movf	??_string_testing+1,w
  1905  00AC  0084               	movwf	4
  1906  00AD  0839               	movf	??_string_testing+3,w
  1907  00AE  0080               	movwf	0
  1908  00AF  0AB7               	incf	??_string_testing+1,f
  1909  00B0  0BB8               	decfsz	??_string_testing+2,f
  1910  00B1  28A5               	goto	u1960
  1911  00B2                     l3391:
  1912                           
  1913                           ;main.c: 388:     strcat(string,str);
  1914  00B2  303A               	movlw	(low (string_testing@str| 0))& (0+255)
  1915  00B3  00B6               	movwf	??_string_testing
  1916  00B4  0836               	movf	??_string_testing,w
  1917  00B5  00F2               	movwf	strcat@from
  1918  00B6  3044               	movlw	(low (string_testing@string| 0))& (0+255)
  1919  00B7  120A  158A  22F9  120A  118A  	fcall	_strcat
  1920  00BC                     l3393:
  1921                           
  1922                           ;main.c: 389:     lcd_goto(1,0);
  1923  00BC  01F8               	clrf	lcd_goto@col
  1924  00BD  3001               	movlw	1
  1925  00BE  120A  158A  23E3  120A  118A  	fcall	_lcd_goto
  1926  00C3                     l3395:
  1927                           
  1928                           ;main.c: 390:     printf("strcat");
  1929  00C3  3093               	movlw	low (STR_26| (0+32768))
  1930  00C4  1283               	bcf	3,5	;RP0=0, select bank0
  1931  00C5  1303               	bcf	3,6	;RP1=0, select bank0
  1932  00C6  00A6               	movwf	printf@f
  1933  00C7  3088               	movlw	high (STR_26| (0+32768))
  1934  00C8  00A7               	movwf	printf@f+1
  1935  00C9  120A  158A  26BC  120A  118A  	fcall	_printf
  1936  00CE                     l3397:
  1937                           
  1938                           ;main.c: 391:     lcd_goto(2,0);
  1939  00CE  01F8               	clrf	lcd_goto@col
  1940  00CF  3002               	movlw	2
  1941  00D0  120A  158A  23E3  120A  118A  	fcall	_lcd_goto
  1942  00D5                     l3399:
  1943                           
  1944                           ;main.c: 392:     printf("%s",string);
  1945  00D5  3027               	movlw	low ((STR_2+10)| (0+32768))
  1946  00D6  1283               	bcf	3,5	;RP0=0, select bank0
  1947  00D7  1303               	bcf	3,6	;RP1=0, select bank0
  1948  00D8  00A6               	movwf	printf@f
  1949  00D9  3088               	movlw	high ((STR_2+10)| (0+32768))
  1950  00DA  00A7               	movwf	printf@f+1
  1951  00DB  3044               	movlw	(low (string_testing@string| 0))& (0+255)
  1952  00DC  00B6               	movwf	??_string_testing
  1953  00DD  0836               	movf	??_string_testing,w
  1954  00DE  00A8               	movwf	low ((?_printf| 0+2))
  1955  00DF  120A  158A  26BC  120A  118A  	fcall	_printf
  1956  00E4                     l3401:
  1957                           
  1958                           ;main.c: 393:     _delay((unsigned long)((3000)*(20000000/4000.0)));
  1959  00E4  304D               	movlw	77
  1960  00E5  1283               	bcf	3,5	;RP0=0, select bank0
  1961  00E6  1303               	bcf	3,6	;RP1=0, select bank0
  1962  00E7  00B8               	movwf	??_string_testing+2
  1963  00E8  3019               	movlw	25
  1964  00E9  00B7               	movwf	??_string_testing+1
  1965  00EA  304F               	movlw	79
  1966  00EB  00B6               	movwf	??_string_testing
  1967  00EC                     u1987:
  1968  00EC  0BB6               	decfsz	??_string_testing,f
  1969  00ED  28EC               	goto	u1987
  1970  00EE  0BB7               	decfsz	??_string_testing+1,f
  1971  00EF  28EC               	goto	u1987
  1972  00F0  0BB8               	decfsz	??_string_testing+2,f
  1973  00F1  28EC               	goto	u1987
  1974  00F2                     l3403:
  1975                           
  1976                           ;main.c: 394:     lcd_clear();
  1977  00F2  160A  118A  2786  120A  118A  	fcall	_lcd_clear
  1978  00F7                     l3405:
  1979                           
  1980                           ;main.c: 397:     lcd_goto(1,0);
  1981  00F7  01F8               	clrf	lcd_goto@col
  1982  00F8  3001               	movlw	1
  1983  00F9  120A  158A  23E3  120A  118A  	fcall	_lcd_goto
  1984                           
  1985                           ;main.c: 398:     printf("strchr");
  1986  00FE  308C               	movlw	low (STR_28| (0+32768))
  1987  00FF  1283               	bcf	3,5	;RP0=0, select bank0
  1988  0100  1303               	bcf	3,6	;RP1=0, select bank0
  1989  0101  00A6               	movwf	printf@f
  1990  0102  3088               	movlw	high (STR_28| (0+32768))
  1991  0103  00A7               	movwf	printf@f+1
  1992  0104  120A  158A  26BC  120A  118A  	fcall	_printf
  1993  0109                     l3407:
  1994                           
  1995                           ;main.c: 399:     lcd_goto(2,0);
  1996  0109  01F8               	clrf	lcd_goto@col
  1997  010A  3002               	movlw	2
  1998  010B  120A  158A  23E3  120A  118A  	fcall	_lcd_goto
  1999  0110                     l3409:
  2000                           
  2001                           ;main.c: 400:     printf("%s",strchr(string,'d'));
  2002  0110  3027               	movlw	low ((STR_2+10)| (0+32768))
  2003  0111  1283               	bcf	3,5	;RP0=0, select bank0
  2004  0112  1303               	bcf	3,6	;RP1=0, select bank0
  2005  0113  00A6               	movwf	printf@f
  2006  0114  3088               	movlw	high ((STR_2+10)| (0+32768))
  2007  0115  00A7               	movwf	printf@f+1
  2008  0116  3064               	movlw	100
  2009  0117  00F2               	movwf	strchr@chr
  2010  0118  3000               	movlw	0
  2011  0119  00F3               	movwf	strchr@chr+1
  2012  011A  3044               	movlw	(low (string_testing@string| 0))& (0+255)
  2013  011B  120A  158A  213E  120A  118A  	fcall	_strchr
  2014  0120  1283               	bcf	3,5	;RP0=0, select bank0
  2015  0121  1303               	bcf	3,6	;RP1=0, select bank0
  2016  0122  00B6               	movwf	??_string_testing
  2017  0123  0836               	movf	??_string_testing,w
  2018  0124  00A8               	movwf	low ((?_printf| 0+2))
  2019  0125  120A  158A  26BC  120A  118A  	fcall	_printf
  2020  012A                     l3411:
  2021                           
  2022                           ;main.c: 401:     _delay((unsigned long)((3000)*(20000000/4000.0)));
  2023  012A  304D               	movlw	77
  2024  012B  1283               	bcf	3,5	;RP0=0, select bank0
  2025  012C  1303               	bcf	3,6	;RP1=0, select bank0
  2026  012D  00B8               	movwf	??_string_testing+2
  2027  012E  3019               	movlw	25
  2028  012F  00B7               	movwf	??_string_testing+1
  2029  0130  304F               	movlw	79
  2030  0131  00B6               	movwf	??_string_testing
  2031  0132                     u1997:
  2032  0132  0BB6               	decfsz	??_string_testing,f
  2033  0133  2932               	goto	u1997
  2034  0134  0BB7               	decfsz	??_string_testing+1,f
  2035  0135  2932               	goto	u1997
  2036  0136  0BB8               	decfsz	??_string_testing+2,f
  2037  0137  2932               	goto	u1997
  2038  0138                     l3413:
  2039                           
  2040                           ;main.c: 402:     lcd_clear();
  2041  0138  160A  118A  2786  120A  118A  	fcall	_lcd_clear
  2042  013D                     l3415:
  2043                           
  2044                           ;main.c: 405:     lcd_goto(1,0);
  2045  013D  01F8               	clrf	lcd_goto@col
  2046  013E  3001               	movlw	1
  2047  013F  120A  158A  23E3  120A  118A  	fcall	_lcd_goto
  2048  0144                     l3417:
  2049                           
  2050                           ;main.c: 406:     printf("memchr");
  2051  0144  3085               	movlw	low (STR_30| (0+32768))
  2052  0145  1283               	bcf	3,5	;RP0=0, select bank0
  2053  0146  1303               	bcf	3,6	;RP1=0, select bank0
  2054  0147  00A6               	movwf	printf@f
  2055  0148  3088               	movlw	high (STR_30| (0+32768))
  2056  0149  00A7               	movwf	printf@f+1
  2057  014A  120A  158A  26BC  120A  118A  	fcall	_printf
  2058  014F                     l3419:
  2059                           
  2060                           ;main.c: 407:     lcd_goto(2,0);
  2061  014F  01F8               	clrf	lcd_goto@col
  2062  0150  3002               	movlw	2
  2063  0151  120A  158A  23E3  120A  118A  	fcall	_lcd_goto
  2064  0156                     l3421:
  2065                           
  2066                           ;main.c: 408:     printf("%s",memchr(string,'e',6));
  2067  0156  3027               	movlw	low ((STR_2+10)| (0+32768))
  2068  0157  1283               	bcf	3,5	;RP0=0, select bank0
  2069  0158  1303               	bcf	3,6	;RP1=0, select bank0
  2070  0159  00A6               	movwf	printf@f
  2071  015A  3088               	movlw	high ((STR_2+10)| (0+32768))
  2072  015B  00A7               	movwf	printf@f+1
  2073  015C  3065               	movlw	101
  2074  015D  00F2               	movwf	memchr@n
  2075  015E  3000               	movlw	0
  2076  015F  00F3               	movwf	memchr@n+1
  2077  0160  3006               	movlw	6
  2078  0161  00F4               	movwf	memchr@v
  2079  0162  3000               	movlw	0
  2080  0163  00F5               	movwf	memchr@v+1
  2081  0164  3044               	movlw	(low (string_testing@string| 0))& (0+255)
  2082  0165  120A  158A  2237  120A  118A  	fcall	_memchr
  2083  016A  1283               	bcf	3,5	;RP0=0, select bank0
  2084  016B  1303               	bcf	3,6	;RP1=0, select bank0
  2085  016C  00B6               	movwf	??_string_testing
  2086  016D  0836               	movf	??_string_testing,w
  2087  016E  00A8               	movwf	low ((?_printf| 0+2))
  2088  016F  120A  158A  26BC  120A  118A  	fcall	_printf
  2089  0174                     l3423:
  2090                           
  2091                           ;main.c: 409:     _delay((unsigned long)((3000)*(20000000/4000.0)));
  2092  0174  304D               	movlw	77
  2093  0175  1283               	bcf	3,5	;RP0=0, select bank0
  2094  0176  1303               	bcf	3,6	;RP1=0, select bank0
  2095  0177  00B8               	movwf	??_string_testing+2
  2096  0178  3019               	movlw	25
  2097  0179  00B7               	movwf	??_string_testing+1
  2098  017A  304F               	movlw	79
  2099  017B  00B6               	movwf	??_string_testing
  2100  017C                     u2007:
  2101  017C  0BB6               	decfsz	??_string_testing,f
  2102  017D  297C               	goto	u2007
  2103  017E  0BB7               	decfsz	??_string_testing+1,f
  2104  017F  297C               	goto	u2007
  2105  0180  0BB8               	decfsz	??_string_testing+2,f
  2106  0181  297C               	goto	u2007
  2107  0182                     l3425:
  2108                           
  2109                           ;main.c: 410:     lcd_clear();
  2110  0182  160A  118A  2786  120A  118A  	fcall	_lcd_clear
  2111                           
  2112                           ;main.c: 413:     lcd_goto(1,0);
  2113  0187  01F8               	clrf	lcd_goto@col
  2114  0188  3001               	movlw	1
  2115  0189  120A  158A  23E3  120A  118A  	fcall	_lcd_goto
  2116  018E                     l3427:
  2117                           
  2118                           ;main.c: 414:     printf("strlen");
  2119  018E  3070               	movlw	low (STR_32| (0+32768))
  2120  018F  1283               	bcf	3,5	;RP0=0, select bank0
  2121  0190  1303               	bcf	3,6	;RP1=0, select bank0
  2122  0191  00A6               	movwf	printf@f
  2123  0192  3088               	movlw	high (STR_32| (0+32768))
  2124  0193  00A7               	movwf	printf@f+1
  2125  0194  120A  158A  26BC  120A  118A  	fcall	_printf
  2126  0199                     l3429:
  2127                           
  2128                           ;main.c: 415:     lcd_goto(2,0);
  2129  0199  01F8               	clrf	lcd_goto@col
  2130  019A  3002               	movlw	2
  2131  019B  120A  158A  23E3  120A  118A  	fcall	_lcd_goto
  2132                           
  2133                           ;main.c: 416:     printf("length: %d",strlen(string));
  2134  01A0  3035               	movlw	low (STR_33| (0+32768))
  2135  01A1  1283               	bcf	3,5	;RP0=0, select bank0
  2136  01A2  1303               	bcf	3,6	;RP1=0, select bank0
  2137  01A3  00A6               	movwf	printf@f
  2138  01A4  3088               	movlw	high (STR_33| (0+32768))
  2139  01A5  00A7               	movwf	printf@f+1
  2140  01A6  3044               	movlw	(low (string_testing@string| 0))& (0+255)
  2141  01A7  120A  158A  216D  120A  118A  	fcall	_strlen
  2142  01AC  0873               	movf	?_strlen+1,w
  2143  01AD  1283               	bcf	3,5	;RP0=0, select bank0
  2144  01AE  1303               	bcf	3,6	;RP1=0, select bank0
  2145  01AF  00A9               	movwf	?_printf+3
  2146  01B0  0872               	movf	?_strlen,w
  2147  01B1  00A8               	movwf	?_printf+2
  2148  01B2  120A  158A  26BC  120A  118A  	fcall	_printf
  2149  01B7                     l3431:
  2150                           
  2151                           ;main.c: 417:     _delay((unsigned long)((3000)*(20000000/4000.0)));
  2152  01B7  304D               	movlw	77
  2153  01B8  1283               	bcf	3,5	;RP0=0, select bank0
  2154  01B9  1303               	bcf	3,6	;RP1=0, select bank0
  2155  01BA  00B8               	movwf	??_string_testing+2
  2156  01BB  3019               	movlw	25
  2157  01BC  00B7               	movwf	??_string_testing+1
  2158  01BD  304F               	movlw	79
  2159  01BE  00B6               	movwf	??_string_testing
  2160  01BF                     u2017:
  2161  01BF  0BB6               	decfsz	??_string_testing,f
  2162  01C0  29BF               	goto	u2017
  2163  01C1  0BB7               	decfsz	??_string_testing+1,f
  2164  01C2  29BF               	goto	u2017
  2165  01C3  0BB8               	decfsz	??_string_testing+2,f
  2166  01C4  29BF               	goto	u2017
  2167  01C5                     l3433:
  2168                           
  2169                           ;main.c: 418:     lcd_clear();
  2170  01C5  160A  118A  2786  120A  118A  	fcall	_lcd_clear
  2171  01CA                     l3435:
  2172                           
  2173                           ;main.c: 421:     lcd_goto(1,0);
  2174  01CA  01F8               	clrf	lcd_goto@col
  2175  01CB  3001               	movlw	1
  2176  01CC  120A  158A  23E3  120A  118A  	fcall	_lcd_goto
  2177  01D1                     l3437:
  2178                           
  2179                           ;main.c: 422:     printf("strcmp");
  2180  01D1  307E               	movlw	low (STR_34| (0+32768))
  2181  01D2  1283               	bcf	3,5	;RP0=0, select bank0
  2182  01D3  1303               	bcf	3,6	;RP1=0, select bank0
  2183  01D4  00A6               	movwf	printf@f
  2184  01D5  3088               	movlw	high (STR_34| (0+32768))
  2185  01D6  00A7               	movwf	printf@f+1
  2186  01D7  120A  158A  26BC  120A  118A  	fcall	_printf
  2187  01DC                     l3439:
  2188                           
  2189                           ;main.c: 423:     lcd_goto(2,0);
  2190  01DC  01F8               	clrf	lcd_goto@col
  2191  01DD  3002               	movlw	2
  2192  01DE  120A  158A  23E3  120A  118A  	fcall	_lcd_goto
  2193  01E3                     l3441:
  2194                           
  2195                           ;main.c: 424:     printf("%d",strcmp(string,"abcd"));
  2196  01E3  303D               	movlw	low ((STR_33+8)| (0+32768))
  2197  01E4  1283               	bcf	3,5	;RP0=0, select bank0
  2198  01E5  1303               	bcf	3,6	;RP1=0, select bank0
  2199  01E6  00A6               	movwf	printf@f
  2200  01E7  3088               	movlw	high ((STR_33+8)| (0+32768))
  2201  01E8  00A7               	movwf	printf@f+1
  2202  01E9  30B5               	movlw	low (STR_36| (0+32768))
  2203  01EA  00F2               	movwf	strcmp@s2
  2204  01EB  3088               	movlw	high (STR_36| (0+32768))
  2205  01EC  00F3               	movwf	strcmp@s2+1
  2206  01ED  3044               	movlw	(low (string_testing@string| 0))& (0+255)
  2207  01EE  120A  158A  2376  120A  118A  	fcall	_strcmp
  2208  01F3  0873               	movf	?_strcmp+1,w
  2209  01F4  1283               	bcf	3,5	;RP0=0, select bank0
  2210  01F5  1303               	bcf	3,6	;RP1=0, select bank0
  2211  01F6  00A9               	movwf	?_printf+3
  2212  01F7  0872               	movf	?_strcmp,w
  2213  01F8  00A8               	movwf	?_printf+2
  2214  01F9  120A  158A  26BC  120A  118A  	fcall	_printf
  2215  01FE                     l3443:
  2216                           
  2217                           ;main.c: 425:     _delay((unsigned long)((3000)*(20000000/4000.0)));
  2218  01FE  304D               	movlw	77
  2219  01FF  1283               	bcf	3,5	;RP0=0, select bank0
  2220  0200  1303               	bcf	3,6	;RP1=0, select bank0
  2221  0201  00B8               	movwf	??_string_testing+2
  2222  0202  3019               	movlw	25
  2223  0203  00B7               	movwf	??_string_testing+1
  2224  0204  304F               	movlw	79
  2225  0205  00B6               	movwf	??_string_testing
  2226  0206                     u2027:
  2227  0206  0BB6               	decfsz	??_string_testing,f
  2228  0207  2A06               	goto	u2027
  2229  0208  0BB7               	decfsz	??_string_testing+1,f
  2230  0209  2A06               	goto	u2027
  2231  020A  0BB8               	decfsz	??_string_testing+2,f
  2232  020B  2A06               	goto	u2027
  2233  020C                     l3445:
  2234                           
  2235                           ;main.c: 426:     lcd_clear();
  2236  020C  160A  118A  2786  120A  118A  	fcall	_lcd_clear
  2237  0211                     l3447:
  2238                           
  2239                           ;main.c: 429:     lcd_goto(1,0);
  2240  0211  01F8               	clrf	lcd_goto@col
  2241  0212  3001               	movlw	1
  2242  0213  120A  158A  23E3  120A  118A  	fcall	_lcd_goto
  2243  0218                     l3449:
  2244                           
  2245                           ;main.c: 430:     printf("memcmp");
  2246  0218  3077               	movlw	low (STR_37| (0+32768))
  2247  0219  1283               	bcf	3,5	;RP0=0, select bank0
  2248  021A  1303               	bcf	3,6	;RP1=0, select bank0
  2249  021B  00A6               	movwf	printf@f
  2250  021C  3088               	movlw	high (STR_37| (0+32768))
  2251  021D  00A7               	movwf	printf@f+1
  2252  021E  120A  158A  26BC  120A  118A  	fcall	_printf
  2253                           
  2254                           ;main.c: 431:     lcd_goto(2,0);
  2255  0223  01F8               	clrf	lcd_goto@col
  2256  0224  3002               	movlw	2
  2257  0225  120A  158A  23E3  120A  118A  	fcall	_lcd_goto
  2258  022A                     l3451:
  2259                           
  2260                           ;main.c: 432:     printf("%d",memcmp(string,"ab",5));
  2261  022A  303D               	movlw	low ((STR_33+8)| (0+32768))
  2262  022B  1283               	bcf	3,5	;RP0=0, select bank0
  2263  022C  1303               	bcf	3,6	;RP1=0, select bank0
  2264  022D  00A6               	movwf	printf@f
  2265  022E  3088               	movlw	high ((STR_33+8)| (0+32768))
  2266  022F  00A7               	movwf	printf@f+1
  2267  0230  30BA               	movlw	low (STR_39| (0+32768))
  2268  0231  00F2               	movwf	memcmp@s2
  2269  0232  3088               	movlw	high (STR_39| (0+32768))
  2270  0233  00F3               	movwf	memcmp@s2+1
  2271  0234  3005               	movlw	5
  2272  0235  00F4               	movwf	memcmp@n
  2273  0236  3000               	movlw	0
  2274  0237  00F5               	movwf	memcmp@n+1
  2275  0238  3044               	movlw	(low (string_testing@string| 0))& (0+255)
  2276  0239  120A  158A  2556  120A  118A  	fcall	_memcmp
  2277  023E  0873               	movf	?_memcmp+1,w
  2278  023F  1283               	bcf	3,5	;RP0=0, select bank0
  2279  0240  1303               	bcf	3,6	;RP1=0, select bank0
  2280  0241  00A9               	movwf	?_printf+3
  2281  0242  0872               	movf	?_memcmp,w
  2282  0243  00A8               	movwf	?_printf+2
  2283  0244  120A  158A  26BC  120A  118A  	fcall	_printf
  2284  0249                     l3453:
  2285                           
  2286                           ;main.c: 433:     _delay((unsigned long)((3000)*(20000000/4000.0)));
  2287  0249  304D               	movlw	77
  2288  024A  1283               	bcf	3,5	;RP0=0, select bank0
  2289  024B  1303               	bcf	3,6	;RP1=0, select bank0
  2290  024C  00B8               	movwf	??_string_testing+2
  2291  024D  3019               	movlw	25
  2292  024E  00B7               	movwf	??_string_testing+1
  2293  024F  304F               	movlw	79
  2294  0250  00B6               	movwf	??_string_testing
  2295  0251                     u2037:
  2296  0251  0BB6               	decfsz	??_string_testing,f
  2297  0252  2A51               	goto	u2037
  2298  0253  0BB7               	decfsz	??_string_testing+1,f
  2299  0254  2A51               	goto	u2037
  2300  0255  0BB8               	decfsz	??_string_testing+2,f
  2301  0256  2A51               	goto	u2037
  2302  0257                     l3455:
  2303                           
  2304                           ;main.c: 434:     lcd_clear();
  2305  0257  160A  118A  2786  120A  118A  	fcall	_lcd_clear
  2306  025C                     l3457:
  2307                           
  2308                           ;main.c: 437:     lcd_goto(1,0);
  2309  025C  01F8               	clrf	lcd_goto@col
  2310  025D  3001               	movlw	1
  2311  025E  120A  158A  23E3  120A  118A  	fcall	_lcd_goto
  2312  0263                     l3459:
  2313                           
  2314                           ;main.c: 438:     printf("strcpy");
  2315  0263  30A8               	movlw	low (STR_40| (0+32768))
  2316  0264  1283               	bcf	3,5	;RP0=0, select bank0
  2317  0265  1303               	bcf	3,6	;RP1=0, select bank0
  2318  0266  00A6               	movwf	printf@f
  2319  0267  3088               	movlw	high (STR_40| (0+32768))
  2320  0268  00A7               	movwf	printf@f+1
  2321  0269  120A  158A  26BC  120A  118A  	fcall	_printf
  2322  026E                     l3461:
  2323                           
  2324                           ;main.c: 439:     lcd_goto(2,0);
  2325  026E  01F8               	clrf	lcd_goto@col
  2326  026F  3002               	movlw	2
  2327  0270  120A  158A  23E3  120A  118A  	fcall	_lcd_goto
  2328  0275                     l3463:
  2329                           
  2330                           ;main.c: 440:     printf("%s",strcpy(string,"teste"));
  2331  0275  3027               	movlw	low ((STR_2+10)| (0+32768))
  2332  0276  1283               	bcf	3,5	;RP0=0, select bank0
  2333  0277  1303               	bcf	3,6	;RP1=0, select bank0
  2334  0278  00A6               	movwf	printf@f
  2335  0279  3088               	movlw	high ((STR_2+10)| (0+32768))
  2336  027A  00A7               	movwf	printf@f+1
  2337  027B  30AF               	movlw	low (STR_42| (0+32768))
  2338  027C  00F2               	movwf	strcpy@from
  2339  027D  3088               	movlw	high (STR_42| (0+32768))
  2340  027E  00F3               	movwf	strcpy@from+1
  2341  027F  3044               	movlw	(low (string_testing@string| 0))& (0+255)
  2342  0280  120A  158A  22D1  120A  118A  	fcall	_strcpy
  2343  0285  1283               	bcf	3,5	;RP0=0, select bank0
  2344  0286  1303               	bcf	3,6	;RP1=0, select bank0
  2345  0287  00B6               	movwf	??_string_testing
  2346  0288  0836               	movf	??_string_testing,w
  2347  0289  00A8               	movwf	low ((?_printf| 0+2))
  2348  028A  120A  158A  26BC  120A  118A  	fcall	_printf
  2349  028F                     l3465:
  2350                           
  2351                           ;main.c: 441:     _delay((unsigned long)((3000)*(20000000/4000.0)));
  2352  028F  304D               	movlw	77
  2353  0290  1283               	bcf	3,5	;RP0=0, select bank0
  2354  0291  1303               	bcf	3,6	;RP1=0, select bank0
  2355  0292  00B8               	movwf	??_string_testing+2
  2356  0293  3019               	movlw	25
  2357  0294  00B7               	movwf	??_string_testing+1
  2358  0295  304F               	movlw	79
  2359  0296  00B6               	movwf	??_string_testing
  2360  0297                     u2047:
  2361  0297  0BB6               	decfsz	??_string_testing,f
  2362  0298  2A97               	goto	u2047
  2363  0299  0BB7               	decfsz	??_string_testing+1,f
  2364  029A  2A97               	goto	u2047
  2365  029B  0BB8               	decfsz	??_string_testing+2,f
  2366  029C  2A97               	goto	u2047
  2367  029D                     l3467:
  2368                           
  2369                           ;main.c: 442:     lcd_clear();
  2370  029D  160A  118A  2786  120A  118A  	fcall	_lcd_clear
  2371  02A2                     l3469:
  2372                           
  2373                           ;main.c: 445:     lcd_goto(1,0);
  2374  02A2  01F8               	clrf	lcd_goto@col
  2375  02A3  3001               	movlw	1
  2376  02A4  120A  158A  23E3  120A  118A  	fcall	_lcd_goto
  2377                           
  2378                           ;main.c: 446:     printf("memcpy");
  2379  02A9  30A1               	movlw	low (STR_43| (0+32768))
  2380  02AA  1283               	bcf	3,5	;RP0=0, select bank0
  2381  02AB  1303               	bcf	3,6	;RP1=0, select bank0
  2382  02AC  00A6               	movwf	printf@f
  2383  02AD  3088               	movlw	high (STR_43| (0+32768))
  2384  02AE  00A7               	movwf	printf@f+1
  2385  02AF  120A  158A  26BC  120A  118A  	fcall	_printf
  2386  02B4                     l3471:
  2387                           
  2388                           ;main.c: 447:     lcd_goto(2,0);
  2389  02B4  01F8               	clrf	lcd_goto@col
  2390  02B5  3002               	movlw	2
  2391  02B6  120A  158A  23E3  120A  118A  	fcall	_lcd_goto
  2392  02BB                     l3473:
  2393                           
  2394                           ;main.c: 448:     printf("%s",memcpy(string,"teste",5));
  2395  02BB  3027               	movlw	low ((STR_2+10)| (0+32768))
  2396  02BC  1283               	bcf	3,5	;RP0=0, select bank0
  2397  02BD  1303               	bcf	3,6	;RP1=0, select bank0
  2398  02BE  00A6               	movwf	printf@f
  2399  02BF  3088               	movlw	high ((STR_2+10)| (0+32768))
  2400  02C0  00A7               	movwf	printf@f+1
  2401  02C1  30AF               	movlw	low (STR_42| (0+32768))
  2402  02C2  00F2               	movwf	memcpy@s1
  2403  02C3  3088               	movlw	high (STR_42| (0+32768))
  2404  02C4  00F3               	movwf	memcpy@s1+1
  2405  02C5  3005               	movlw	5
  2406  02C6  00F4               	movwf	memcpy@n
  2407  02C7  3000               	movlw	0
  2408  02C8  00F5               	movwf	memcpy@n+1
  2409  02C9  3044               	movlw	(low (string_testing@string| 0))& (0+255)
  2410  02CA  120A  158A  23AA  120A  118A  	fcall	_memcpy
  2411  02CF  1283               	bcf	3,5	;RP0=0, select bank0
  2412  02D0  1303               	bcf	3,6	;RP1=0, select bank0
  2413  02D1  00B6               	movwf	??_string_testing
  2414  02D2  0836               	movf	??_string_testing,w
  2415  02D3  00A8               	movwf	low ((?_printf| 0+2))
  2416  02D4  120A  158A  26BC  120A  118A  	fcall	_printf
  2417  02D9                     l3475:
  2418                           
  2419                           ;main.c: 449:     _delay((unsigned long)((3000)*(20000000/4000.0)));
  2420  02D9  304D               	movlw	77
  2421  02DA  1283               	bcf	3,5	;RP0=0, select bank0
  2422  02DB  1303               	bcf	3,6	;RP1=0, select bank0
  2423  02DC  00B8               	movwf	??_string_testing+2
  2424  02DD  3019               	movlw	25
  2425  02DE  00B7               	movwf	??_string_testing+1
  2426  02DF  304F               	movlw	79
  2427  02E0  00B6               	movwf	??_string_testing
  2428  02E1                     u2057:
  2429  02E1  0BB6               	decfsz	??_string_testing,f
  2430  02E2  2AE1               	goto	u2057
  2431  02E3  0BB7               	decfsz	??_string_testing+1,f
  2432  02E4  2AE1               	goto	u2057
  2433  02E5  0BB8               	decfsz	??_string_testing+2,f
  2434  02E6  2AE1               	goto	u2057
  2435  02E7                     l3477:
  2436                           
  2437                           ;main.c: 450:     lcd_clear();
  2438  02E7  160A  118A  2786  120A  118A  	fcall	_lcd_clear
  2439  02EC                     l3479:
  2440                           
  2441                           ;main.c: 453:     lcd_goto(1,0);
  2442  02EC  01F8               	clrf	lcd_goto@col
  2443  02ED  3001               	movlw	1
  2444  02EE  120A  158A  23E3  120A  118A  	fcall	_lcd_goto
  2445  02F3                     l3481:
  2446                           
  2447                           ;main.c: 454:     printf("memmove");
  2448  02F3  3053               	movlw	low (STR_46| (0+32768))
  2449  02F4  1283               	bcf	3,5	;RP0=0, select bank0
  2450  02F5  1303               	bcf	3,6	;RP1=0, select bank0
  2451  02F6  00A6               	movwf	printf@f
  2452  02F7  3088               	movlw	high (STR_46| (0+32768))
  2453  02F8  00A7               	movwf	printf@f+1
  2454  02F9  120A  158A  26BC  120A  118A  	fcall	_printf
  2455  02FE                     l3483:
  2456                           
  2457                           ;main.c: 455:     lcd_goto(2,0);
  2458  02FE  01F8               	clrf	lcd_goto@col
  2459  02FF  3002               	movlw	2
  2460  0300  120A  158A  23E3  120A  118A  	fcall	_lcd_goto
  2461  0305                     l3485:
  2462                           
  2463                           ;main.c: 456:     printf("%s",memmove(string,"teste2",6));
  2464  0305  3027               	movlw	low ((STR_2+10)| (0+32768))
  2465  0306  1283               	bcf	3,5	;RP0=0, select bank0
  2466  0307  1303               	bcf	3,6	;RP1=0, select bank0
  2467  0308  00A6               	movwf	printf@f
  2468  0309  3088               	movlw	high ((STR_2+10)| (0+32768))
  2469  030A  00A7               	movwf	printf@f+1
  2470  030B  3062               	movlw	low (STR_48| (0+32768))
  2471  030C  00F2               	movwf	memmove@s1
  2472  030D  3088               	movlw	high (STR_48| (0+32768))
  2473  030E  00F3               	movwf	memmove@s1+1
  2474  030F  3006               	movlw	6
  2475  0310  00F4               	movwf	memmove@n
  2476  0311  3000               	movlw	0
  2477  0312  00F5               	movwf	memmove@n+1
  2478  0313  3044               	movlw	(low (string_testing@string| 0))& (0+255)
  2479  0314  120A  118A  2643  120A  118A  	fcall	_memmove
  2480  0319  1283               	bcf	3,5	;RP0=0, select bank0
  2481  031A  1303               	bcf	3,6	;RP1=0, select bank0
  2482  031B  00B6               	movwf	??_string_testing
  2483  031C  0836               	movf	??_string_testing,w
  2484  031D  00A8               	movwf	low ((?_printf| 0+2))
  2485  031E  120A  158A  26BC  120A  118A  	fcall	_printf
  2486  0323                     l3487:
  2487                           
  2488                           ;main.c: 457:     _delay((unsigned long)((3000)*(20000000/4000.0)));
  2489  0323  304D               	movlw	77
  2490  0324  1283               	bcf	3,5	;RP0=0, select bank0
  2491  0325  1303               	bcf	3,6	;RP1=0, select bank0
  2492  0326  00B8               	movwf	??_string_testing+2
  2493  0327  3019               	movlw	25
  2494  0328  00B7               	movwf	??_string_testing+1
  2495  0329  304F               	movlw	79
  2496  032A  00B6               	movwf	??_string_testing
  2497  032B                     u2067:
  2498  032B  0BB6               	decfsz	??_string_testing,f
  2499  032C  2B2B               	goto	u2067
  2500  032D  0BB7               	decfsz	??_string_testing+1,f
  2501  032E  2B2B               	goto	u2067
  2502  032F  0BB8               	decfsz	??_string_testing+2,f
  2503  0330  2B2B               	goto	u2067
  2504  0331                     l3489:
  2505                           
  2506                           ;main.c: 458:     lcd_clear();
  2507  0331  160A  118A  2786  120A  118A  	fcall	_lcd_clear
  2508                           
  2509                           ;main.c: 461:     lcd_goto(1,0);
  2510  0336  01F8               	clrf	lcd_goto@col
  2511  0337  3001               	movlw	1
  2512  0338  120A  158A  23E3  120A  118A  	fcall	_lcd_goto
  2513  033D                     l3491:
  2514                           
  2515                           ;main.c: 462:     printf("memset");
  2516  033D  309A               	movlw	low (STR_49| (0+32768))
  2517  033E  1283               	bcf	3,5	;RP0=0, select bank0
  2518  033F  1303               	bcf	3,6	;RP1=0, select bank0
  2519  0340  00A6               	movwf	printf@f
  2520  0341  3088               	movlw	high (STR_49| (0+32768))
  2521  0342  00A7               	movwf	printf@f+1
  2522  0343  120A  158A  26BC  120A  118A  	fcall	_printf
  2523  0348                     l3493:
  2524                           
  2525                           ;main.c: 463:     lcd_goto(2,0);
  2526  0348  01F8               	clrf	lcd_goto@col
  2527  0349  3002               	movlw	2
  2528  034A  120A  158A  23E3  120A  118A  	fcall	_lcd_goto
  2529                           
  2530                           ;main.c: 464:     printf("%s",memset(string,'a',5));
  2531  034F  3027               	movlw	low ((STR_2+10)| (0+32768))
  2532  0350  1283               	bcf	3,5	;RP0=0, select bank0
  2533  0351  1303               	bcf	3,6	;RP1=0, select bank0
  2534  0352  00A6               	movwf	printf@f
  2535  0353  3088               	movlw	high ((STR_2+10)| (0+32768))
  2536  0354  00A7               	movwf	printf@f+1
  2537  0355  3061               	movlw	97
  2538  0356  00F2               	movwf	memset@c
  2539  0357  3000               	movlw	0
  2540  0358  00F3               	movwf	memset@c+1
  2541  0359  3005               	movlw	5
  2542  035A  00F4               	movwf	memset@n
  2543  035B  3000               	movlw	0
  2544  035C  00F5               	movwf	memset@n+1
  2545  035D  3044               	movlw	(low (string_testing@string| 0))& (0+255)
  2546  035E  120A  158A  2216  120A  118A  	fcall	_memset
  2547  0363  1283               	bcf	3,5	;RP0=0, select bank0
  2548  0364  1303               	bcf	3,6	;RP1=0, select bank0
  2549  0365  00B6               	movwf	??_string_testing
  2550  0366  0836               	movf	??_string_testing,w
  2551  0367  00A8               	movwf	low ((?_printf| 0+2))
  2552  0368  120A  158A  26BC  120A  118A  	fcall	_printf
  2553  036D                     l3495:
  2554                           
  2555                           ;main.c: 465:     _delay((unsigned long)((3000)*(20000000/4000.0)));
  2556  036D  304D               	movlw	77
  2557  036E  1283               	bcf	3,5	;RP0=0, select bank0
  2558  036F  1303               	bcf	3,6	;RP1=0, select bank0
  2559  0370  00B8               	movwf	??_string_testing+2
  2560  0371  3019               	movlw	25
  2561  0372  00B7               	movwf	??_string_testing+1
  2562  0373  304F               	movlw	79
  2563  0374  00B6               	movwf	??_string_testing
  2564  0375                     u2077:
  2565  0375  0BB6               	decfsz	??_string_testing,f
  2566  0376  2B75               	goto	u2077
  2567  0377  0BB7               	decfsz	??_string_testing+1,f
  2568  0378  2B75               	goto	u2077
  2569  0379  0BB8               	decfsz	??_string_testing+2,f
  2570  037A  2B75               	goto	u2077
  2571  037B                     l3497:
  2572                           
  2573                           ;main.c: 466:     lcd_clear();
  2574  037B  160A  118A  2786  120A  118A  	fcall	_lcd_clear
  2575  0380                     l189:
  2576  0380  0008               	return
  2577  0381                     __end_of_string_testing:
  2578                           
  2579                           	psect	text2
  2580  096D                     __ptext2:	
  2581 ;; *************** function _strlen *****************
  2582 ;; Defined at:
  2583 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\strlen.c"
  2584 ;; Parameters:    Size  Location     Type
  2585 ;;  s               1    wreg     PTR const unsigned char 
  2586 ;;		 -> string_testing@string(10), 
  2587 ;; Auto vars:     Size  Location     Type
  2588 ;;  s               1    5[COMMON] PTR const unsigned char 
  2589 ;;		 -> string_testing@string(10), 
  2590 ;;  cp              1    6[COMMON] PTR const unsigned char 
  2591 ;;		 -> string_testing@string(10), 
  2592 ;; Return value:  Size  Location     Type
  2593 ;;                  2    2[COMMON] unsigned int 
  2594 ;; Registers used:
  2595 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2596 ;; Tracked objects:
  2597 ;;		On entry : 0/0
  2598 ;;		On exit  : 0/0
  2599 ;;		Unchanged: 0/0
  2600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2601 ;;      Params:         2       0       0       0       0
  2602 ;;      Locals:         2       0       0       0       0
  2603 ;;      Temps:          1       0       0       0       0
  2604 ;;      Totals:         5       0       0       0       0
  2605 ;;Total ram usage:        5 bytes
  2606 ;; Hardware stack levels used: 1
  2607 ;; Hardware stack levels required when called: 1
  2608 ;; This function calls:
  2609 ;;		Nothing
  2610 ;; This function is called by:
  2611 ;;		_string_testing
  2612 ;; This function uses a non-reentrant model
  2613 ;;
  2614                           
  2615                           
  2616                           ;psect for function _strlen
  2617  096D                     _strlen:
  2618                           
  2619                           ;incstack = 0
  2620                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
  2621                           ;strlen@s stored from wreg
  2622  096D  00F5               	movwf	strlen@s
  2623  096E                     l2627:
  2624  096E  0875               	movf	strlen@s,w
  2625  096F  00F4               	movwf	??_strlen
  2626  0970  0874               	movf	??_strlen,w
  2627  0971  00F6               	movwf	strlen@cp
  2628  0972  2977               	goto	l2631
  2629  0973                     l2629:
  2630  0973  3001               	movlw	1
  2631  0974  00F4               	movwf	??_strlen
  2632  0975  0874               	movf	??_strlen,w
  2633  0976  07F6               	addwf	strlen@cp,f
  2634  0977                     l2631:
  2635  0977  0876               	movf	strlen@cp,w
  2636  0978  0084               	movwf	4
  2637  0979  1383               	bcf	3,7	;select IRP bank0
  2638  097A  0800               	movf	0,w
  2639  097B  1D03               	btfss	3,2
  2640  097C  297E               	goto	u1591
  2641  097D  297F               	goto	u1590
  2642  097E                     u1591:
  2643  097E  2973               	goto	l2629
  2644  097F                     u1590:
  2645  097F                     l2633:
  2646  097F  0875               	movf	strlen@s,w
  2647  0980  0276               	subwf	strlen@cp,w
  2648  0981  00F2               	movwf	?_strlen
  2649  0982  01F3               	clrf	?_strlen+1
  2650  0983  1BF2               	btfsc	?_strlen,7
  2651  0984  03F3               	decf	?_strlen+1,f
  2652  0985                     l1057:
  2653  0985  0008               	return
  2654  0986                     __end_of_strlen:
  2655                           
  2656                           	psect	text3
  2657  0AD1                     __ptext3:	
  2658 ;; *************** function _strcpy *****************
  2659 ;; Defined at:
  2660 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\strcpy.c"
  2661 ;; Parameters:    Size  Location     Type
  2662 ;;  to              1    wreg     PTR unsigned char 
  2663 ;;		 -> string_testing@string(10), 
  2664 ;;  from            2    2[COMMON] PTR const unsigned char 
  2665 ;;		 -> STR_42(6), 
  2666 ;; Auto vars:     Size  Location     Type
  2667 ;;  to              1    6[COMMON] PTR unsigned char 
  2668 ;;		 -> string_testing@string(10), 
  2669 ;;  cp              1    5[COMMON] PTR unsigned char 
  2670 ;;		 -> string_testing@string(10), 
  2671 ;; Return value:  Size  Location     Type
  2672 ;;                  1    wreg      PTR unsigned char 
  2673 ;; Registers used:
  2674 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  2675 ;; Tracked objects:
  2676 ;;		On entry : 0/0
  2677 ;;		On exit  : 0/0
  2678 ;;		Unchanged: 0/0
  2679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2680 ;;      Params:         2       0       0       0       0
  2681 ;;      Locals:         2       0       0       0       0
  2682 ;;      Temps:          1       0       0       0       0
  2683 ;;      Totals:         5       0       0       0       0
  2684 ;;Total ram usage:        5 bytes
  2685 ;; Hardware stack levels used: 2
  2686 ;; Hardware stack levels required when called: 1
  2687 ;; This function calls:
  2688 ;;		Nothing
  2689 ;; This function is called by:
  2690 ;;		_string_testing
  2691 ;; This function uses a non-reentrant model
  2692 ;;
  2693                           
  2694                           
  2695                           ;psect for function _strcpy
  2696  0AD1                     _strcpy:
  2697                           
  2698                           ;incstack = 0
  2699                           ; Regs used in _strcpy: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  2700                           ;strcpy@to stored from wreg
  2701  0AD1  00F6               	movwf	strcpy@to
  2702  0AD2                     l2667:
  2703  0AD2  0876               	movf	strcpy@to,w
  2704  0AD3  00F4               	movwf	??_strcpy
  2705  0AD4  0874               	movf	??_strcpy,w
  2706  0AD5  00F5               	movwf	strcpy@cp
  2707  0AD6  2AE1               	goto	l2673
  2708  0AD7                     l2669:
  2709  0AD7  3001               	movlw	1
  2710  0AD8  00F4               	movwf	??_strcpy
  2711  0AD9  0874               	movf	??_strcpy,w
  2712  0ADA  07F5               	addwf	strcpy@cp,f
  2713  0ADB                     l2671:
  2714  0ADB  3001               	movlw	1
  2715  0ADC  07F2               	addwf	strcpy@from,f
  2716  0ADD  1803               	skipnc
  2717  0ADE  0AF3               	incf	strcpy@from+1,f
  2718  0ADF  3000               	movlw	0
  2719  0AE0  07F3               	addwf	strcpy@from+1,f
  2720  0AE1                     l2673:
  2721  0AE1  0873               	movf	strcpy@from+1,w
  2722  0AE2  1283               	bcf	3,5	;RP0=0, select bank0
  2723  0AE3  1303               	bcf	3,6	;RP1=0, select bank0
  2724  0AE4  00FF               	movwf	btemp+1
  2725  0AE5  0872               	movf	strcpy@from,w
  2726  0AE6  0084               	movwf	4
  2727  0AE7  120A  118A  2700  120A  158A  	fcall	stringtab
  2728  0AEC  00F4               	movwf	??_strcpy
  2729  0AED  0875               	movf	strcpy@cp,w
  2730  0AEE  0084               	movwf	4
  2731  0AEF  0874               	movf	??_strcpy,w
  2732  0AF0  1383               	bcf	3,7	;select IRP bank0
  2733  0AF1  0080               	movwf	0
  2734  0AF2  0800               	movf	0,w
  2735  0AF3  1D03               	btfss	3,2
  2736  0AF4  2AF6               	goto	u1641
  2737  0AF5  2AF7               	goto	u1640
  2738  0AF6                     u1641:
  2739  0AF6  2AD7               	goto	l2669
  2740  0AF7                     u1640:
  2741  0AF7                     l2675:
  2742  0AF7  0876               	movf	strcpy@to,w
  2743  0AF8                     l1051:
  2744  0AF8  0008               	return
  2745  0AF9                     __end_of_strcpy:
  2746                           
  2747                           	psect	text4
  2748  0B76                     __ptext4:	
  2749 ;; *************** function _strcmp *****************
  2750 ;; Defined at:
  2751 ;;		line 33 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\strcmp.c"
  2752 ;; Parameters:    Size  Location     Type
  2753 ;;  s1              1    wreg     PTR const unsigned char 
  2754 ;;		 -> string_testing@string(10), 
  2755 ;;  s2              2    2[COMMON] PTR const unsigned char 
  2756 ;;		 -> STR_36(5), 
  2757 ;; Auto vars:     Size  Location     Type
  2758 ;;  s1              1    8[COMMON] PTR const unsigned char 
  2759 ;;		 -> string_testing@string(10), 
  2760 ;;  r               1    7[COMMON] char 
  2761 ;; Return value:  Size  Location     Type
  2762 ;;                  2    2[COMMON] int 
  2763 ;; Registers used:
  2764 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  2765 ;; Tracked objects:
  2766 ;;		On entry : 0/0
  2767 ;;		On exit  : 0/0
  2768 ;;		Unchanged: 0/0
  2769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2770 ;;      Params:         2       0       0       0       0
  2771 ;;      Locals:         2       0       0       0       0
  2772 ;;      Temps:          3       0       0       0       0
  2773 ;;      Totals:         7       0       0       0       0
  2774 ;;Total ram usage:        7 bytes
  2775 ;; Hardware stack levels used: 2
  2776 ;; Hardware stack levels required when called: 1
  2777 ;; This function calls:
  2778 ;;		Nothing
  2779 ;; This function is called by:
  2780 ;;		_string_testing
  2781 ;; This function uses a non-reentrant model
  2782 ;;
  2783                           
  2784                           
  2785                           ;psect for function _strcmp
  2786  0B76                     _strcmp:
  2787                           
  2788                           ;incstack = 0
  2789                           ; Regs used in _strcmp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  2790                           ;strcmp@s1 stored from wreg
  2791  0B76  00F8               	movwf	strcmp@s1
  2792  0B77                     l2637:
  2793  0B77  2B82               	goto	l2641
  2794  0B78                     l2639:
  2795  0B78  3001               	movlw	1
  2796  0B79  00F4               	movwf	??_strcmp
  2797  0B7A  0874               	movf	??_strcmp,w
  2798  0B7B  07F8               	addwf	strcmp@s1,f
  2799  0B7C  3001               	movlw	1
  2800  0B7D  07F2               	addwf	strcmp@s2,f
  2801  0B7E  1803               	skipnc
  2802  0B7F  0AF3               	incf	strcmp@s2+1,f
  2803  0B80  3000               	movlw	0
  2804  0B81  07F3               	addwf	strcmp@s2+1,f
  2805  0B82                     l2641:
  2806  0B82  0873               	movf	strcmp@s2+1,w
  2807  0B83  1283               	bcf	3,5	;RP0=0, select bank0
  2808  0B84  1303               	bcf	3,6	;RP1=0, select bank0
  2809  0B85  00FF               	movwf	btemp+1
  2810  0B86  0872               	movf	strcmp@s2,w
  2811  0B87  0084               	movwf	4
  2812  0B88  120A  118A  2700  120A  158A  	fcall	stringtab
  2813  0B8D  00F4               	movwf	??_strcmp
  2814  0B8E  0878               	movf	strcmp@s1,w
  2815  0B8F  0084               	movwf	4
  2816  0B90  1383               	bcf	3,7	;select IRP bank0
  2817  0B91  0800               	movf	0,w
  2818  0B92  00F5               	movwf	??_strcmp+1
  2819  0B93  0874               	movf	??_strcmp,w
  2820  0B94  0275               	subwf	??_strcmp+1,w
  2821  0B95  00F6               	movwf	??_strcmp+2
  2822  0B96  0876               	movf	??_strcmp+2,w
  2823  0B97  00F7               	movwf	strcmp@r
  2824  0B98  0877               	movf	strcmp@r,w
  2825  0B99  1D03               	btfss	3,2
  2826  0B9A  2B9C               	goto	u1601
  2827  0B9B  2B9D               	goto	u1600
  2828  0B9C                     u1601:
  2829  0B9C  2BA4               	goto	l2645
  2830  0B9D                     u1600:
  2831  0B9D                     l2643:
  2832  0B9D  0878               	movf	strcmp@s1,w
  2833  0B9E  0084               	movwf	4
  2834  0B9F  0800               	movf	0,w
  2835  0BA0  1D03               	btfss	3,2
  2836  0BA1  2BA3               	goto	u1611
  2837  0BA2  2BA4               	goto	u1610
  2838  0BA3                     u1611:
  2839  0BA3  2B78               	goto	l2639
  2840  0BA4                     u1610:
  2841  0BA4                     l2645:
  2842  0BA4  0877               	movf	strcmp@r,w
  2843  0BA5  00F2               	movwf	?_strcmp
  2844  0BA6  01F3               	clrf	?_strcmp+1
  2845  0BA7  1BF2               	btfsc	?_strcmp,7
  2846  0BA8  03F3               	decf	?_strcmp+1,f
  2847  0BA9                     l1045:
  2848  0BA9  0008               	return
  2849  0BAA                     __end_of_strcmp:
  2850                           
  2851                           	psect	text5
  2852  093E                     __ptext5:	
  2853 ;; *************** function _strchr *****************
  2854 ;; Defined at:
  2855 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\strchr.c"
  2856 ;; Parameters:    Size  Location     Type
  2857 ;;  ptr             1    wreg     PTR const unsigned char 
  2858 ;;		 -> string_testing@string(10), 
  2859 ;;  chr             2    2[COMMON] int 
  2860 ;; Auto vars:     Size  Location     Type
  2861 ;;  ptr             1    4[COMMON] PTR const unsigned char 
  2862 ;;		 -> string_testing@string(10), 
  2863 ;; Return value:  Size  Location     Type
  2864 ;;                  1    wreg      PTR unsigned char 
  2865 ;; Registers used:
  2866 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2867 ;; Tracked objects:
  2868 ;;		On entry : 0/0
  2869 ;;		On exit  : 0/0
  2870 ;;		Unchanged: 0/0
  2871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2872 ;;      Params:         2       0       0       0       0
  2873 ;;      Locals:         1       0       0       0       0
  2874 ;;      Temps:          0       0       0       0       0
  2875 ;;      Totals:         3       0       0       0       0
  2876 ;;Total ram usage:        3 bytes
  2877 ;; Hardware stack levels used: 1
  2878 ;; Hardware stack levels required when called: 1
  2879 ;; This function calls:
  2880 ;;		Nothing
  2881 ;; This function is called by:
  2882 ;;		_string_testing
  2883 ;; This function uses a non-reentrant model
  2884 ;;
  2885                           
  2886                           
  2887                           ;psect for function _strchr
  2888  093E                     _strchr:
  2889                           
  2890                           ;incstack = 0
  2891                           ; Regs used in _strchr: [wreg-fsr0h+status,2+status,0]
  2892                           ;strchr@ptr stored from wreg
  2893  093E  00F4               	movwf	strchr@ptr
  2894  093F                     l1034:
  2895  093F                     l2599:
  2896  093F  0874               	movf	strchr@ptr,w
  2897  0940  0084               	movwf	4
  2898  0941  1383               	bcf	3,7	;select IRP bank0
  2899  0942  0800               	movf	0,w
  2900  0943  0672               	xorwf	strchr@chr,w
  2901  0944  1D03               	skipz
  2902  0945  2947               	goto	u1551
  2903  0946  2948               	goto	u1550
  2904  0947                     u1551:
  2905  0947  294A               	goto	l2605
  2906  0948                     u1550:
  2907  0948                     l2601:
  2908  0948  0874               	movf	strchr@ptr,w
  2909  0949  2954               	goto	l1036
  2910  094A                     l2605:
  2911  094A  0874               	movf	strchr@ptr,w
  2912  094B  0084               	movwf	4
  2913  094C  3001               	movlw	1
  2914  094D  07F4               	addwf	strchr@ptr,f
  2915  094E  0800               	movf	0,w
  2916  094F  1D03               	btfss	3,2
  2917  0950  2952               	goto	u1561
  2918  0951  2953               	goto	u1560
  2919  0952                     u1561:
  2920  0952  293F               	goto	l1034
  2921  0953                     u1560:
  2922  0953                     l2607:
  2923  0953  3000               	movlw	0
  2924  0954                     l1036:
  2925  0954  0008               	return
  2926  0955                     __end_of_strchr:
  2927                           
  2928                           	psect	text6
  2929  0AF9                     __ptext6:	
  2930 ;; *************** function _strcat *****************
  2931 ;; Defined at:
  2932 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\strcat.c"
  2933 ;; Parameters:    Size  Location     Type
  2934 ;;  to              1    wreg     PTR unsigned char 
  2935 ;;		 -> string_testing@string(10), 
  2936 ;;  from            1    2[COMMON] PTR const unsigned char 
  2937 ;;		 -> string_testing@str(10), 
  2938 ;; Auto vars:     Size  Location     Type
  2939 ;;  to              1    4[COMMON] PTR unsigned char 
  2940 ;;		 -> string_testing@string(10), 
  2941 ;;  cp              1    5[COMMON] PTR unsigned char 
  2942 ;;		 -> string_testing@string(10), 
  2943 ;; Return value:  Size  Location     Type
  2944 ;;                  1    wreg      PTR unsigned char 
  2945 ;; Registers used:
  2946 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2947 ;; Tracked objects:
  2948 ;;		On entry : 0/0
  2949 ;;		On exit  : 0/0
  2950 ;;		Unchanged: 0/0
  2951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2952 ;;      Params:         1       0       0       0       0
  2953 ;;      Locals:         2       0       0       0       0
  2954 ;;      Temps:          1       0       0       0       0
  2955 ;;      Totals:         4       0       0       0       0
  2956 ;;Total ram usage:        4 bytes
  2957 ;; Hardware stack levels used: 1
  2958 ;; Hardware stack levels required when called: 1
  2959 ;; This function calls:
  2960 ;;		Nothing
  2961 ;; This function is called by:
  2962 ;;		_string_testing
  2963 ;; This function uses a non-reentrant model
  2964 ;;
  2965                           
  2966                           
  2967                           ;psect for function _strcat
  2968  0AF9                     _strcat:
  2969                           
  2970                           ;incstack = 0
  2971                           ; Regs used in _strcat: [wreg-fsr0h+status,2+status,0]
  2972                           ;strcat@to stored from wreg
  2973  0AF9  00F4               	movwf	strcat@to
  2974  0AFA                     l2589:
  2975  0AFA  0874               	movf	strcat@to,w
  2976  0AFB  00F3               	movwf	??_strcat
  2977  0AFC  0873               	movf	??_strcat,w
  2978  0AFD  00F5               	movwf	strcat@cp
  2979  0AFE  2B03               	goto	l2593
  2980  0AFF                     l2591:
  2981  0AFF  3001               	movlw	1
  2982  0B00  00F3               	movwf	??_strcat
  2983  0B01  0873               	movf	??_strcat,w
  2984  0B02  07F5               	addwf	strcat@cp,f
  2985  0B03                     l2593:
  2986  0B03  0875               	movf	strcat@cp,w
  2987  0B04  0084               	movwf	4
  2988  0B05  1383               	bcf	3,7	;select IRP bank0
  2989  0B06  0800               	movf	0,w
  2990  0B07  1D03               	btfss	3,2
  2991  0B08  2B0A               	goto	u1531
  2992  0B09  2B0B               	goto	u1530
  2993  0B0A                     u1531:
  2994  0B0A  2AFF               	goto	l2591
  2995  0B0B                     u1530:
  2996  0B0B  2B14               	goto	l2597
  2997  0B0C                     l2595:
  2998  0B0C  3001               	movlw	1
  2999  0B0D  00F3               	movwf	??_strcat
  3000  0B0E  0873               	movf	??_strcat,w
  3001  0B0F  07F5               	addwf	strcat@cp,f
  3002  0B10  3001               	movlw	1
  3003  0B11  00F3               	movwf	??_strcat
  3004  0B12  0873               	movf	??_strcat,w
  3005  0B13  07F2               	addwf	strcat@from,f
  3006  0B14                     l2597:
  3007  0B14  0872               	movf	strcat@from,w
  3008  0B15  0084               	movwf	4
  3009  0B16  0800               	movf	0,w
  3010  0B17  00F3               	movwf	??_strcat
  3011  0B18  0875               	movf	strcat@cp,w
  3012  0B19  0084               	movwf	4
  3013  0B1A  0873               	movf	??_strcat,w
  3014  0B1B  0080               	movwf	0
  3015  0B1C  0800               	movf	0,w
  3016  0B1D  1D03               	btfss	3,2
  3017  0B1E  2B20               	goto	u1541
  3018  0B1F  2B21               	goto	u1540
  3019  0B20                     u1541:
  3020  0B20  2B0C               	goto	l2595
  3021  0B21                     u1540:
  3022  0B21                     l1031:
  3023  0B21  0008               	return
  3024  0B22                     __end_of_strcat:
  3025                           
  3026                           	psect	text7
  3027  0A16                     __ptext7:	
  3028 ;; *************** function _memset *****************
  3029 ;; Defined at:
  3030 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\memset.c"
  3031 ;; Parameters:    Size  Location     Type
  3032 ;;  p1              1    wreg     PTR void 
  3033 ;;		 -> string_testing@string(10), 
  3034 ;;  c               2    2[COMMON] int 
  3035 ;;  n               2    4[COMMON] unsigned int 
  3036 ;; Auto vars:     Size  Location     Type
  3037 ;;  p1              1    8[COMMON] PTR void 
  3038 ;;		 -> string_testing@string(10), 
  3039 ;;  p               1    7[COMMON] PTR unsigned char 
  3040 ;;		 -> string_testing@string(10), 
  3041 ;; Return value:  Size  Location     Type
  3042 ;;                  1    wreg      PTR void 
  3043 ;; Registers used:
  3044 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3045 ;; Tracked objects:
  3046 ;;		On entry : 0/0
  3047 ;;		On exit  : 0/0
  3048 ;;		Unchanged: 0/0
  3049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3050 ;;      Params:         4       0       0       0       0
  3051 ;;      Locals:         2       0       0       0       0
  3052 ;;      Temps:          1       0       0       0       0
  3053 ;;      Totals:         7       0       0       0       0
  3054 ;;Total ram usage:        7 bytes
  3055 ;; Hardware stack levels used: 1
  3056 ;; Hardware stack levels required when called: 1
  3057 ;; This function calls:
  3058 ;;		Nothing
  3059 ;; This function is called by:
  3060 ;;		_string_testing
  3061 ;; This function uses a non-reentrant model
  3062 ;;
  3063                           
  3064                           
  3065                           ;psect for function _memset
  3066  0A16                     _memset:
  3067                           
  3068                           ;incstack = 0
  3069                           ; Regs used in _memset: [wreg-fsr0h+status,2+status,0]
  3070                           ;memset@p1 stored from wreg
  3071  0A16  00F8               	movwf	memset@p1
  3072  0A17                     l2727:
  3073  0A17  0878               	movf	memset@p1,w
  3074  0A18  00F6               	movwf	??_memset
  3075  0A19  0876               	movf	??_memset,w
  3076  0A1A  00F7               	movwf	memset@p
  3077  0A1B  2A27               	goto	l2733
  3078  0A1C                     l2729:
  3079  0A1C  0872               	movf	memset@c,w
  3080  0A1D  00F6               	movwf	??_memset
  3081  0A1E  0877               	movf	memset@p,w
  3082  0A1F  0084               	movwf	4
  3083  0A20  0876               	movf	??_memset,w
  3084  0A21  1383               	bcf	3,7	;select IRP bank0
  3085  0A22  0080               	movwf	0
  3086  0A23                     l2731:
  3087  0A23  3001               	movlw	1
  3088  0A24  00F6               	movwf	??_memset
  3089  0A25  0876               	movf	??_memset,w
  3090  0A26  07F7               	addwf	memset@p,f
  3091  0A27                     l2733:
  3092  0A27  3001               	movlw	1
  3093  0A28  02F4               	subwf	memset@n,f
  3094  0A29  3000               	movlw	0
  3095  0A2A  1C03               	skipc
  3096  0A2B  03F5               	decf	memset@n+1,f
  3097  0A2C  02F5               	subwf	memset@n+1,f
  3098  0A2D  0A74               	incf	memset@n,w
  3099  0A2E  1D03               	skipz
  3100  0A2F  2A34               	goto	u1711
  3101  0A30  0A75               	incf	memset@n+1,w
  3102  0A31  1D03               	btfss	3,2
  3103  0A32  2A34               	goto	u1711
  3104  0A33  2A35               	goto	u1710
  3105  0A34                     u1711:
  3106  0A34  2A1C               	goto	l2729
  3107  0A35                     u1710:
  3108  0A35                     l2735:
  3109  0A35  0878               	movf	memset@p1,w
  3110  0A36                     l1022:
  3111  0A36  0008               	return
  3112  0A37                     __end_of_memset:
  3113                           
  3114                           	psect	text8
  3115  0643                     __ptext8:	
  3116 ;; *************** function _memmove *****************
  3117 ;; Defined at:
  3118 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\memmove.c"
  3119 ;; Parameters:    Size  Location     Type
  3120 ;;  d1              1    wreg     PTR void 
  3121 ;;		 -> string_testing@string(10), 
  3122 ;;  s1              2    2[COMMON] PTR const void 
  3123 ;;		 -> STR_48(7), 
  3124 ;;  n               2    4[COMMON] unsigned int 
  3125 ;; Auto vars:     Size  Location     Type
  3126 ;;  d1              1    0[BANK0 ] PTR void 
  3127 ;;		 -> string_testing@string(10), 
  3128 ;;  s               2    1[BANK0 ] PTR const unsigned char 
  3129 ;;		 -> STR_48(7), 
  3130 ;;  d               1    3[BANK0 ] PTR unsigned char 
  3131 ;;		 -> string_testing@string(10), 
  3132 ;; Return value:  Size  Location     Type
  3133 ;;                  1    wreg      PTR void 
  3134 ;; Registers used:
  3135 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  3136 ;; Tracked objects:
  3137 ;;		On entry : 0/0
  3138 ;;		On exit  : 0/0
  3139 ;;		Unchanged: 0/0
  3140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3141 ;;      Params:         4       0       0       0       0
  3142 ;;      Locals:         0       4       0       0       0
  3143 ;;      Temps:          4       0       0       0       0
  3144 ;;      Totals:         8       4       0       0       0
  3145 ;;Total ram usage:       12 bytes
  3146 ;; Hardware stack levels used: 2
  3147 ;; Hardware stack levels required when called: 1
  3148 ;; This function calls:
  3149 ;;		Nothing
  3150 ;; This function is called by:
  3151 ;;		_string_testing
  3152 ;; This function uses a non-reentrant model
  3153 ;;
  3154                           
  3155                           
  3156                           ;psect for function _memmove
  3157  0643                     _memmove:
  3158                           
  3159                           ;incstack = 0
  3160                           ; Regs used in _memmove: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  3161                           ;memmove@d1 stored from wreg
  3162  0643  1283               	bcf	3,5	;RP0=0, select bank0
  3163  0644  1303               	bcf	3,6	;RP1=0, select bank0
  3164  0645  00A0               	movwf	memmove@d1
  3165  0646                     l2697:
  3166  0646  0872               	movf	memmove@s1,w
  3167  0647  00A1               	movwf	memmove@s
  3168  0648  0873               	movf	memmove@s1+1,w
  3169  0649  00A2               	movwf	memmove@s+1
  3170  064A                     l2699:
  3171  064A  0820               	movf	memmove@d1,w
  3172  064B  00F6               	movwf	??_memmove
  3173  064C  0876               	movf	??_memmove,w
  3174  064D  00A3               	movwf	memmove@d
  3175  064E                     l2701:
  3176  064E  0823               	movf	memmove@d,w
  3177  064F  00F6               	movwf	??_memmove
  3178  0650  3000               	movlw	0
  3179  0651  00F7               	movwf	??_memmove+1
  3180  0652  0877               	movf	??_memmove+1,w
  3181  0653  0222               	subwf	memmove@s+1,w
  3182  0654  1D03               	skipz
  3183  0655  2E58               	goto	u1665
  3184  0656  0876               	movf	??_memmove,w
  3185  0657  0221               	subwf	memmove@s,w
  3186  0658                     u1665:
  3187  0658  1803               	skipnc
  3188  0659  2E5B               	goto	u1661
  3189  065A  2E5C               	goto	u1660
  3190  065B                     u1661:
  3191  065B  2E9E               	goto	l2713
  3192  065C                     u1660:
  3193  065C                     l2703:
  3194  065C  0874               	movf	memmove@n,w
  3195  065D  0721               	addwf	memmove@s,w
  3196  065E  00F6               	movwf	??_memmove
  3197  065F  0875               	movf	memmove@n+1,w
  3198  0660  1803               	skipnc
  3199  0661  0A75               	incf	memmove@n+1,w
  3200  0662  0722               	addwf	memmove@s+1,w
  3201  0663  00F7               	movwf	??_memmove+1
  3202  0664  0823               	movf	memmove@d,w
  3203  0665  00F8               	movwf	??_memmove+2
  3204  0666  3000               	movlw	0
  3205  0667  00F9               	movwf	??_memmove+3
  3206  0668  0877               	movf	??_memmove+1,w
  3207  0669  0279               	subwf	??_memmove+3,w
  3208  066A  1D03               	skipz
  3209  066B  2E6E               	goto	u1675
  3210  066C  0876               	movf	??_memmove,w
  3211  066D  0278               	subwf	??_memmove+2,w
  3212  066E                     u1675:
  3213  066E  1803               	skipnc
  3214  066F  2E71               	goto	u1671
  3215  0670  2E72               	goto	u1670
  3216  0671                     u1671:
  3217  0671  2E9E               	goto	l2713
  3218  0672                     u1670:
  3219  0672                     l2705:
  3220  0672  0874               	movf	memmove@n,w
  3221  0673  07A1               	addwf	memmove@s,f
  3222  0674  1803               	skipnc
  3223  0675  0AA2               	incf	memmove@s+1,f
  3224  0676                     l2707:
  3225  0676  0874               	movf	memmove@n,w
  3226  0677  00F6               	movwf	??_memmove
  3227  0678  0876               	movf	??_memmove,w
  3228  0679  07A3               	addwf	memmove@d,f
  3229  067A                     l2709:
  3230  067A  3001               	movlw	1
  3231  067B  02A1               	subwf	memmove@s,f
  3232  067C  3000               	movlw	0
  3233  067D  1C03               	skipc
  3234  067E  03A2               	decf	memmove@s+1,f
  3235  067F  02A2               	subwf	memmove@s+1,f
  3236  0680  0822               	movf	memmove@s+1,w
  3237  0681  00FF               	movwf	btemp+1
  3238  0682  0821               	movf	memmove@s,w
  3239  0683  0084               	movwf	4
  3240  0684  120A  118A  2700  120A  118A  	fcall	stringtab
  3241  0689  00F6               	movwf	??_memmove
  3242  068A  3001               	movlw	1
  3243  068B  02A3               	subwf	memmove@d,f
  3244  068C  0823               	movf	memmove@d,w
  3245  068D  0084               	movwf	4
  3246  068E  0876               	movf	??_memmove,w
  3247  068F  1383               	bcf	3,7	;select IRP bank0
  3248  0690  0080               	movwf	0
  3249  0691                     l2711:
  3250  0691  3001               	movlw	1
  3251  0692  02F4               	subwf	memmove@n,f
  3252  0693  3000               	movlw	0
  3253  0694  1C03               	skipc
  3254  0695  03F5               	decf	memmove@n+1,f
  3255  0696  02F5               	subwf	memmove@n+1,f
  3256  0697  0874               	movf	memmove@n,w
  3257  0698  0475               	iorwf	memmove@n+1,w
  3258  0699  1D03               	btfss	3,2
  3259  069A  2E9C               	goto	u1681
  3260  069B  2E9D               	goto	u1680
  3261  069C                     u1681:
  3262  069C  2E7A               	goto	l2709
  3263  069D                     u1680:
  3264  069D  2EC9               	goto	l2723
  3265  069E                     l2713:
  3266  069E  0874               	movf	memmove@n,w
  3267  069F  0475               	iorwf	memmove@n+1,w
  3268  06A0  1903               	btfsc	3,2
  3269  06A1  2EA3               	goto	u1691
  3270  06A2  2EA4               	goto	u1690
  3271  06A3                     u1691:
  3272  06A3  2EC9               	goto	l2723
  3273  06A4                     u1690:
  3274  06A4                     l2715:
  3275  06A4  0822               	movf	memmove@s+1,w
  3276  06A5  00FF               	movwf	btemp+1
  3277  06A6  0821               	movf	memmove@s,w
  3278  06A7  0084               	movwf	4
  3279  06A8  120A  118A  2700  120A  118A  	fcall	stringtab
  3280  06AD  00F6               	movwf	??_memmove
  3281  06AE  0823               	movf	memmove@d,w
  3282  06AF  0084               	movwf	4
  3283  06B0  0876               	movf	??_memmove,w
  3284  06B1  1383               	bcf	3,7	;select IRP bank0
  3285  06B2  0080               	movwf	0
  3286  06B3                     l2717:
  3287  06B3  3001               	movlw	1
  3288  06B4  07A1               	addwf	memmove@s,f
  3289  06B5  1803               	skipnc
  3290  06B6  0AA2               	incf	memmove@s+1,f
  3291  06B7  3000               	movlw	0
  3292  06B8  07A2               	addwf	memmove@s+1,f
  3293  06B9                     l2719:
  3294  06B9  3001               	movlw	1
  3295  06BA  00F6               	movwf	??_memmove
  3296  06BB  0876               	movf	??_memmove,w
  3297  06BC  07A3               	addwf	memmove@d,f
  3298  06BD                     l2721:
  3299  06BD  3001               	movlw	1
  3300  06BE  02F4               	subwf	memmove@n,f
  3301  06BF  3000               	movlw	0
  3302  06C0  1C03               	skipc
  3303  06C1  03F5               	decf	memmove@n+1,f
  3304  06C2  02F5               	subwf	memmove@n+1,f
  3305  06C3  0874               	movf	memmove@n,w
  3306  06C4  0475               	iorwf	memmove@n+1,w
  3307  06C5  1D03               	btfss	3,2
  3308  06C6  2EC8               	goto	u1701
  3309  06C7  2EC9               	goto	u1700
  3310  06C8                     u1701:
  3311  06C8  2EA4               	goto	l2715
  3312  06C9                     u1700:
  3313  06C9                     l2723:
  3314  06C9  0820               	movf	memmove@d1,w
  3315  06CA                     l1016:
  3316  06CA  0008               	return
  3317  06CB                     __end_of_memmove:
  3318                           
  3319                           	psect	text9
  3320  0BAA                     __ptext9:	
  3321 ;; *************** function _memcpy *****************
  3322 ;; Defined at:
  3323 ;;		line 27 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\memcpy.c"
  3324 ;; Parameters:    Size  Location     Type
  3325 ;;  d1              1    wreg     PTR void 
  3326 ;;		 -> string_testing@string(10), 
  3327 ;;  s1              2    2[COMMON] PTR const void 
  3328 ;;		 -> STR_45(6), 
  3329 ;;  n               2    4[COMMON] unsigned int 
  3330 ;; Auto vars:     Size  Location     Type
  3331 ;;  d1              1    4[BANK0 ] PTR void 
  3332 ;;		 -> string_testing@string(10), 
  3333 ;;  s               2    1[BANK0 ] PTR const unsigned char 
  3334 ;;		 -> STR_45(6), 
  3335 ;;  d               1    3[BANK0 ] PTR unsigned char 
  3336 ;;		 -> string_testing@string(10), 
  3337 ;;  tmp             1    0[BANK0 ] unsigned char 
  3338 ;; Return value:  Size  Location     Type
  3339 ;;                  1    wreg      PTR void 
  3340 ;; Registers used:
  3341 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  3342 ;; Tracked objects:
  3343 ;;		On entry : 0/0
  3344 ;;		On exit  : 0/0
  3345 ;;		Unchanged: 0/0
  3346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3347 ;;      Params:         4       0       0       0       0
  3348 ;;      Locals:         0       5       0       0       0
  3349 ;;      Temps:          1       0       0       0       0
  3350 ;;      Totals:         5       5       0       0       0
  3351 ;;Total ram usage:       10 bytes
  3352 ;; Hardware stack levels used: 2
  3353 ;; Hardware stack levels required when called: 1
  3354 ;; This function calls:
  3355 ;;		Nothing
  3356 ;; This function is called by:
  3357 ;;		_string_testing
  3358 ;; This function uses a non-reentrant model
  3359 ;;
  3360                           
  3361                           
  3362                           ;psect for function _memcpy
  3363  0BAA                     _memcpy:
  3364                           
  3365                           ;incstack = 0
  3366                           ; Regs used in _memcpy: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  3367                           ;memcpy@d1 stored from wreg
  3368  0BAA  1283               	bcf	3,5	;RP0=0, select bank0
  3369  0BAB  1303               	bcf	3,6	;RP1=0, select bank0
  3370  0BAC  00A4               	movwf	memcpy@d1
  3371  0BAD                     l3227:
  3372  0BAD  0872               	movf	memcpy@s1,w
  3373  0BAE  00A1               	movwf	memcpy@s
  3374  0BAF  0873               	movf	memcpy@s1+1,w
  3375  0BB0  00A2               	movwf	memcpy@s+1
  3376  0BB1                     l3229:
  3377  0BB1  0824               	movf	memcpy@d1,w
  3378  0BB2  00F6               	movwf	??_memcpy
  3379  0BB3  0876               	movf	??_memcpy,w
  3380  0BB4  00A3               	movwf	memcpy@d
  3381  0BB5  2BD3               	goto	l3239
  3382  0BB6                     l3231:
  3383  0BB6  0822               	movf	memcpy@s+1,w
  3384  0BB7  00FF               	movwf	btemp+1
  3385  0BB8  0821               	movf	memcpy@s,w
  3386  0BB9  0084               	movwf	4
  3387  0BBA  120A  118A  2700  120A  158A  	fcall	stringtab
  3388  0BBF  00F6               	movwf	??_memcpy
  3389  0BC0  0876               	movf	??_memcpy,w
  3390  0BC1  00A0               	movwf	memcpy@tmp
  3391  0BC2                     l3233:
  3392  0BC2  3001               	movlw	1
  3393  0BC3  07A1               	addwf	memcpy@s,f
  3394  0BC4  1803               	skipnc
  3395  0BC5  0AA2               	incf	memcpy@s+1,f
  3396  0BC6  3000               	movlw	0
  3397  0BC7  07A2               	addwf	memcpy@s+1,f
  3398  0BC8                     l3235:
  3399  0BC8  0820               	movf	memcpy@tmp,w
  3400  0BC9  00F6               	movwf	??_memcpy
  3401  0BCA  0823               	movf	memcpy@d,w
  3402  0BCB  0084               	movwf	4
  3403  0BCC  0876               	movf	??_memcpy,w
  3404  0BCD  1383               	bcf	3,7	;select IRP bank0
  3405  0BCE  0080               	movwf	0
  3406  0BCF                     l3237:
  3407  0BCF  3001               	movlw	1
  3408  0BD0  00F6               	movwf	??_memcpy
  3409  0BD1  0876               	movf	??_memcpy,w
  3410  0BD2  07A3               	addwf	memcpy@d,f
  3411  0BD3                     l3239:
  3412  0BD3  3001               	movlw	1
  3413  0BD4  02F4               	subwf	memcpy@n,f
  3414  0BD5  3000               	movlw	0
  3415  0BD6  1C03               	skipc
  3416  0BD7  03F5               	decf	memcpy@n+1,f
  3417  0BD8  02F5               	subwf	memcpy@n+1,f
  3418  0BD9  0A74               	incf	memcpy@n,w
  3419  0BDA  1D03               	skipz
  3420  0BDB  2BE0               	goto	u1941
  3421  0BDC  0A75               	incf	memcpy@n+1,w
  3422  0BDD  1D03               	btfss	3,2
  3423  0BDE  2BE0               	goto	u1941
  3424  0BDF  2BE1               	goto	u1940
  3425  0BE0                     u1941:
  3426  0BE0  2BB6               	goto	l3231
  3427  0BE1                     u1940:
  3428  0BE1                     l3241:
  3429  0BE1  0824               	movf	memcpy@d1,w
  3430  0BE2                     l1006:
  3431  0BE2  0008               	return
  3432  0BE3                     __end_of_memcpy:
  3433                           
  3434                           	psect	text10
  3435  0D56                     __ptext10:	
  3436 ;; *************** function _memcmp *****************
  3437 ;; Defined at:
  3438 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\memcmp.c"
  3439 ;; Parameters:    Size  Location     Type
  3440 ;;  s1              1    wreg     PTR const void 
  3441 ;;		 -> string_testing@string(10), 
  3442 ;;  s2              2    2[COMMON] PTR const void 
  3443 ;;		 -> STR_39(3), 
  3444 ;;  n               2    4[COMMON] unsigned int 
  3445 ;; Auto vars:     Size  Location     Type
  3446 ;;  s1              1    8[COMMON] PTR const void 
  3447 ;;		 -> string_testing@string(10), 
  3448 ;; Return value:  Size  Location     Type
  3449 ;;                  2    2[COMMON] int 
  3450 ;; Registers used:
  3451 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  3452 ;; Tracked objects:
  3453 ;;		On entry : 0/0
  3454 ;;		On exit  : 0/0
  3455 ;;		Unchanged: 0/0
  3456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3457 ;;      Params:         4       0       0       0       0
  3458 ;;      Locals:         1       0       0       0       0
  3459 ;;      Temps:          2       0       0       0       0
  3460 ;;      Totals:         7       0       0       0       0
  3461 ;;Total ram usage:        7 bytes
  3462 ;; Hardware stack levels used: 2
  3463 ;; Hardware stack levels required when called: 1
  3464 ;; This function calls:
  3465 ;;		Nothing
  3466 ;; This function is called by:
  3467 ;;		_string_testing
  3468 ;; This function uses a non-reentrant model
  3469 ;;
  3470                           
  3471                           
  3472                           ;psect for function _memcmp
  3473  0D56                     _memcmp:
  3474                           
  3475                           ;incstack = 0
  3476                           ; Regs used in _memcmp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  3477                           ;memcmp@s1 stored from wreg
  3478  0D56  00F8               	movwf	memcmp@s1
  3479  0D57                     l2649:
  3480  0D57  2D8D               	goto	l2661
  3481  0D58                     l2651:
  3482  0D58  0873               	movf	memcmp@s2+1,w
  3483  0D59  1283               	bcf	3,5	;RP0=0, select bank0
  3484  0D5A  1303               	bcf	3,6	;RP1=0, select bank0
  3485  0D5B  00FF               	movwf	btemp+1
  3486  0D5C  0872               	movf	memcmp@s2,w
  3487  0D5D  0084               	movwf	4
  3488  0D5E  120A  118A  2700  120A  158A  	fcall	stringtab
  3489  0D63  00F6               	movwf	??_memcmp
  3490  0D64  0878               	movf	memcmp@s1,w
  3491  0D65  0084               	movwf	4
  3492  0D66  1383               	bcf	3,7	;select IRP bank0
  3493  0D67  0800               	movf	0,w
  3494  0D68  0676               	xorwf	??_memcmp,w
  3495  0D69  1903               	skipnz
  3496  0D6A  2D6C               	goto	u1621
  3497  0D6B  2D6D               	goto	u1620
  3498  0D6C                     u1621:
  3499  0D6C  2D83               	goto	l2657
  3500  0D6D                     u1620:
  3501  0D6D                     l2653:
  3502  0D6D  0873               	movf	memcmp@s2+1,w
  3503  0D6E  00FF               	movwf	btemp+1
  3504  0D6F  0872               	movf	memcmp@s2,w
  3505  0D70  0084               	movwf	4
  3506  0D71  120A  118A  2700  120A  158A  	fcall	stringtab
  3507  0D76  00F6               	movwf	??_memcmp
  3508  0D77  0878               	movf	memcmp@s1,w
  3509  0D78  0084               	movwf	4
  3510  0D79  1383               	bcf	3,7	;select IRP bank0
  3511  0D7A  0800               	movf	0,w
  3512  0D7B  00F7               	movwf	??_memcmp+1
  3513  0D7C  0876               	movf	??_memcmp,w
  3514  0D7D  0277               	subwf	??_memcmp+1,w
  3515  0D7E  00F2               	movwf	?_memcmp
  3516  0D7F  01F3               	clrf	?_memcmp+1
  3517  0D80  1C03               	skipc
  3518  0D81  03F3               	decf	?_memcmp+1,f
  3519  0D82  2D9D               	goto	l999
  3520  0D83                     l2657:
  3521  0D83  3001               	movlw	1
  3522  0D84  00F6               	movwf	??_memcmp
  3523  0D85  0876               	movf	??_memcmp,w
  3524  0D86  07F8               	addwf	memcmp@s1,f
  3525  0D87                     l2659:
  3526  0D87  3001               	movlw	1
  3527  0D88  07F2               	addwf	memcmp@s2,f
  3528  0D89  1803               	skipnc
  3529  0D8A  0AF3               	incf	memcmp@s2+1,f
  3530  0D8B  3000               	movlw	0
  3531  0D8C  07F3               	addwf	memcmp@s2+1,f
  3532  0D8D                     l2661:
  3533  0D8D  3001               	movlw	1
  3534  0D8E  02F4               	subwf	memcmp@n,f
  3535  0D8F  3000               	movlw	0
  3536  0D90  1C03               	skipc
  3537  0D91  03F5               	decf	memcmp@n+1,f
  3538  0D92  02F5               	subwf	memcmp@n+1,f
  3539  0D93  0A74               	incf	memcmp@n,w
  3540  0D94  1D03               	skipz
  3541  0D95  2D9A               	goto	u1631
  3542  0D96  0A75               	incf	memcmp@n+1,w
  3543  0D97  1D03               	btfss	3,2
  3544  0D98  2D9A               	goto	u1631
  3545  0D99  2D9B               	goto	u1630
  3546  0D9A                     u1631:
  3547  0D9A  2D58               	goto	l2651
  3548  0D9B                     u1630:
  3549  0D9B                     l2663:
  3550  0D9B  01F2               	clrf	?_memcmp
  3551  0D9C  01F3               	clrf	?_memcmp+1
  3552  0D9D                     l999:
  3553  0D9D  0008               	return
  3554  0D9E                     __end_of_memcmp:
  3555                           
  3556                           	psect	text11
  3557  0A37                     __ptext11:	
  3558 ;; *************** function _memchr *****************
  3559 ;; Defined at:
  3560 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\memchr.c"
  3561 ;; Parameters:    Size  Location     Type
  3562 ;;  p               1    wreg     PTR const void 
  3563 ;;		 -> string_testing@string(10), 
  3564 ;;  n               2    2[COMMON] int 
  3565 ;;  v               2    4[COMMON] unsigned int 
  3566 ;; Auto vars:     Size  Location     Type
  3567 ;;  p               1    7[COMMON] PTR const void 
  3568 ;;		 -> string_testing@string(10), 
  3569 ;;  s               1    8[COMMON] PTR unsigned char 
  3570 ;;		 -> string_testing@string(10), 
  3571 ;; Return value:  Size  Location     Type
  3572 ;;                  1    wreg      PTR void 
  3573 ;; Registers used:
  3574 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3575 ;; Tracked objects:
  3576 ;;		On entry : 0/0
  3577 ;;		On exit  : 0/0
  3578 ;;		Unchanged: 0/0
  3579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3580 ;;      Params:         4       0       0       0       0
  3581 ;;      Locals:         2       0       0       0       0
  3582 ;;      Temps:          1       0       0       0       0
  3583 ;;      Totals:         7       0       0       0       0
  3584 ;;Total ram usage:        7 bytes
  3585 ;; Hardware stack levels used: 1
  3586 ;; Hardware stack levels required when called: 1
  3587 ;; This function calls:
  3588 ;;		Nothing
  3589 ;; This function is called by:
  3590 ;;		_string_testing
  3591 ;; This function uses a non-reentrant model
  3592 ;;
  3593                           
  3594                           
  3595                           ;psect for function _memchr
  3596  0A37                     _memchr:
  3597                           
  3598                           ;incstack = 0
  3599                           ; Regs used in _memchr: [wreg-fsr0h+status,2+status,0]
  3600                           ;memchr@p stored from wreg
  3601  0A37  00F7               	movwf	memchr@p
  3602  0A38                     l2611:
  3603  0A38  0877               	movf	memchr@p,w
  3604  0A39  00F6               	movwf	??_memchr
  3605  0A3A  0876               	movf	??_memchr,w
  3606  0A3B  00F8               	movwf	memchr@s
  3607  0A3C  2A4C               	goto	l988
  3608  0A3D                     l2613:
  3609  0A3D  0878               	movf	memchr@s,w
  3610  0A3E  0084               	movwf	4
  3611  0A3F  1383               	bcf	3,7	;select IRP bank0
  3612  0A40  0800               	movf	0,w
  3613  0A41  0672               	xorwf	memchr@n,w
  3614  0A42  1D03               	skipz
  3615  0A43  2A45               	goto	u1571
  3616  0A44  2A46               	goto	u1570
  3617  0A45                     u1571:
  3618  0A45  2A48               	goto	l2621
  3619  0A46                     u1570:
  3620  0A46                     l2615:
  3621  0A46  0878               	movf	memchr@s,w
  3622  0A47  2A5B               	goto	l991
  3623  0A48                     l2621:
  3624  0A48  3001               	movlw	1
  3625  0A49  00F6               	movwf	??_memchr
  3626  0A4A  0876               	movf	??_memchr,w
  3627  0A4B  07F8               	addwf	memchr@s,f
  3628  0A4C                     l988:
  3629  0A4C  3001               	movlw	1
  3630  0A4D  02F4               	subwf	memchr@v,f
  3631  0A4E  3000               	movlw	0
  3632  0A4F  1C03               	skipc
  3633  0A50  03F5               	decf	memchr@v+1,f
  3634  0A51  02F5               	subwf	memchr@v+1,f
  3635  0A52  0A74               	incf	memchr@v,w
  3636  0A53  1D03               	skipz
  3637  0A54  2A59               	goto	u1581
  3638  0A55  0A75               	incf	memchr@v+1,w
  3639  0A56  1D03               	btfss	3,2
  3640  0A57  2A59               	goto	u1581
  3641  0A58  2A5A               	goto	u1580
  3642  0A59                     u1581:
  3643  0A59  2A3D               	goto	l2613
  3644  0A5A                     u1580:
  3645  0A5A                     l2623:
  3646  0A5A  3000               	movlw	0
  3647  0A5B                     l991:
  3648  0A5B  0008               	return
  3649  0A5C                     __end_of_memchr:
  3650                           
  3651                           	psect	text12
  3652  0C97                     __ptext12:	
  3653 ;; *************** function _stdlib_testing *****************
  3654 ;; Defined at:
  3655 ;;		line 145 in file "main.c"
  3656 ;; Parameters:    Size  Location     Type
  3657 ;;		None
  3658 ;; Auto vars:     Size  Location     Type
  3659 ;;		None
  3660 ;; Return value:  Size  Location     Type
  3661 ;;                  1    wreg      void 
  3662 ;; Registers used:
  3663 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3664 ;; Tracked objects:
  3665 ;;		On entry : 0/0
  3666 ;;		On exit  : 0/0
  3667 ;;		Unchanged: 0/0
  3668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3669 ;;      Params:         0       0       0       0       0
  3670 ;;      Locals:         0       0       0       0       0
  3671 ;;      Temps:          0       3       0       0       0
  3672 ;;      Totals:         0       3       0       0       0
  3673 ;;Total ram usage:        3 bytes
  3674 ;; Hardware stack levels used: 1
  3675 ;; Hardware stack levels required when called: 8
  3676 ;; This function calls:
  3677 ;;		_lcd_clear
  3678 ;;		_lcd_goto
  3679 ;;		_printf
  3680 ;; This function is called by:
  3681 ;;		_main
  3682 ;; This function uses a non-reentrant model
  3683 ;;
  3684                           
  3685                           
  3686                           ;psect for function _stdlib_testing
  3687  0C97                     _stdlib_testing:
  3688  0C97                     l3263:	
  3689                           ;incstack = 0
  3690 ;; hardware stack exceeded
  3691                           ; Regs used in _stdlib_testing: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3692                           
  3693                           
  3694                           ;main.c: 148:     lcd_goto(1,0);
  3695  0C97  01F8               	clrf	lcd_goto@col
  3696  0C98  3001               	movlw	1
  3697  0C99  120A  158A  23E3  120A  158A  	fcall	_lcd_goto
  3698  0C9E                     l3265:
  3699                           
  3700                           ;main.c: 149:     printf("XC8 LIBS TESTING");
  3701  0C9E  301C               	movlw	low (STR_3| (0+32768))
  3702  0C9F  1283               	bcf	3,5	;RP0=0, select bank0
  3703  0CA0  1303               	bcf	3,6	;RP1=0, select bank0
  3704  0CA1  00A6               	movwf	printf@f
  3705  0CA2  3087               	movlw	high (STR_3| (0+32768))
  3706  0CA3  00A7               	movwf	printf@f+1
  3707  0CA4  120A  158A  26BC  120A  158A  	fcall	_printf
  3708  0CA9                     l3267:
  3709                           
  3710                           ;main.c: 150:     lcd_goto(2,5);
  3711  0CA9  3005               	movlw	5
  3712  0CAA  1283               	bcf	3,5	;RP0=0, select bank0
  3713  0CAB  1303               	bcf	3,6	;RP1=0, select bank0
  3714  0CAC  00B6               	movwf	??_stdlib_testing
  3715  0CAD  0836               	movf	??_stdlib_testing,w
  3716  0CAE  00F8               	movwf	lcd_goto@col
  3717  0CAF  3002               	movlw	2
  3718  0CB0  120A  158A  23E3  120A  158A  	fcall	_lcd_goto
  3719                           
  3720                           ;main.c: 151:     printf("STDLIB");
  3721  0CB5  3069               	movlw	low (STR_4| (0+32768))
  3722  0CB6  1283               	bcf	3,5	;RP0=0, select bank0
  3723  0CB7  1303               	bcf	3,6	;RP1=0, select bank0
  3724  0CB8  00A6               	movwf	printf@f
  3725  0CB9  3088               	movlw	high (STR_4| (0+32768))
  3726  0CBA  00A7               	movwf	printf@f+1
  3727  0CBB  120A  158A  26BC  120A  158A  	fcall	_printf
  3728  0CC0                     l3269:
  3729                           
  3730                           ;main.c: 152:     _delay((unsigned long)((3000)*(20000000/4000.0)));
  3731  0CC0  304D               	movlw	77
  3732  0CC1  1283               	bcf	3,5	;RP0=0, select bank0
  3733  0CC2  1303               	bcf	3,6	;RP1=0, select bank0
  3734  0CC3  00B8               	movwf	??_stdlib_testing+2
  3735  0CC4  3019               	movlw	25
  3736  0CC5  00B7               	movwf	??_stdlib_testing+1
  3737  0CC6  304F               	movlw	79
  3738  0CC7  00B6               	movwf	??_stdlib_testing
  3739  0CC8                     u2087:
  3740  0CC8  0BB6               	decfsz	??_stdlib_testing,f
  3741  0CC9  2CC8               	goto	u2087
  3742  0CCA  0BB7               	decfsz	??_stdlib_testing+1,f
  3743  0CCB  2CC8               	goto	u2087
  3744  0CCC  0BB8               	decfsz	??_stdlib_testing+2,f
  3745  0CCD  2CC8               	goto	u2087
  3746  0CCE                     l3271:
  3747                           
  3748                           ;main.c: 153:     lcd_clear();
  3749  0CCE  160A  118A  2786  120A  158A  	fcall	_lcd_clear
  3750  0CD3                     l176:
  3751  0CD3  0008               	return
  3752  0CD4                     __end_of_stdlib_testing:
  3753                           
  3754                           	psect	text13
  3755  0DE7                     __ptext13:	
  3756 ;; *************** function _show_ad *****************
  3757 ;; Defined at:
  3758 ;;		line 127 in file "main.c"
  3759 ;; Parameters:    Size  Location     Type
  3760 ;;		None
  3761 ;; Auto vars:     Size  Location     Type
  3762 ;;		None
  3763 ;; Return value:  Size  Location     Type
  3764 ;;                  1    wreg      void 
  3765 ;; Registers used:
  3766 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3767 ;; Tracked objects:
  3768 ;;		On entry : 0/0
  3769 ;;		On exit  : 0/0
  3770 ;;		Unchanged: 0/0
  3771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3772 ;;      Params:         0       0       0       0       0
  3773 ;;      Locals:         0       0       0       0       0
  3774 ;;      Temps:          0       3       0       0       0
  3775 ;;      Totals:         0       3       0       0       0
  3776 ;;Total ram usage:        3 bytes
  3777 ;; Hardware stack levels used: 1
  3778 ;; Hardware stack levels required when called: 8
  3779 ;; This function calls:
  3780 ;;		_amost1
  3781 ;;		_itoa
  3782 ;;		_lcd_clear
  3783 ;;		_lcd_goto
  3784 ;;		_printf
  3785 ;; This function is called by:
  3786 ;;		_main
  3787 ;; This function uses a non-reentrant model
  3788 ;;
  3789                           
  3790                           
  3791                           ;psect for function _show_ad
  3792  0DE7                     _show_ad:
  3793  0DE7                     l3245:	
  3794                           ;incstack = 0
  3795 ;; hardware stack exceeded
  3796                           ; Regs used in _show_ad: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3797                           
  3798                           
  3799                           ;main.c: 130:     amost1(&ad_value);
  3800  0DE7  3062               	movlw	(low (_ad_value| 0))& (0+255)
  3801  0DE8  120A  158A  2186  120A  158A  	fcall	_amost1
  3802  0DED                     l3247:
  3803                           
  3804                           ;main.c: 132:     ad_value = ad_value/2;
  3805  0DED  1283               	bcf	3,5	;RP0=0, select bank0
  3806  0DEE  1303               	bcf	3,6	;RP1=0, select bank0
  3807  0DEF  0863               	movf	_ad_value+1,w	;volatile
  3808  0DF0  00B7               	movwf	??_show_ad+1
  3809  0DF1  0862               	movf	_ad_value,w	;volatile
  3810  0DF2  00B6               	movwf	??_show_ad
  3811  0DF3  1003               	clrc
  3812  0DF4  0CB7               	rrf	??_show_ad+1,f
  3813  0DF5  0CB6               	rrf	??_show_ad,f
  3814  0DF6  0836               	movf	??_show_ad,w
  3815  0DF7  00E2               	movwf	_ad_value	;volatile
  3816  0DF8  0837               	movf	??_show_ad+1,w
  3817  0DF9  00E3               	movwf	_ad_value+1	;volatile
  3818  0DFA                     l3249:
  3819                           
  3820                           ;main.c: 134:     itoa(ad_char_val, ad_value, 10);
  3821  0DFA  0863               	movf	_ad_value+1,w	;volatile
  3822  0DFB  00B0               	movwf	itoa@val+1
  3823  0DFC  0862               	movf	_ad_value,w	;volatile
  3824  0DFD  00AF               	movwf	itoa@val
  3825  0DFE  300A               	movlw	10
  3826  0DFF  00B1               	movwf	itoa@base
  3827  0E00  3000               	movlw	0
  3828  0E01  00B2               	movwf	itoa@base+1
  3829  0E02  305D               	movlw	(low (_ad_char_val| 0))& (0+255)
  3830  0E03  120A  158A  225C  120A  158A  	fcall	_itoa
  3831  0E08                     l3251:
  3832                           
  3833                           ;main.c: 136:     lcd_goto(1,1);
  3834  0E08  01F8               	clrf	lcd_goto@col
  3835  0E09  0AF8               	incf	lcd_goto@col,f
  3836  0E0A  3001               	movlw	1
  3837  0E0B  120A  158A  23E3  120A  158A  	fcall	_lcd_goto
  3838  0E10                     l3253:
  3839                           
  3840                           ;main.c: 137:     printf("A/D CONVERSION");
  3841  0E10  303D               	movlw	low (STR_1| (0+32768))
  3842  0E11  1283               	bcf	3,5	;RP0=0, select bank0
  3843  0E12  1303               	bcf	3,6	;RP1=0, select bank0
  3844  0E13  00A6               	movwf	printf@f
  3845  0E14  3087               	movlw	high (STR_1| (0+32768))
  3846  0E15  00A7               	movwf	printf@f+1
  3847  0E16  120A  158A  26BC  120A  158A  	fcall	_printf
  3848  0E1B                     l3255:
  3849                           
  3850                           ;main.c: 138:     lcd_goto(2,2);
  3851  0E1B  3002               	movlw	2
  3852  0E1C  1283               	bcf	3,5	;RP0=0, select bank0
  3853  0E1D  1303               	bcf	3,6	;RP1=0, select bank0
  3854  0E1E  00B6               	movwf	??_show_ad
  3855  0E1F  0836               	movf	??_show_ad,w
  3856  0E20  00F8               	movwf	lcd_goto@col
  3857  0E21  3002               	movlw	2
  3858  0E22  120A  158A  23E3  120A  158A  	fcall	_lcd_goto
  3859  0E27                     l3257:
  3860                           
  3861                           ;main.c: 139:     printf("AD value: %s",ad_char_val);
  3862  0E27  301D               	movlw	low (STR_2| (0+32768))
  3863  0E28  1283               	bcf	3,5	;RP0=0, select bank0
  3864  0E29  1303               	bcf	3,6	;RP1=0, select bank0
  3865  0E2A  00A6               	movwf	printf@f
  3866  0E2B  3088               	movlw	high (STR_2| (0+32768))
  3867  0E2C  00A7               	movwf	printf@f+1
  3868  0E2D  305D               	movlw	(low (_ad_char_val| 0))& (0+255)
  3869  0E2E  00B6               	movwf	??_show_ad
  3870  0E2F  0836               	movf	??_show_ad,w
  3871  0E30  00A8               	movwf	low ((?_printf| 0+2))
  3872  0E31  120A  158A  26BC  120A  158A  	fcall	_printf
  3873  0E36                     l3259:
  3874                           
  3875                           ;main.c: 141:     _delay((unsigned long)((3000)*(20000000/4000.0)));
  3876  0E36  304D               	movlw	77
  3877  0E37  1283               	bcf	3,5	;RP0=0, select bank0
  3878  0E38  1303               	bcf	3,6	;RP1=0, select bank0
  3879  0E39  00B8               	movwf	??_show_ad+2
  3880  0E3A  3019               	movlw	25
  3881  0E3B  00B7               	movwf	??_show_ad+1
  3882  0E3C  304F               	movlw	79
  3883  0E3D  00B6               	movwf	??_show_ad
  3884  0E3E                     u2097:
  3885  0E3E  0BB6               	decfsz	??_show_ad,f
  3886  0E3F  2E3E               	goto	u2097
  3887  0E40  0BB7               	decfsz	??_show_ad+1,f
  3888  0E41  2E3E               	goto	u2097
  3889  0E42  0BB8               	decfsz	??_show_ad+2,f
  3890  0E43  2E3E               	goto	u2097
  3891  0E44                     l3261:
  3892                           
  3893                           ;main.c: 142:     lcd_clear();
  3894  0E44  160A  118A  2786  120A  158A  	fcall	_lcd_clear
  3895  0E49                     l173:
  3896  0E49  0008               	return
  3897  0E4A                     __end_of_show_ad:
  3898                           
  3899                           	psect	text14
  3900  0A5C                     __ptext14:	
  3901 ;; *************** function _itoa *****************
  3902 ;; Defined at:
  3903 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\itoa.c"
  3904 ;; Parameters:    Size  Location     Type
  3905 ;;  buf             1    wreg     PTR unsigned char 
  3906 ;;		 -> ad_char_val(5), 
  3907 ;;  val             2   15[BANK0 ] int 
  3908 ;;  base            2   17[BANK0 ] int 
  3909 ;; Auto vars:     Size  Location     Type
  3910 ;;  buf             1   20[BANK0 ] PTR unsigned char 
  3911 ;;		 -> ad_char_val(5), 
  3912 ;;  cp              1    0        PTR unsigned char 
  3913 ;;		 -> ad_char_val(5), 
  3914 ;; Return value:  Size  Location     Type
  3915 ;;                  1    wreg      PTR unsigned char 
  3916 ;; Registers used:
  3917 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3918 ;; Tracked objects:
  3919 ;;		On entry : 0/0
  3920 ;;		On exit  : 0/0
  3921 ;;		Unchanged: 0/0
  3922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3923 ;;      Params:         0       4       0       0       0
  3924 ;;      Locals:         0       1       0       0       0
  3925 ;;      Temps:          0       1       0       0       0
  3926 ;;      Totals:         0       6       0       0       0
  3927 ;;Total ram usage:        6 bytes
  3928 ;; Hardware stack levels used: 1
  3929 ;; Hardware stack levels required when called: 3
  3930 ;; This function calls:
  3931 ;;		_utoa
  3932 ;; This function is called by:
  3933 ;;		_show_ad
  3934 ;; This function uses a non-reentrant model
  3935 ;;
  3936                           
  3937                           
  3938                           ;psect for function _itoa
  3939  0A5C                     _itoa:
  3940                           
  3941                           ;incstack = 0
  3942                           ; Regs used in _itoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3943                           ;itoa@buf stored from wreg
  3944  0A5C  1283               	bcf	3,5	;RP0=0, select bank0
  3945  0A5D  1303               	bcf	3,6	;RP1=0, select bank0
  3946  0A5E  00B4               	movwf	itoa@buf
  3947  0A5F                     l3123:
  3948  0A5F                     l3125:
  3949  0A5F  1FB0               	btfss	itoa@val+1,7
  3950  0A60  2A62               	goto	u1841
  3951  0A61  2A63               	goto	u1840
  3952  0A62                     u1841:
  3953  0A62  2A73               	goto	l3133
  3954  0A63                     u1840:
  3955  0A63                     l3127:
  3956  0A63  302D               	movlw	45
  3957  0A64  00B3               	movwf	??_itoa
  3958  0A65  0834               	movf	itoa@buf,w
  3959  0A66  0084               	movwf	4
  3960  0A67  0833               	movf	??_itoa,w
  3961  0A68  1383               	bcf	3,7	;select IRP bank0
  3962  0A69  0080               	movwf	0
  3963  0A6A                     l3129:
  3964  0A6A  3001               	movlw	1
  3965  0A6B  00B3               	movwf	??_itoa
  3966  0A6C  0833               	movf	??_itoa,w
  3967  0A6D  07B4               	addwf	itoa@buf,f
  3968  0A6E                     l3131:
  3969  0A6E  09AF               	comf	itoa@val,f
  3970  0A6F  09B0               	comf	itoa@val+1,f
  3971  0A70  0AAF               	incf	itoa@val,f
  3972  0A71  1903               	skipnz
  3973  0A72  0AB0               	incf	itoa@val+1,f
  3974  0A73                     l3133:
  3975  0A73  0830               	movf	itoa@val+1,w
  3976  0A74  00A7               	movwf	utoa@val+1
  3977  0A75  082F               	movf	itoa@val,w
  3978  0A76  00A6               	movwf	utoa@val
  3979  0A77  0832               	movf	itoa@base+1,w
  3980  0A78  00A9               	movwf	utoa@base+1
  3981  0A79  0831               	movf	itoa@base,w
  3982  0A7A  00A8               	movwf	utoa@base
  3983  0A7B  0834               	movf	itoa@buf,w
  3984  0A7C  120A  158A  264A  120A  158A  	fcall	_utoa
  3985  0A81                     l977:
  3986  0A81  0008               	return
  3987  0A82                     __end_of_itoa:
  3988                           
  3989                           	psect	text15
  3990  0E4A                     __ptext15:	
  3991 ;; *************** function _utoa *****************
  3992 ;; Defined at:
  3993 ;;		line 17 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\itoa.c"
  3994 ;; Parameters:    Size  Location     Type
  3995 ;;  buf             1    wreg     PTR unsigned char 
  3996 ;;		 -> ad_char_val(5), 
  3997 ;;  val             2    6[BANK0 ] unsigned int 
  3998 ;;  base            2    8[BANK0 ] int 
  3999 ;; Auto vars:     Size  Location     Type
  4000 ;;  buf             1   14[BANK0 ] PTR unsigned char 
  4001 ;;		 -> ad_char_val(5), 
  4002 ;;  v               2   11[BANK0 ] unsigned int 
  4003 ;;  c               1   13[BANK0 ] unsigned char 
  4004 ;; Return value:  Size  Location     Type
  4005 ;;                  1    wreg      PTR unsigned char 
  4006 ;; Registers used:
  4007 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4008 ;; Tracked objects:
  4009 ;;		On entry : 0/0
  4010 ;;		On exit  : 0/0
  4011 ;;		Unchanged: 0/0
  4012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4013 ;;      Params:         0       4       0       0       0
  4014 ;;      Locals:         0       4       0       0       0
  4015 ;;      Temps:          0       1       0       0       0
  4016 ;;      Totals:         0       9       0       0       0
  4017 ;;Total ram usage:        9 bytes
  4018 ;; Hardware stack levels used: 1
  4019 ;; Hardware stack levels required when called: 2
  4020 ;; This function calls:
  4021 ;;		___lwdiv
  4022 ;;		___lwmod
  4023 ;; This function is called by:
  4024 ;;		_itoa
  4025 ;; This function uses a non-reentrant model
  4026 ;;
  4027                           
  4028                           
  4029                           ;psect for function _utoa
  4030  0E4A                     _utoa:
  4031                           
  4032                           ;incstack = 0
  4033                           ; Regs used in _utoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4034                           ;utoa@buf stored from wreg
  4035  0E4A  1283               	bcf	3,5	;RP0=0, select bank0
  4036  0E4B  1303               	bcf	3,6	;RP1=0, select bank0
  4037  0E4C  00AE               	movwf	utoa@buf
  4038  0E4D                     l3093:
  4039  0E4D  0827               	movf	utoa@val+1,w
  4040  0E4E  00AC               	movwf	utoa@v+1
  4041  0E4F  0826               	movf	utoa@val,w
  4042  0E50  00AB               	movwf	utoa@v
  4043  0E51                     l3095:
  4044  0E51  0829               	movf	utoa@base+1,w
  4045  0E52  00F3               	movwf	___lwdiv@divisor+1
  4046  0E53  0828               	movf	utoa@base,w
  4047  0E54  00F2               	movwf	___lwdiv@divisor
  4048  0E55  082C               	movf	utoa@v+1,w
  4049  0E56  00F5               	movwf	___lwdiv@dividend+1
  4050  0E57  082B               	movf	utoa@v,w
  4051  0E58  00F4               	movwf	___lwdiv@dividend
  4052  0E59  120A  158A  2512  120A  158A  	fcall	___lwdiv
  4053  0E5E  0873               	movf	?___lwdiv+1,w
  4054  0E5F  1283               	bcf	3,5	;RP0=0, select bank0
  4055  0E60  1303               	bcf	3,6	;RP1=0, select bank0
  4056  0E61  00AC               	movwf	utoa@v+1
  4057  0E62  0872               	movf	?___lwdiv,w
  4058  0E63  00AB               	movwf	utoa@v
  4059  0E64                     l3097:
  4060  0E64  3001               	movlw	1
  4061  0E65  00AA               	movwf	??_utoa
  4062  0E66  082A               	movf	??_utoa,w
  4063  0E67  07AE               	addwf	utoa@buf,f
  4064  0E68                     l3099:
  4065  0E68  082B               	movf	utoa@v,w
  4066  0E69  042C               	iorwf	utoa@v+1,w
  4067  0E6A  1D03               	btfss	3,2
  4068  0E6B  2E6D               	goto	u1811
  4069  0E6C  2E6E               	goto	u1810
  4070  0E6D                     u1811:
  4071  0E6D  2E51               	goto	l3095
  4072  0E6E                     u1810:
  4073  0E6E                     l3101:
  4074  0E6E  082E               	movf	utoa@buf,w
  4075  0E6F  0084               	movwf	4
  4076  0E70  1383               	bcf	3,7	;select IRP bank0
  4077  0E71  0180               	clrf	0
  4078  0E72                     l3103:
  4079  0E72  3001               	movlw	1
  4080  0E73  02AE               	subwf	utoa@buf,f
  4081  0E74                     l3105:
  4082  0E74  0829               	movf	utoa@base+1,w
  4083  0E75  00A1               	movwf	___lwmod@divisor+1
  4084  0E76  0828               	movf	utoa@base,w
  4085  0E77  00A0               	movwf	___lwmod@divisor
  4086  0E78  0827               	movf	utoa@val+1,w
  4087  0E79  00A3               	movwf	___lwmod@dividend+1
  4088  0E7A  0826               	movf	utoa@val,w
  4089  0E7B  00A2               	movwf	___lwmod@dividend
  4090  0E7C  120A  158A  241E  120A  158A  	fcall	___lwmod
  4091  0E81  1283               	bcf	3,5	;RP0=0, select bank0
  4092  0E82  1303               	bcf	3,6	;RP1=0, select bank0
  4093  0E83  0820               	movf	?___lwmod,w
  4094  0E84  00AA               	movwf	??_utoa
  4095  0E85  082A               	movf	??_utoa,w
  4096  0E86  00AD               	movwf	utoa@c
  4097  0E87                     l3107:
  4098  0E87  0829               	movf	utoa@base+1,w
  4099  0E88  00F3               	movwf	___lwdiv@divisor+1
  4100  0E89  0828               	movf	utoa@base,w
  4101  0E8A  00F2               	movwf	___lwdiv@divisor
  4102  0E8B  0827               	movf	utoa@val+1,w
  4103  0E8C  00F5               	movwf	___lwdiv@dividend+1
  4104  0E8D  0826               	movf	utoa@val,w
  4105  0E8E  00F4               	movwf	___lwdiv@dividend
  4106  0E8F  120A  158A  2512  120A  158A  	fcall	___lwdiv
  4107  0E94  0873               	movf	?___lwdiv+1,w
  4108  0E95  1283               	bcf	3,5	;RP0=0, select bank0
  4109  0E96  1303               	bcf	3,6	;RP1=0, select bank0
  4110  0E97  00A7               	movwf	utoa@val+1
  4111  0E98  0872               	movf	?___lwdiv,w
  4112  0E99  00A6               	movwf	utoa@val
  4113  0E9A                     l3109:
  4114  0E9A  300A               	movlw	10
  4115  0E9B  022D               	subwf	utoa@c,w
  4116  0E9C  1C03               	skipc
  4117  0E9D  2E9F               	goto	u1821
  4118  0E9E  2EA0               	goto	u1820
  4119  0E9F                     u1821:
  4120  0E9F  2EA4               	goto	l983
  4121  0EA0                     u1820:
  4122  0EA0                     l3111:
  4123  0EA0  3007               	movlw	7
  4124  0EA1  00AA               	movwf	??_utoa
  4125  0EA2  082A               	movf	??_utoa,w
  4126  0EA3  07AD               	addwf	utoa@c,f
  4127  0EA4                     l983:
  4128  0EA4  3030               	movlw	48
  4129  0EA5  00AA               	movwf	??_utoa
  4130  0EA6  082A               	movf	??_utoa,w
  4131  0EA7  07AD               	addwf	utoa@c,f
  4132  0EA8                     l3113:
  4133  0EA8  082D               	movf	utoa@c,w
  4134  0EA9  00AA               	movwf	??_utoa
  4135  0EAA  082E               	movf	utoa@buf,w
  4136  0EAB  0084               	movwf	4
  4137  0EAC  082A               	movf	??_utoa,w
  4138  0EAD  1383               	bcf	3,7	;select IRP bank0
  4139  0EAE  0080               	movwf	0
  4140  0EAF                     l3115:
  4141  0EAF  3001               	movlw	1
  4142  0EB0  02AE               	subwf	utoa@buf,f
  4143  0EB1                     l3117:
  4144  0EB1  0826               	movf	utoa@val,w
  4145  0EB2  0427               	iorwf	utoa@val+1,w
  4146  0EB3  1D03               	btfss	3,2
  4147  0EB4  2EB6               	goto	u1831
  4148  0EB5  2EB7               	goto	u1830
  4149  0EB6                     u1831:
  4150  0EB6  2E74               	goto	l3105
  4151  0EB7                     u1830:
  4152  0EB7                     l3119:
  4153                           
  4154                           ;	Return value of _utoa is never used
  4155  0EB7  3001               	movlw	1
  4156  0EB8  00AA               	movwf	??_utoa
  4157  0EB9  082A               	movf	??_utoa,w
  4158  0EBA  07AE               	addwf	utoa@buf,f
  4159  0EBB                     l985:
  4160  0EBB  0008               	return
  4161  0EBC                     __end_of_utoa:
  4162                           
  4163                           	psect	text16
  4164  0986                     __ptext16:	
  4165 ;; *************** function _amost1 *****************
  4166 ;; Defined at:
  4167 ;;		line 35 in file "main.c"
  4168 ;; Parameters:    Size  Location     Type
  4169 ;;  value           1    wreg     PTR unsigned int 
  4170 ;;		 -> ad_value(2), 
  4171 ;; Auto vars:     Size  Location     Type
  4172 ;;  value           1    3[COMMON] PTR unsigned int 
  4173 ;;		 -> ad_value(2), 
  4174 ;; Return value:  Size  Location     Type
  4175 ;;                  1    wreg      void 
  4176 ;; Registers used:
  4177 ;;		wreg, fsr0l, fsr0h
  4178 ;; Tracked objects:
  4179 ;;		On entry : 0/0
  4180 ;;		On exit  : 0/0
  4181 ;;		Unchanged: 0/0
  4182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4183 ;;      Params:         0       0       0       0       0
  4184 ;;      Locals:         1       0       0       0       0
  4185 ;;      Temps:          1       0       0       0       0
  4186 ;;      Totals:         2       0       0       0       0
  4187 ;;Total ram usage:        2 bytes
  4188 ;; Hardware stack levels used: 1
  4189 ;; Hardware stack levels required when called: 1
  4190 ;; This function calls:
  4191 ;;		Nothing
  4192 ;; This function is called by:
  4193 ;;		_show_ad
  4194 ;; This function uses a non-reentrant model
  4195 ;;
  4196                           
  4197                           
  4198                           ;psect for function _amost1
  4199  0986                     _amost1:
  4200                           
  4201                           ;incstack = 0
  4202                           ; Regs used in _amost1: [wregfsr0]
  4203                           ;amost1@value stored from wreg
  4204  0986  00F3               	movwf	amost1@value
  4205  0987                     l2397:
  4206                           
  4207                           ;main.c: 35: void amost1(unsigned int *value);main.c: 36: {;main.c: 37:     _delay((unsi
      +                          gned long)((100)*(20000000/4000000.0)));
  4208  0987  30A6               	movlw	166
  4209  0988  00F2               	movwf	??_amost1
  4210  0989                     u2107:
  4211  0989  0BF2               	decfsz	??_amost1,f
  4212  098A  2989               	goto	u2107
  4213  098B  0000               	nop
  4214  098C                     l2399:
  4215                           
  4216                           ;main.c: 38:     ADCON0bits.GO_nDONE = 1;
  4217  098C  1283               	bcf	3,5	;RP0=0, select bank0
  4218  098D  1303               	bcf	3,6	;RP1=0, select bank0
  4219  098E  151F               	bsf	31,2	;volatile
  4220  098F                     l155:	
  4221                           ;main.c: 39:     while(ADCON0bits.GO_nDONE);
  4222                           
  4223  098F  191F               	btfsc	31,2	;volatile
  4224  0990  2992               	goto	u1251
  4225  0991  2993               	goto	u1250
  4226  0992                     u1251:
  4227  0992  298F               	goto	l155
  4228  0993                     u1250:
  4229  0993                     l2401:
  4230                           
  4231                           ;main.c: 40:     *value = (unsigned int)(ADRESH << 8) + (ADRESL);
  4232  0993  0873               	movf	amost1@value,w
  4233  0994  0084               	movwf	4
  4234  0995  1683               	bsf	3,5	;RP0=1, select bank1
  4235  0996  1303               	bcf	3,6	;RP1=0, select bank1
  4236  0997  081E               	movf	30,w	;volatile
  4237  0998  1383               	bcf	3,7	;select IRP bank0
  4238  0999  0080               	movwf	0
  4239  099A  0A84               	incf	4,f
  4240  099B  1283               	bcf	3,5	;RP0=0, select bank0
  4241  099C  1303               	bcf	3,6	;RP1=0, select bank0
  4242  099D  081E               	movf	30,w	;volatile
  4243  099E  0080               	movwf	0
  4244  099F                     l158:
  4245  099F  0008               	return
  4246  09A0                     __end_of_amost1:
  4247                           
  4248                           	psect	text17
  4249  0C5A                     __ptext17:	
  4250 ;; *************** function _math_testing *****************
  4251 ;; Defined at:
  4252 ;;		line 229 in file "main.c"
  4253 ;; Parameters:    Size  Location     Type
  4254 ;;		None
  4255 ;; Auto vars:     Size  Location     Type
  4256 ;;		None
  4257 ;; Return value:  Size  Location     Type
  4258 ;;                  1    wreg      void 
  4259 ;; Registers used:
  4260 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4261 ;; Tracked objects:
  4262 ;;		On entry : 0/0
  4263 ;;		On exit  : 0/0
  4264 ;;		Unchanged: 0/0
  4265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4266 ;;      Params:         0       0       0       0       0
  4267 ;;      Locals:         0       0       0       0       0
  4268 ;;      Temps:          0       3       0       0       0
  4269 ;;      Totals:         0       3       0       0       0
  4270 ;;Total ram usage:        3 bytes
  4271 ;; Hardware stack levels used: 1
  4272 ;; Hardware stack levels required when called: 8
  4273 ;; This function calls:
  4274 ;;		_lcd_clear
  4275 ;;		_lcd_goto
  4276 ;;		_printf
  4277 ;; This function is called by:
  4278 ;;		_main
  4279 ;; This function uses a non-reentrant model
  4280 ;;
  4281                           
  4282                           
  4283                           ;psect for function _math_testing
  4284  0C5A                     _math_testing:
  4285  0C5A                     l3273:	
  4286                           ;incstack = 0
  4287 ;; hardware stack exceeded
  4288                           ; Regs used in _math_testing: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4289                           
  4290                           
  4291                           ;main.c: 232:     lcd_goto(1,0);
  4292  0C5A  01F8               	clrf	lcd_goto@col
  4293  0C5B  3001               	movlw	1
  4294  0C5C  120A  158A  23E3  120A  158A  	fcall	_lcd_goto
  4295  0C61                     l3275:
  4296                           
  4297                           ;main.c: 233:     printf("XC8 LIBS TESTING");
  4298  0C61  301C               	movlw	low (STR_3| (0+32768))
  4299  0C62  1283               	bcf	3,5	;RP0=0, select bank0
  4300  0C63  1303               	bcf	3,6	;RP1=0, select bank0
  4301  0C64  00A6               	movwf	printf@f
  4302  0C65  3087               	movlw	high (STR_3| (0+32768))
  4303  0C66  00A7               	movwf	printf@f+1
  4304  0C67  120A  158A  26BC  120A  158A  	fcall	_printf
  4305  0C6C                     l3277:
  4306                           
  4307                           ;main.c: 234:     lcd_goto(2,4);
  4308  0C6C  3004               	movlw	4
  4309  0C6D  1283               	bcf	3,5	;RP0=0, select bank0
  4310  0C6E  1303               	bcf	3,6	;RP1=0, select bank0
  4311  0C6F  00B6               	movwf	??_math_testing
  4312  0C70  0836               	movf	??_math_testing,w
  4313  0C71  00F8               	movwf	lcd_goto@col
  4314  0C72  3002               	movlw	2
  4315  0C73  120A  158A  23E3  120A  158A  	fcall	_lcd_goto
  4316                           
  4317                           ;main.c: 235:     printf("MATH LIB");
  4318  0C78  304A               	movlw	low (STR_6| (0+32768))
  4319  0C79  1283               	bcf	3,5	;RP0=0, select bank0
  4320  0C7A  1303               	bcf	3,6	;RP1=0, select bank0
  4321  0C7B  00A6               	movwf	printf@f
  4322  0C7C  3088               	movlw	high (STR_6| (0+32768))
  4323  0C7D  00A7               	movwf	printf@f+1
  4324  0C7E  120A  158A  26BC  120A  158A  	fcall	_printf
  4325  0C83                     l3279:
  4326                           
  4327                           ;main.c: 236:     _delay((unsigned long)((3000)*(20000000/4000.0)));
  4328  0C83  304D               	movlw	77
  4329  0C84  1283               	bcf	3,5	;RP0=0, select bank0
  4330  0C85  1303               	bcf	3,6	;RP1=0, select bank0
  4331  0C86  00B8               	movwf	??_math_testing+2
  4332  0C87  3019               	movlw	25
  4333  0C88  00B7               	movwf	??_math_testing+1
  4334  0C89  304F               	movlw	79
  4335  0C8A  00B6               	movwf	??_math_testing
  4336  0C8B                     u2117:
  4337  0C8B  0BB6               	decfsz	??_math_testing,f
  4338  0C8C  2C8B               	goto	u2117
  4339  0C8D  0BB7               	decfsz	??_math_testing+1,f
  4340  0C8E  2C8B               	goto	u2117
  4341  0C8F  0BB8               	decfsz	??_math_testing+2,f
  4342  0C90  2C8B               	goto	u2117
  4343  0C91                     l3281:
  4344                           
  4345                           ;main.c: 237:     lcd_clear();
  4346  0C91  160A  118A  2786  120A  158A  	fcall	_lcd_clear
  4347  0C96                     l179:
  4348  0C96  0008               	return
  4349  0C97                     __end_of_math_testing:
  4350                           
  4351                           	psect	text18
  4352  1750                     __ptext18:	
  4353 ;; *************** function _lcd_init *****************
  4354 ;; Defined at:
  4355 ;;		line 184 in file "lcd.c"
  4356 ;; Parameters:    Size  Location     Type
  4357 ;;		None
  4358 ;; Auto vars:     Size  Location     Type
  4359 ;;		None
  4360 ;; Return value:  Size  Location     Type
  4361 ;;                  1    wreg      void 
  4362 ;; Registers used:
  4363 ;;		wreg, status,2, status,0, pclath, cstack
  4364 ;; Tracked objects:
  4365 ;;		On entry : 0/0
  4366 ;;		On exit  : 0/0
  4367 ;;		Unchanged: 0/0
  4368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4369 ;;      Params:         0       0       0       0       0
  4370 ;;      Locals:         0       0       0       0       0
  4371 ;;      Temps:          0       0       0       0       0
  4372 ;;      Totals:         0       0       0       0       0
  4373 ;;Total ram usage:        0 bytes
  4374 ;; Hardware stack levels used: 1
  4375 ;; Hardware stack levels required when called: 8
  4376 ;; This function calls:
  4377 ;;		_lcd_init_4bits
  4378 ;;		_lcd_init_8bits
  4379 ;; This function is called by:
  4380 ;;		_main
  4381 ;; This function uses a non-reentrant model
  4382 ;;
  4383                           
  4384                           
  4385                           ;psect for function _lcd_init
  4386  1750                     _lcd_init:
  4387  1750                     l2997:	
  4388                           ;incstack = 0
  4389 ;; hardware stack exceeded
  4390                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  4391                           
  4392                           
  4393                           ;lcd.c: 187:         lcd_init_8bits();
  4394  1750  120A  158A  24D4  160A  118A  	fcall	_lcd_init_8bits
  4395  1755                     l320:
  4396  1755  0008               	return
  4397  1756                     __end_of_lcd_init:
  4398                           
  4399                           	psect	text19
  4400  0CD4                     __ptext19:	
  4401 ;; *************** function _lcd_init_8bits *****************
  4402 ;; Defined at:
  4403 ;;		line 145 in file "lcd.c"
  4404 ;; Parameters:    Size  Location     Type
  4405 ;;		None
  4406 ;; Auto vars:     Size  Location     Type
  4407 ;;		None
  4408 ;; Return value:  Size  Location     Type
  4409 ;;                  1    wreg      void 
  4410 ;; Registers used:
  4411 ;;		wreg, status,2, status,0, pclath, cstack
  4412 ;; Tracked objects:
  4413 ;;		On entry : 0/0
  4414 ;;		On exit  : 0/0
  4415 ;;		Unchanged: 0/0
  4416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4417 ;;      Params:         0       0       0       0       0
  4418 ;;      Locals:         0       0       0       0       0
  4419 ;;      Temps:          0       0       0       0       0
  4420 ;;      Totals:         0       0       0       0       0
  4421 ;;Total ram usage:        0 bytes
  4422 ;; Hardware stack levels used: 1
  4423 ;; Hardware stack levels required when called: 7
  4424 ;; This function calls:
  4425 ;;		_lcd_clear
  4426 ;;		_lcd_cmd
  4427 ;;		_lcd_delay_2ms
  4428 ;;		_lcd_delay_40ms
  4429 ;; This function is called by:
  4430 ;;		_lcd_init
  4431 ;; This function uses a non-reentrant model
  4432 ;;
  4433                           
  4434                           
  4435                           ;psect for function _lcd_init_8bits
  4436  0CD4                     _lcd_init_8bits:
  4437  0CD4                     l2739:	
  4438                           ;incstack = 0
  4439 ;; hardware stack exceeded
  4440                           ; Regs used in _lcd_init_8bits: [wreg+status,2+status,0+pclath+cstack]
  4441                           
  4442                           
  4443                           ;lcd.c: 148:     lcd_delay_40ms();
  4444  0CD4  160A  118A  279E  120A  158A  	fcall	_lcd_delay_40ms
  4445                           
  4446                           ;lcd.c: 150:  lcd_cmd(0x30);
  4447  0CD9  3030               	movlw	48
  4448  0CDA  160A  118A  27AC  120A  158A  	fcall	_lcd_cmd
  4449                           
  4450                           ;lcd.c: 151:     lcd_delay_2ms();
  4451  0CDF  160A  118A  2766  120A  158A  	fcall	_lcd_delay_2ms
  4452                           
  4453                           ;lcd.c: 152:  lcd_cmd(0x30);
  4454  0CE4  3030               	movlw	48
  4455  0CE5  160A  118A  27AC  120A  158A  	fcall	_lcd_cmd
  4456                           
  4457                           ;lcd.c: 153:     lcd_delay_2ms();
  4458  0CEA  160A  118A  2766  120A  158A  	fcall	_lcd_delay_2ms
  4459                           
  4460                           ;lcd.c: 154:  lcd_cmd(0x30);
  4461  0CEF  3030               	movlw	48
  4462  0CF0  160A  118A  27AC  120A  158A  	fcall	_lcd_cmd
  4463                           
  4464                           ;lcd.c: 155:     lcd_delay_2ms();
  4465  0CF5  160A  118A  2766  120A  158A  	fcall	_lcd_delay_2ms
  4466                           
  4467                           ;lcd.c: 157:  lcd_cmd(0x38);
  4468  0CFA  3038               	movlw	56
  4469  0CFB  160A  118A  27AC  120A  158A  	fcall	_lcd_cmd
  4470                           
  4471                           ;lcd.c: 158:  lcd_cmd(0x06);
  4472  0D00  3006               	movlw	6
  4473  0D01  160A  118A  27AC  120A  158A  	fcall	_lcd_cmd
  4474                           
  4475                           ;lcd.c: 159:  lcd_cmd(0x0E);
  4476  0D06  300E               	movlw	14
  4477  0D07  160A  118A  27AC  120A  158A  	fcall	_lcd_cmd
  4478                           
  4479                           ;lcd.c: 160:     lcd_clear();
  4480  0D0C  160A  118A  2786  120A  158A  	fcall	_lcd_clear
  4481  0D11                     l312:
  4482  0D11  0008               	return
  4483  0D12                     __end_of_lcd_init_8bits:
  4484                           
  4485                           	psect	text20
  4486  0D9E                     __ptext20:	
  4487 ;; *************** function _lcd_init_4bits *****************
  4488 ;; Defined at:
  4489 ;;		line 163 in file "lcd.c"
  4490 ;; Parameters:    Size  Location     Type
  4491 ;;		None
  4492 ;; Auto vars:     Size  Location     Type
  4493 ;;		None
  4494 ;; Return value:  Size  Location     Type
  4495 ;;                  1    wreg      void 
  4496 ;; Registers used:
  4497 ;;		wreg, status,2, status,0, pclath, cstack
  4498 ;; Tracked objects:
  4499 ;;		On entry : 0/0
  4500 ;;		On exit  : 0/0
  4501 ;;		Unchanged: 0/0
  4502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4503 ;;      Params:         0       0       0       0       0
  4504 ;;      Locals:         0       0       0       0       0
  4505 ;;      Temps:          0       0       0       0       0
  4506 ;;      Totals:         0       0       0       0       0
  4507 ;;Total ram usage:        0 bytes
  4508 ;; Hardware stack levels used: 1
  4509 ;; Hardware stack levels required when called: 7
  4510 ;; This function calls:
  4511 ;;		_lcd_clear
  4512 ;;		_lcd_cmd
  4513 ;;		_lcd_delay_2ms
  4514 ;;		_lcd_delay_40ms
  4515 ;;		_lcd_send_nibble
  4516 ;; This function is called by:
  4517 ;;		_lcd_init
  4518 ;; This function uses a non-reentrant model
  4519 ;;
  4520                           
  4521                           
  4522                           ;psect for function _lcd_init_4bits
  4523  0D9E                     _lcd_init_4bits:
  4524  0D9E                     l2741:	
  4525                           ;incstack = 0
  4526 ;; hardware stack exceeded
  4527                           ; Regs used in _lcd_init_4bits: [wreg+status,2+status,0+pclath+cstack]
  4528                           
  4529                           
  4530                           ;lcd.c: 166:     lcd_delay_40ms();
  4531  0D9E  160A  118A  279E  120A  158A  	fcall	_lcd_delay_40ms
  4532                           
  4533                           ;lcd.c: 168:     lcd_send_nibble(0x03);
  4534  0DA3  3003               	movlw	3
  4535  0DA4  120A  158A  234B  120A  158A  	fcall	_lcd_send_nibble
  4536                           
  4537                           ;lcd.c: 169:     lcd_delay_2ms();
  4538  0DA9  160A  118A  2766  120A  158A  	fcall	_lcd_delay_2ms
  4539                           
  4540                           ;lcd.c: 170:     lcd_send_nibble(0x03);
  4541  0DAE  3003               	movlw	3
  4542  0DAF  120A  158A  234B  120A  158A  	fcall	_lcd_send_nibble
  4543                           
  4544                           ;lcd.c: 171:     lcd_delay_2ms();
  4545  0DB4  160A  118A  2766  120A  158A  	fcall	_lcd_delay_2ms
  4546                           
  4547                           ;lcd.c: 172:     lcd_send_nibble(0x03);
  4548  0DB9  3003               	movlw	3
  4549  0DBA  120A  158A  234B  120A  158A  	fcall	_lcd_send_nibble
  4550                           
  4551                           ;lcd.c: 173:     lcd_delay_2ms();
  4552  0DBF  160A  118A  2766  120A  158A  	fcall	_lcd_delay_2ms
  4553                           
  4554                           ;lcd.c: 175:     lcd_send_nibble(0x02);
  4555  0DC4  3002               	movlw	2
  4556  0DC5  120A  158A  234B  120A  158A  	fcall	_lcd_send_nibble
  4557                           
  4558                           ;lcd.c: 176:     lcd_delay_2ms();
  4559  0DCA  160A  118A  2766  120A  158A  	fcall	_lcd_delay_2ms
  4560                           
  4561                           ;lcd.c: 178:  lcd_cmd(0x28);
  4562  0DCF  3028               	movlw	40
  4563  0DD0  160A  118A  27AC  120A  158A  	fcall	_lcd_cmd
  4564                           
  4565                           ;lcd.c: 179:  lcd_cmd(0x06);
  4566  0DD5  3006               	movlw	6
  4567  0DD6  160A  118A  27AC  120A  158A  	fcall	_lcd_cmd
  4568                           
  4569                           ;lcd.c: 180:  lcd_cmd(0x0E);
  4570  0DDB  300E               	movlw	14
  4571  0DDC  160A  118A  27AC  120A  158A  	fcall	_lcd_cmd
  4572                           
  4573                           ;lcd.c: 181:     lcd_clear();
  4574  0DE1  160A  118A  2786  120A  158A  	fcall	_lcd_clear
  4575  0DE6                     l315:
  4576  0DE6  0008               	return
  4577  0DE7                     __end_of_lcd_init_4bits:
  4578                           
  4579                           	psect	text21
  4580  179E                     __ptext21:	
  4581 ;; *************** function _lcd_delay_40ms *****************
  4582 ;; Defined at:
  4583 ;;		line 62 in file "lcd.c"
  4584 ;; Parameters:    Size  Location     Type
  4585 ;;		None
  4586 ;; Auto vars:     Size  Location     Type
  4587 ;;		None
  4588 ;; Return value:  Size  Location     Type
  4589 ;;                  1    wreg      void 
  4590 ;; Registers used:
  4591 ;;		wreg
  4592 ;; Tracked objects:
  4593 ;;		On entry : 0/0
  4594 ;;		On exit  : 0/0
  4595 ;;		Unchanged: 0/0
  4596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4597 ;;      Params:         0       0       0       0       0
  4598 ;;      Locals:         0       0       0       0       0
  4599 ;;      Temps:          3       0       0       0       0
  4600 ;;      Totals:         3       0       0       0       0
  4601 ;;Total ram usage:        3 bytes
  4602 ;; Hardware stack levels used: 1
  4603 ;; Hardware stack levels required when called: 1
  4604 ;; This function calls:
  4605 ;;		Nothing
  4606 ;; This function is called by:
  4607 ;;		_lcd_init_8bits
  4608 ;;		_lcd_init_4bits
  4609 ;; This function uses a non-reentrant model
  4610 ;;
  4611                           
  4612                           
  4613                           ;psect for function _lcd_delay_40ms
  4614  179E                     _lcd_delay_40ms:
  4615  179E                     l1403:	
  4616                           ;incstack = 0
  4617                           ; Regs used in _lcd_delay_40ms: [wreg]
  4618                           
  4619  179E  3002               	movlw	2
  4620  179F  00F4               	movwf	??_lcd_delay_40ms+2
  4621  17A0  3004               	movlw	4
  4622  17A1  00F3               	movwf	??_lcd_delay_40ms+1
  4623  17A2  30BA               	movlw	186
  4624  17A3  00F2               	movwf	??_lcd_delay_40ms
  4625  17A4                     u2127:
  4626  17A4  0BF2               	decfsz	??_lcd_delay_40ms,f
  4627  17A5  2FA4               	goto	u2127
  4628  17A6  0BF3               	decfsz	??_lcd_delay_40ms+1,f
  4629  17A7  2FA4               	goto	u2127
  4630  17A8  0BF4               	decfsz	??_lcd_delay_40ms+2,f
  4631  17A9  2FA4               	goto	u2127
  4632  17AA  0000               	nop
  4633  17AB                     l273:
  4634  17AB  0008               	return
  4635  17AC                     __end_of_lcd_delay_40ms:
  4636                           
  4637                           	psect	text22
  4638  0A82                     __ptext22:	
  4639 ;; *************** function _init *****************
  4640 ;; Defined at:
  4641 ;;		line 61 in file "main.c"
  4642 ;; Parameters:    Size  Location     Type
  4643 ;;		None
  4644 ;; Auto vars:     Size  Location     Type
  4645 ;;		None
  4646 ;; Return value:  Size  Location     Type
  4647 ;;                  1    wreg      void 
  4648 ;; Registers used:
  4649 ;;		wreg, status,2
  4650 ;; Tracked objects:
  4651 ;;		On entry : 0/0
  4652 ;;		On exit  : 0/0
  4653 ;;		Unchanged: 0/0
  4654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4655 ;;      Params:         0       0       0       0       0
  4656 ;;      Locals:         0       0       0       0       0
  4657 ;;      Temps:          0       0       0       0       0
  4658 ;;      Totals:         0       0       0       0       0
  4659 ;;Total ram usage:        0 bytes
  4660 ;; Hardware stack levels used: 1
  4661 ;; Hardware stack levels required when called: 1
  4662 ;; This function calls:
  4663 ;;		Nothing
  4664 ;; This function is called by:
  4665 ;;		_main
  4666 ;; This function uses a non-reentrant model
  4667 ;;
  4668                           
  4669                           
  4670                           ;psect for function _init
  4671  0A82                     _init:
  4672  0A82                     l1845:	
  4673                           ;incstack = 0
  4674                           ; Regs used in _init: [wreg+status,2]
  4675                           
  4676                           
  4677                           ;main.c: 64:     PORTA = 0b00000000;
  4678  0A82  1283               	bcf	3,5	;RP0=0, select bank0
  4679  0A83  1303               	bcf	3,6	;RP1=0, select bank0
  4680  0A84  0185               	clrf	5	;volatile
  4681                           
  4682                           ;main.c: 65:     PORTB = 0b00000000;
  4683  0A85  0186               	clrf	6	;volatile
  4684                           
  4685                           ;main.c: 66:     PORTC = 0b00000000;
  4686  0A86  0187               	clrf	7	;volatile
  4687                           
  4688                           ;main.c: 67:     TRISD = 0b00000000;
  4689  0A87  1683               	bsf	3,5	;RP0=1, select bank1
  4690  0A88  1303               	bcf	3,6	;RP1=0, select bank1
  4691  0A89  0188               	clrf	8	;volatile
  4692                           
  4693                           ;main.c: 68:     PORTE = 0b00000000;
  4694  0A8A  1283               	bcf	3,5	;RP0=0, select bank0
  4695  0A8B  1303               	bcf	3,6	;RP1=0, select bank0
  4696  0A8C  0189               	clrf	9	;volatile
  4697  0A8D                     l1847:
  4698                           
  4699                           ;main.c: 70:     TRISA = 0b00000001;
  4700  0A8D  3001               	movlw	1
  4701  0A8E  1683               	bsf	3,5	;RP0=1, select bank1
  4702  0A8F  1303               	bcf	3,6	;RP1=0, select bank1
  4703  0A90  0085               	movwf	5	;volatile
  4704  0A91                     l1849:
  4705                           
  4706                           ;main.c: 71:     TRISB = 0b00000001;
  4707  0A91  3001               	movlw	1
  4708  0A92  0086               	movwf	6	;volatile
  4709                           
  4710                           ;main.c: 72:     TRISC = 0b00000000;
  4711  0A93  0187               	clrf	7	;volatile
  4712                           
  4713                           ;main.c: 73:     PORTD = 0b00000000;
  4714  0A94  1283               	bcf	3,5	;RP0=0, select bank0
  4715  0A95  1303               	bcf	3,6	;RP1=0, select bank0
  4716  0A96  0188               	clrf	8	;volatile
  4717                           
  4718                           ;main.c: 74:     TRISE = 0b00000000;
  4719  0A97  1683               	bsf	3,5	;RP0=1, select bank1
  4720  0A98  1303               	bcf	3,6	;RP1=0, select bank1
  4721  0A99  0189               	clrf	9	;volatile
  4722  0A9A                     l1851:
  4723                           
  4724                           ;main.c: 77:     OPTION_REG = 0b10000001;
  4725  0A9A  3081               	movlw	129
  4726  0A9B  0081               	movwf	1	;volatile
  4727  0A9C                     l1853:
  4728                           
  4729                           ;main.c: 88:     INTCON = 0b00010000;
  4730  0A9C  3010               	movlw	16
  4731  0A9D  008B               	movwf	11	;volatile
  4732  0A9E                     l1855:
  4733                           
  4734                           ;main.c: 101:     CMCON = 0x07;
  4735  0A9E  3007               	movlw	7
  4736  0A9F  009C               	movwf	28	;volatile
  4737  0AA0                     l1857:
  4738                           
  4739                           ;main.c: 104:     ADCON0 = 0b10000001;
  4740  0AA0  3081               	movlw	129
  4741  0AA1  1283               	bcf	3,5	;RP0=0, select bank0
  4742  0AA2  1303               	bcf	3,6	;RP1=0, select bank0
  4743  0AA3  009F               	movwf	31	;volatile
  4744  0AA4                     l1859:
  4745                           
  4746                           ;main.c: 114:     ADCON1 = 0b10001110;
  4747  0AA4  308E               	movlw	142
  4748  0AA5  1683               	bsf	3,5	;RP0=1, select bank1
  4749  0AA6  1303               	bcf	3,6	;RP1=0, select bank1
  4750  0AA7  009F               	movwf	31	;volatile
  4751  0AA8                     l170:
  4752  0AA8  0008               	return
  4753  0AA9                     __end_of_init:
  4754                           
  4755                           	psect	text23
  4756  0381                     __ptext23:	
  4757 ;; *************** function _ctype_testing *****************
  4758 ;; Defined at:
  4759 ;;		line 309 in file "main.c"
  4760 ;; Parameters:    Size  Location     Type
  4761 ;;		None
  4762 ;; Auto vars:     Size  Location     Type
  4763 ;;		None
  4764 ;; Return value:  Size  Location     Type
  4765 ;;                  1    wreg      void 
  4766 ;; Registers used:
  4767 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4768 ;; Tracked objects:
  4769 ;;		On entry : 0/0
  4770 ;;		On exit  : 0/0
  4771 ;;		Unchanged: 0/0
  4772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4773 ;;      Params:         0       0       0       0       0
  4774 ;;      Locals:         0       0       0       0       0
  4775 ;;      Temps:          0       3       0       0       0
  4776 ;;      Totals:         0       3       0       0       0
  4777 ;;Total ram usage:        3 bytes
  4778 ;; Hardware stack levels used: 1
  4779 ;; Hardware stack levels required when called: 8
  4780 ;; This function calls:
  4781 ;;		_isalnum
  4782 ;;		_isalpha
  4783 ;;		_iscntrl
  4784 ;;		_isgraph
  4785 ;;		_islower
  4786 ;;		_isprint
  4787 ;;		_ispunct
  4788 ;;		_isspace
  4789 ;;		_isupper
  4790 ;;		_isxdigit
  4791 ;;		_lcd_clear
  4792 ;;		_lcd_goto
  4793 ;;		_printf
  4794 ;;		_tolower
  4795 ;;		_toupper
  4796 ;; This function is called by:
  4797 ;;		_main
  4798 ;; This function uses a non-reentrant model
  4799 ;;
  4800                           
  4801                           
  4802                           ;psect for function _ctype_testing
  4803  0381                     _ctype_testing:
  4804  0381                     l3283:	
  4805                           ;incstack = 0
  4806 ;; hardware stack exceeded
  4807                           ; Regs used in _ctype_testing: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4808                           
  4809                           
  4810                           ;main.c: 312:     lcd_goto(1,0);
  4811  0381  01F8               	clrf	lcd_goto@col
  4812  0382  3001               	movlw	1
  4813  0383  120A  158A  23E3  120A  118A  	fcall	_lcd_goto
  4814  0388                     l3285:
  4815                           
  4816                           ;main.c: 313:     printf("XC8 LIBS TESTING");
  4817  0388  301C               	movlw	low (STR_3| (0+32768))
  4818  0389  1283               	bcf	3,5	;RP0=0, select bank0
  4819  038A  1303               	bcf	3,6	;RP1=0, select bank0
  4820  038B  00A6               	movwf	printf@f
  4821  038C  3087               	movlw	high (STR_3| (0+32768))
  4822  038D  00A7               	movwf	printf@f+1
  4823  038E  120A  158A  26BC  120A  118A  	fcall	_printf
  4824  0393                     l3287:
  4825                           
  4826                           ;main.c: 314:     lcd_goto(2,3);
  4827  0393  3003               	movlw	3
  4828  0394  1283               	bcf	3,5	;RP0=0, select bank0
  4829  0395  1303               	bcf	3,6	;RP1=0, select bank0
  4830  0396  00B6               	movwf	??_ctype_testing
  4831  0397  0836               	movf	??_ctype_testing,w
  4832  0398  00F8               	movwf	lcd_goto@col
  4833  0399  3002               	movlw	2
  4834  039A  120A  158A  23E3  120A  118A  	fcall	_lcd_goto
  4835                           
  4836                           ;main.c: 315:     printf("CTYPE LIB");
  4837  039F  3040               	movlw	low (STR_8| (0+32768))
  4838  03A0  1283               	bcf	3,5	;RP0=0, select bank0
  4839  03A1  1303               	bcf	3,6	;RP1=0, select bank0
  4840  03A2  00A6               	movwf	printf@f
  4841  03A3  3088               	movlw	high (STR_8| (0+32768))
  4842  03A4  00A7               	movwf	printf@f+1
  4843  03A5  120A  158A  26BC  120A  118A  	fcall	_printf
  4844  03AA                     l3289:
  4845                           
  4846                           ;main.c: 316:     _delay((unsigned long)((3000)*(20000000/4000.0)));
  4847  03AA  304D               	movlw	77
  4848  03AB  1283               	bcf	3,5	;RP0=0, select bank0
  4849  03AC  1303               	bcf	3,6	;RP1=0, select bank0
  4850  03AD  00B8               	movwf	??_ctype_testing+2
  4851  03AE  3019               	movlw	25
  4852  03AF  00B7               	movwf	??_ctype_testing+1
  4853  03B0  304F               	movlw	79
  4854  03B1  00B6               	movwf	??_ctype_testing
  4855  03B2                     u2137:
  4856  03B2  0BB6               	decfsz	??_ctype_testing,f
  4857  03B3  2BB2               	goto	u2137
  4858  03B4  0BB7               	decfsz	??_ctype_testing+1,f
  4859  03B5  2BB2               	goto	u2137
  4860  03B6  0BB8               	decfsz	??_ctype_testing+2,f
  4861  03B7  2BB2               	goto	u2137
  4862  03B8                     l3291:
  4863                           
  4864                           ;main.c: 317:     lcd_clear();
  4865  03B8  160A  118A  2786  120A  118A  	fcall	_lcd_clear
  4866  03BD                     l3293:
  4867                           
  4868                           ;main.c: 319:     lcd_goto(1,0);
  4869  03BD  01F8               	clrf	lcd_goto@col
  4870  03BE  3001               	movlw	1
  4871  03BF  120A  158A  23E3  120A  118A  	fcall	_lcd_goto
  4872  03C4                     l3295:
  4873                           
  4874                           ;main.c: 320:     printf("isgraph(c)? %d", isgraph('t'));
  4875  03C4  3088               	movlw	low (STR_9| (0+32768))
  4876  03C5  1283               	bcf	3,5	;RP0=0, select bank0
  4877  03C6  1303               	bcf	3,6	;RP1=0, select bank0
  4878  03C7  00A6               	movwf	printf@f
  4879  03C8  3087               	movlw	high (STR_9| (0+32768))
  4880  03C9  00A7               	movwf	printf@f+1
  4881  03CA  3074               	movlw	116
  4882  03CB  160A  118A  27EE  120A  118A  	fcall	_isgraph
  4883  03D0  3000               	movlw	0
  4884  03D1  1803               	skipnc
  4885  03D2  3001               	movlw	1
  4886  03D3  1283               	bcf	3,5	;RP0=0, select bank0
  4887  03D4  1303               	bcf	3,6	;RP1=0, select bank0
  4888  03D5  00B6               	movwf	??_ctype_testing
  4889  03D6  01B7               	clrf	??_ctype_testing+1
  4890  03D7  0836               	movf	??_ctype_testing,w
  4891  03D8  00A8               	movwf	?_printf+2
  4892  03D9  0837               	movf	??_ctype_testing+1,w
  4893  03DA  00A9               	movwf	?_printf+3
  4894  03DB  120A  158A  26BC  120A  118A  	fcall	_printf
  4895  03E0                     l3297:
  4896                           
  4897                           ;main.c: 321:     lcd_goto(2,0);
  4898  03E0  01F8               	clrf	lcd_goto@col
  4899  03E1  3002               	movlw	2
  4900  03E2  120A  158A  23E3  120A  118A  	fcall	_lcd_goto
  4901  03E7                     l3299:
  4902                           
  4903                           ;main.c: 322:     printf("ispunct(c)? %d", ispunct('.'));
  4904  03E7  30E2               	movlw	low (STR_10| (0+32768))
  4905  03E8  1283               	bcf	3,5	;RP0=0, select bank0
  4906  03E9  1303               	bcf	3,6	;RP1=0, select bank0
  4907  03EA  00A6               	movwf	printf@f
  4908  03EB  3087               	movlw	high (STR_10| (0+32768))
  4909  03EC  00A7               	movwf	printf@f+1
  4910  03ED  302E               	movlw	46
  4911  03EE  120A  118A  26CB  120A  118A  	fcall	_ispunct
  4912  03F3  3000               	movlw	0
  4913  03F4  1803               	skipnc
  4914  03F5  3001               	movlw	1
  4915  03F6  1283               	bcf	3,5	;RP0=0, select bank0
  4916  03F7  1303               	bcf	3,6	;RP1=0, select bank0
  4917  03F8  00B6               	movwf	??_ctype_testing
  4918  03F9  01B7               	clrf	??_ctype_testing+1
  4919  03FA  0836               	movf	??_ctype_testing,w
  4920  03FB  00A8               	movwf	?_printf+2
  4921  03FC  0837               	movf	??_ctype_testing+1,w
  4922  03FD  00A9               	movwf	?_printf+3
  4923  03FE  120A  158A  26BC  120A  118A  	fcall	_printf
  4924  0403                     l3301:
  4925                           
  4926                           ;main.c: 323:     _delay((unsigned long)((3000)*(20000000/4000.0)));
  4927  0403  304D               	movlw	77
  4928  0404  1283               	bcf	3,5	;RP0=0, select bank0
  4929  0405  1303               	bcf	3,6	;RP1=0, select bank0
  4930  0406  00B8               	movwf	??_ctype_testing+2
  4931  0407  3019               	movlw	25
  4932  0408  00B7               	movwf	??_ctype_testing+1
  4933  0409  304F               	movlw	79
  4934  040A  00B6               	movwf	??_ctype_testing
  4935  040B                     u2147:
  4936  040B  0BB6               	decfsz	??_ctype_testing,f
  4937  040C  2C0B               	goto	u2147
  4938  040D  0BB7               	decfsz	??_ctype_testing+1,f
  4939  040E  2C0B               	goto	u2147
  4940  040F  0BB8               	decfsz	??_ctype_testing+2,f
  4941  0410  2C0B               	goto	u2147
  4942  0411                     l3303:
  4943                           
  4944                           ;main.c: 324:     lcd_clear();
  4945  0411  160A  118A  2786  120A  118A  	fcall	_lcd_clear
  4946  0416                     l3305:
  4947                           
  4948                           ;main.c: 326:     lcd_goto(1,0);
  4949  0416  01F8               	clrf	lcd_goto@col
  4950  0417  3001               	movlw	1
  4951  0418  120A  158A  23E3  120A  118A  	fcall	_lcd_goto
  4952  041D                     l3307:
  4953                           
  4954                           ;main.c: 327:     printf("isspace(c)? %d", isspace(' '));
  4955  041D  3079               	movlw	low (STR_11| (0+32768))
  4956  041E  1283               	bcf	3,5	;RP0=0, select bank0
  4957  041F  1303               	bcf	3,6	;RP1=0, select bank0
  4958  0420  00A6               	movwf	printf@f
  4959  0421  3087               	movlw	high (STR_11| (0+32768))
  4960  0422  00A7               	movwf	printf@f+1
  4961  0423  3020               	movlw	32
  4962  0424  120A  158A  2155  120A  118A  	fcall	_isspace
  4963  0429  3000               	movlw	0
  4964  042A  1803               	skipnc
  4965  042B  3001               	movlw	1
  4966  042C  1283               	bcf	3,5	;RP0=0, select bank0
  4967  042D  1303               	bcf	3,6	;RP1=0, select bank0
  4968  042E  00B6               	movwf	??_ctype_testing
  4969  042F  01B7               	clrf	??_ctype_testing+1
  4970  0430  0836               	movf	??_ctype_testing,w
  4971  0431  00A8               	movwf	?_printf+2
  4972  0432  0837               	movf	??_ctype_testing+1,w
  4973  0433  00A9               	movwf	?_printf+3
  4974  0434  120A  158A  26BC  120A  118A  	fcall	_printf
  4975                           
  4976                           ;main.c: 328:     lcd_goto(2,0);
  4977  0439  01F8               	clrf	lcd_goto@col
  4978  043A  3002               	movlw	2
  4979  043B  120A  158A  23E3  120A  118A  	fcall	_lcd_goto
  4980  0440                     l3309:
  4981                           
  4982                           ;main.c: 329:     printf("isupper(c)? %d", isupper('t'));
  4983  0440  30C4               	movlw	low (STR_12| (0+32768))
  4984  0441  1283               	bcf	3,5	;RP0=0, select bank0
  4985  0442  1303               	bcf	3,6	;RP1=0, select bank0
  4986  0443  00A6               	movwf	printf@f
  4987  0444  3087               	movlw	high (STR_12| (0+32768))
  4988  0445  00A7               	movwf	printf@f+1
  4989  0446  3074               	movlw	116
  4990  0447  160A  118A  27DC  120A  118A  	fcall	_isupper
  4991  044C  3000               	movlw	0
  4992  044D  1803               	skipnc
  4993  044E  3001               	movlw	1
  4994  044F  1283               	bcf	3,5	;RP0=0, select bank0
  4995  0450  1303               	bcf	3,6	;RP1=0, select bank0
  4996  0451  00B6               	movwf	??_ctype_testing
  4997  0452  01B7               	clrf	??_ctype_testing+1
  4998  0453  0836               	movf	??_ctype_testing,w
  4999  0454  00A8               	movwf	?_printf+2
  5000  0455  0837               	movf	??_ctype_testing+1,w
  5001  0456  00A9               	movwf	?_printf+3
  5002  0457  120A  158A  26BC  120A  118A  	fcall	_printf
  5003  045C                     l3311:
  5004                           
  5005                           ;main.c: 330:     _delay((unsigned long)((3000)*(20000000/4000.0)));
  5006  045C  304D               	movlw	77
  5007  045D  1283               	bcf	3,5	;RP0=0, select bank0
  5008  045E  1303               	bcf	3,6	;RP1=0, select bank0
  5009  045F  00B8               	movwf	??_ctype_testing+2
  5010  0460  3019               	movlw	25
  5011  0461  00B7               	movwf	??_ctype_testing+1
  5012  0462  304F               	movlw	79
  5013  0463  00B6               	movwf	??_ctype_testing
  5014  0464                     u2157:
  5015  0464  0BB6               	decfsz	??_ctype_testing,f
  5016  0465  2C64               	goto	u2157
  5017  0466  0BB7               	decfsz	??_ctype_testing+1,f
  5018  0467  2C64               	goto	u2157
  5019  0468  0BB8               	decfsz	??_ctype_testing+2,f
  5020  0469  2C64               	goto	u2157
  5021  046A                     l3313:
  5022                           
  5023                           ;main.c: 331:     lcd_clear();
  5024  046A  160A  118A  2786  120A  118A  	fcall	_lcd_clear
  5025  046F                     l3315:
  5026                           
  5027                           ;main.c: 333:     lcd_goto(1,0);
  5028  046F  01F8               	clrf	lcd_goto@col
  5029  0470  3001               	movlw	1
  5030  0471  120A  158A  23E3  120A  118A  	fcall	_lcd_goto
  5031  0476                     l3317:
  5032                           
  5033                           ;main.c: 334:     printf("isxdigit(c)? %d", isxdigit('4'));
  5034  0476  302D               	movlw	low (STR_13| (0+32768))
  5035  0477  1283               	bcf	3,5	;RP0=0, select bank0
  5036  0478  1303               	bcf	3,6	;RP1=0, select bank0
  5037  0479  00A6               	movwf	printf@f
  5038  047A  3087               	movlw	high (STR_13| (0+32768))
  5039  047B  00A7               	movwf	printf@f+1
  5040  047C  3034               	movlw	52
  5041  047D  120A  158A  22A9  120A  118A  	fcall	_isxdigit
  5042  0482  3000               	movlw	0
  5043  0483  1803               	skipnc
  5044  0484  3001               	movlw	1
  5045  0485  1283               	bcf	3,5	;RP0=0, select bank0
  5046  0486  1303               	bcf	3,6	;RP1=0, select bank0
  5047  0487  00B6               	movwf	??_ctype_testing
  5048  0488  01B7               	clrf	??_ctype_testing+1
  5049  0489  0836               	movf	??_ctype_testing,w
  5050  048A  00A8               	movwf	?_printf+2
  5051  048B  0837               	movf	??_ctype_testing+1,w
  5052  048C  00A9               	movwf	?_printf+3
  5053  048D  120A  158A  26BC  120A  118A  	fcall	_printf
  5054  0492                     l3319:
  5055                           
  5056                           ;main.c: 335:     lcd_goto(2,0);
  5057  0492  01F8               	clrf	lcd_goto@col
  5058  0493  3002               	movlw	2
  5059  0494  120A  158A  23E3  120A  118A  	fcall	_lcd_goto
  5060  0499                     l3321:
  5061                           
  5062                           ;main.c: 336:     printf("iscntrl(c)? %d", iscntrl('\t'));
  5063  0499  30A6               	movlw	low (STR_14| (0+32768))
  5064  049A  1283               	bcf	3,5	;RP0=0, select bank0
  5065  049B  1303               	bcf	3,6	;RP1=0, select bank0
  5066  049C  00A6               	movwf	printf@f
  5067  049D  3087               	movlw	high (STR_14| (0+32768))
  5068  049E  00A7               	movwf	printf@f+1
  5069  049F  3009               	movlw	9
  5070  04A0  160A  118A  2770  120A  118A  	fcall	_iscntrl
  5071  04A5  3000               	movlw	0
  5072  04A6  1803               	skipnc
  5073  04A7  3001               	movlw	1
  5074  04A8  1283               	bcf	3,5	;RP0=0, select bank0
  5075  04A9  1303               	bcf	3,6	;RP1=0, select bank0
  5076  04AA  00B6               	movwf	??_ctype_testing
  5077  04AB  01B7               	clrf	??_ctype_testing+1
  5078  04AC  0836               	movf	??_ctype_testing,w
  5079  04AD  00A8               	movwf	?_printf+2
  5080  04AE  0837               	movf	??_ctype_testing+1,w
  5081  04AF  00A9               	movwf	?_printf+3
  5082  04B0  120A  158A  26BC  120A  118A  	fcall	_printf
  5083  04B5                     l3323:
  5084                           
  5085                           ;main.c: 337:     _delay((unsigned long)((3000)*(20000000/4000.0)));
  5086  04B5  304D               	movlw	77
  5087  04B6  1283               	bcf	3,5	;RP0=0, select bank0
  5088  04B7  1303               	bcf	3,6	;RP1=0, select bank0
  5089  04B8  00B8               	movwf	??_ctype_testing+2
  5090  04B9  3019               	movlw	25
  5091  04BA  00B7               	movwf	??_ctype_testing+1
  5092  04BB  304F               	movlw	79
  5093  04BC  00B6               	movwf	??_ctype_testing
  5094  04BD                     u2167:
  5095  04BD  0BB6               	decfsz	??_ctype_testing,f
  5096  04BE  2CBD               	goto	u2167
  5097  04BF  0BB7               	decfsz	??_ctype_testing+1,f
  5098  04C0  2CBD               	goto	u2167
  5099  04C1  0BB8               	decfsz	??_ctype_testing+2,f
  5100  04C2  2CBD               	goto	u2167
  5101  04C3                     l3325:
  5102                           
  5103                           ;main.c: 338:     lcd_clear();
  5104  04C3  160A  118A  2786  120A  118A  	fcall	_lcd_clear
  5105  04C8                     l3327:
  5106                           
  5107                           ;main.c: 340:     lcd_goto(1,0);
  5108  04C8  01F8               	clrf	lcd_goto@col
  5109  04C9  3001               	movlw	1
  5110  04CA  120A  158A  23E3  120A  118A  	fcall	_lcd_goto
  5111                           
  5112                           ;main.c: 341:     printf("isdigit(c)? %d", isxdigit('3'));
  5113  04CF  30F1               	movlw	low (STR_15| (0+32768))
  5114  04D0  1283               	bcf	3,5	;RP0=0, select bank0
  5115  04D1  1303               	bcf	3,6	;RP1=0, select bank0
  5116  04D2  00A6               	movwf	printf@f
  5117  04D3  3087               	movlw	high (STR_15| (0+32768))
  5118  04D4  00A7               	movwf	printf@f+1
  5119  04D5  3033               	movlw	51
  5120  04D6  120A  158A  22A9  120A  118A  	fcall	_isxdigit
  5121  04DB  3000               	movlw	0
  5122  04DC  1803               	skipnc
  5123  04DD  3001               	movlw	1
  5124  04DE  1283               	bcf	3,5	;RP0=0, select bank0
  5125  04DF  1303               	bcf	3,6	;RP1=0, select bank0
  5126  04E0  00B6               	movwf	??_ctype_testing
  5127  04E1  01B7               	clrf	??_ctype_testing+1
  5128  04E2  0836               	movf	??_ctype_testing,w
  5129  04E3  00A8               	movwf	?_printf+2
  5130  04E4  0837               	movf	??_ctype_testing+1,w
  5131  04E5  00A9               	movwf	?_printf+3
  5132  04E6  120A  158A  26BC  120A  118A  	fcall	_printf
  5133  04EB                     l3329:
  5134                           
  5135                           ;main.c: 342:     lcd_goto(2,0);
  5136  04EB  01F8               	clrf	lcd_goto@col
  5137  04EC  3002               	movlw	2
  5138  04ED  120A  158A  23E3  120A  118A  	fcall	_lcd_goto
  5139  04F2                     l3331:
  5140                           
  5141                           ;main.c: 343:     printf("islower(c)? %d", islower('C'));
  5142  04F2  30D3               	movlw	low (STR_16| (0+32768))
  5143  04F3  1283               	bcf	3,5	;RP0=0, select bank0
  5144  04F4  1303               	bcf	3,6	;RP1=0, select bank0
  5145  04F5  00A6               	movwf	printf@f
  5146  04F6  3087               	movlw	high (STR_16| (0+32768))
  5147  04F7  00A7               	movwf	printf@f+1
  5148  04F8  3043               	movlw	67
  5149  04F9  120A  158A  20CE  120A  118A  	fcall	_islower
  5150  04FE  3000               	movlw	0
  5151  04FF  1803               	skipnc
  5152  0500  3001               	movlw	1
  5153  0501  1283               	bcf	3,5	;RP0=0, select bank0
  5154  0502  1303               	bcf	3,6	;RP1=0, select bank0
  5155  0503  00B6               	movwf	??_ctype_testing
  5156  0504  01B7               	clrf	??_ctype_testing+1
  5157  0505  0836               	movf	??_ctype_testing,w
  5158  0506  00A8               	movwf	?_printf+2
  5159  0507  0837               	movf	??_ctype_testing+1,w
  5160  0508  00A9               	movwf	?_printf+3
  5161  0509  120A  158A  26BC  120A  118A  	fcall	_printf
  5162  050E                     l3333:
  5163                           
  5164                           ;main.c: 344:     _delay((unsigned long)((3000)*(20000000/4000.0)));
  5165  050E  304D               	movlw	77
  5166  050F  1283               	bcf	3,5	;RP0=0, select bank0
  5167  0510  1303               	bcf	3,6	;RP1=0, select bank0
  5168  0511  00B8               	movwf	??_ctype_testing+2
  5169  0512  3019               	movlw	25
  5170  0513  00B7               	movwf	??_ctype_testing+1
  5171  0514  304F               	movlw	79
  5172  0515  00B6               	movwf	??_ctype_testing
  5173  0516                     u2177:
  5174  0516  0BB6               	decfsz	??_ctype_testing,f
  5175  0517  2D16               	goto	u2177
  5176  0518  0BB7               	decfsz	??_ctype_testing+1,f
  5177  0519  2D16               	goto	u2177
  5178  051A  0BB8               	decfsz	??_ctype_testing+2,f
  5179  051B  2D16               	goto	u2177
  5180  051C                     l3335:
  5181                           
  5182                           ;main.c: 345:     lcd_clear();
  5183  051C  160A  118A  2786  120A  118A  	fcall	_lcd_clear
  5184  0521                     l3337:
  5185                           
  5186                           ;main.c: 347:     lcd_goto(1,0);
  5187  0521  01F8               	clrf	lcd_goto@col
  5188  0522  3001               	movlw	1
  5189  0523  120A  158A  23E3  120A  118A  	fcall	_lcd_goto
  5190  0528                     l3339:
  5191                           
  5192                           ;main.c: 348:     printf("isprint(c)? %d", isprint('3'));
  5193  0528  3000               	movlw	low (STR_17| (0+32768))
  5194  0529  1283               	bcf	3,5	;RP0=0, select bank0
  5195  052A  1303               	bcf	3,6	;RP1=0, select bank0
  5196  052B  00A6               	movwf	printf@f
  5197  052C  3088               	movlw	high (STR_17| (0+32768))
  5198  052D  00A7               	movwf	printf@f+1
  5199  052E  3033               	movlw	51
  5200  052F  120A  158A  20E0  120A  118A  	fcall	_isprint
  5201  0534  3000               	movlw	0
  5202  0535  1803               	skipnc
  5203  0536  3001               	movlw	1
  5204  0537  1283               	bcf	3,5	;RP0=0, select bank0
  5205  0538  1303               	bcf	3,6	;RP1=0, select bank0
  5206  0539  00B6               	movwf	??_ctype_testing
  5207  053A  01B7               	clrf	??_ctype_testing+1
  5208  053B  0836               	movf	??_ctype_testing,w
  5209  053C  00A8               	movwf	?_printf+2
  5210  053D  0837               	movf	??_ctype_testing+1,w
  5211  053E  00A9               	movwf	?_printf+3
  5212  053F  120A  158A  26BC  120A  118A  	fcall	_printf
  5213  0544                     l3341:
  5214                           
  5215                           ;main.c: 349:     lcd_goto(2,0);
  5216  0544  01F8               	clrf	lcd_goto@col
  5217  0545  3002               	movlw	2
  5218  0546  120A  158A  23E3  120A  118A  	fcall	_lcd_goto
  5219  054B                     l3343:
  5220                           
  5221                           ;main.c: 350:     printf("isalnum(c)? %d", isalnum('*'));
  5222  054B  30B5               	movlw	low (STR_18| (0+32768))
  5223  054C  1283               	bcf	3,5	;RP0=0, select bank0
  5224  054D  1303               	bcf	3,6	;RP1=0, select bank0
  5225  054E  00A6               	movwf	printf@f
  5226  054F  3087               	movlw	high (STR_18| (0+32768))
  5227  0550  00A7               	movwf	printf@f+1
  5228  0551  302A               	movlw	42
  5229  0552  120A  158A  21BC  120A  118A  	fcall	_isalnum
  5230  0557  3000               	movlw	0
  5231  0558  1803               	skipnc
  5232  0559  3001               	movlw	1
  5233  055A  1283               	bcf	3,5	;RP0=0, select bank0
  5234  055B  1303               	bcf	3,6	;RP1=0, select bank0
  5235  055C  00B6               	movwf	??_ctype_testing
  5236  055D  01B7               	clrf	??_ctype_testing+1
  5237  055E  0836               	movf	??_ctype_testing,w
  5238  055F  00A8               	movwf	?_printf+2
  5239  0560  0837               	movf	??_ctype_testing+1,w
  5240  0561  00A9               	movwf	?_printf+3
  5241  0562  120A  158A  26BC  120A  118A  	fcall	_printf
  5242  0567                     l3345:
  5243                           
  5244                           ;main.c: 351:     _delay((unsigned long)((3000)*(20000000/4000.0)));
  5245  0567  304D               	movlw	77
  5246  0568  1283               	bcf	3,5	;RP0=0, select bank0
  5247  0569  1303               	bcf	3,6	;RP1=0, select bank0
  5248  056A  00B8               	movwf	??_ctype_testing+2
  5249  056B  3019               	movlw	25
  5250  056C  00B7               	movwf	??_ctype_testing+1
  5251  056D  304F               	movlw	79
  5252  056E  00B6               	movwf	??_ctype_testing
  5253  056F                     u2187:
  5254  056F  0BB6               	decfsz	??_ctype_testing,f
  5255  0570  2D6F               	goto	u2187
  5256  0571  0BB7               	decfsz	??_ctype_testing+1,f
  5257  0572  2D6F               	goto	u2187
  5258  0573  0BB8               	decfsz	??_ctype_testing+2,f
  5259  0574  2D6F               	goto	u2187
  5260  0575                     l3347:
  5261                           
  5262                           ;main.c: 352:     lcd_clear();
  5263  0575  160A  118A  2786  120A  118A  	fcall	_lcd_clear
  5264                           
  5265                           ;main.c: 354:     lcd_goto(1,0);
  5266  057A  01F8               	clrf	lcd_goto@col
  5267  057B  3001               	movlw	1
  5268  057C  120A  158A  23E3  120A  118A  	fcall	_lcd_goto
  5269  0581                     l3349:
  5270                           
  5271                           ;main.c: 355:     printf("isalpha(c)? %d", isalpha('3'));
  5272  0581  306A               	movlw	low (STR_19| (0+32768))
  5273  0582  1283               	bcf	3,5	;RP0=0, select bank0
  5274  0583  1303               	bcf	3,6	;RP1=0, select bank0
  5275  0584  00A6               	movwf	printf@f
  5276  0585  3087               	movlw	high (STR_19| (0+32768))
  5277  0586  00A7               	movwf	printf@f+1
  5278  0587  3033               	movlw	51
  5279  0588  120A  158A  21A0  120A  118A  	fcall	_isalpha
  5280  058D  3000               	movlw	0
  5281  058E  1803               	skipnc
  5282  058F  3001               	movlw	1
  5283  0590  1283               	bcf	3,5	;RP0=0, select bank0
  5284  0591  1303               	bcf	3,6	;RP1=0, select bank0
  5285  0592  00B6               	movwf	??_ctype_testing
  5286  0593  01B7               	clrf	??_ctype_testing+1
  5287  0594  0836               	movf	??_ctype_testing,w
  5288  0595  00A8               	movwf	?_printf+2
  5289  0596  0837               	movf	??_ctype_testing+1,w
  5290  0597  00A9               	movwf	?_printf+3
  5291  0598  120A  158A  26BC  120A  118A  	fcall	_printf
  5292  059D                     l3351:
  5293                           
  5294                           ;main.c: 356:     lcd_goto(2,0);
  5295  059D  01F8               	clrf	lcd_goto@col
  5296  059E  3002               	movlw	2
  5297  059F  120A  158A  23E3  120A  118A  	fcall	_lcd_goto
  5298                           
  5299                           ;main.c: 357:     printf("isascii(c)? %d", (!(('f')&~0x7F)));
  5300  05A4  3097               	movlw	low (STR_20| (0+32768))
  5301  05A5  1283               	bcf	3,5	;RP0=0, select bank0
  5302  05A6  1303               	bcf	3,6	;RP1=0, select bank0
  5303  05A7  00A6               	movwf	printf@f
  5304  05A8  3087               	movlw	high (STR_20| (0+32768))
  5305  05A9  00A7               	movwf	printf@f+1
  5306  05AA  3001               	movlw	1
  5307  05AB  00A8               	movwf	?_printf+2
  5308  05AC  3000               	movlw	0
  5309  05AD  00A9               	movwf	?_printf+3
  5310  05AE  120A  158A  26BC  120A  118A  	fcall	_printf
  5311  05B3                     l3353:
  5312                           
  5313                           ;main.c: 358:     _delay((unsigned long)((3000)*(20000000/4000.0)));
  5314  05B3  304D               	movlw	77
  5315  05B4  1283               	bcf	3,5	;RP0=0, select bank0
  5316  05B5  1303               	bcf	3,6	;RP1=0, select bank0
  5317  05B6  00B8               	movwf	??_ctype_testing+2
  5318  05B7  3019               	movlw	25
  5319  05B8  00B7               	movwf	??_ctype_testing+1
  5320  05B9  304F               	movlw	79
  5321  05BA  00B6               	movwf	??_ctype_testing
  5322  05BB                     u2197:
  5323  05BB  0BB6               	decfsz	??_ctype_testing,f
  5324  05BC  2DBB               	goto	u2197
  5325  05BD  0BB7               	decfsz	??_ctype_testing+1,f
  5326  05BE  2DBB               	goto	u2197
  5327  05BF  0BB8               	decfsz	??_ctype_testing+2,f
  5328  05C0  2DBB               	goto	u2197
  5329  05C1                     l3355:
  5330                           
  5331                           ;main.c: 359:     lcd_clear();
  5332  05C1  160A  118A  2786  120A  118A  	fcall	_lcd_clear
  5333  05C6                     l3357:
  5334                           
  5335                           ;main.c: 361:     lcd_goto(1,0);
  5336  05C6  01F8               	clrf	lcd_goto@col
  5337  05C7  3001               	movlw	1
  5338  05C8  120A  158A  23E3  120A  118A  	fcall	_lcd_goto
  5339  05CD                     l3359:
  5340                           
  5341                           ;main.c: 362:     printf("A to lower: %c", tolower('A'));
  5342  05CD  305B               	movlw	low (STR_21| (0+32768))
  5343  05CE  1283               	bcf	3,5	;RP0=0, select bank0
  5344  05CF  1303               	bcf	3,6	;RP1=0, select bank0
  5345  05D0  00A6               	movwf	printf@f
  5346  05D1  3087               	movlw	high (STR_21| (0+32768))
  5347  05D2  00A7               	movwf	printf@f+1
  5348  05D3  3041               	movlw	65
  5349  05D4  160A  118A  27CC  120A  118A  	fcall	_tolower
  5350  05D9  1283               	bcf	3,5	;RP0=0, select bank0
  5351  05DA  1303               	bcf	3,6	;RP1=0, select bank0
  5352  05DB  00B6               	movwf	??_ctype_testing
  5353  05DC  01B7               	clrf	??_ctype_testing+1
  5354  05DD  0836               	movf	??_ctype_testing,w
  5355  05DE  00A8               	movwf	?_printf+2
  5356  05DF  0837               	movf	??_ctype_testing+1,w
  5357  05E0  00A9               	movwf	?_printf+3
  5358  05E1  120A  158A  26BC  120A  118A  	fcall	_printf
  5359  05E6                     l3361:
  5360                           
  5361                           ;main.c: 363:     lcd_goto(2,0);
  5362  05E6  01F8               	clrf	lcd_goto@col
  5363  05E7  3002               	movlw	2
  5364  05E8  120A  158A  23E3  120A  118A  	fcall	_lcd_goto
  5365  05ED                     l3363:
  5366                           
  5367                           ;main.c: 364:     printf("a to upper: %c", toupper('a'));
  5368  05ED  304C               	movlw	low (STR_22| (0+32768))
  5369  05EE  1283               	bcf	3,5	;RP0=0, select bank0
  5370  05EF  1303               	bcf	3,6	;RP1=0, select bank0
  5371  05F0  00A6               	movwf	printf@f
  5372  05F1  3087               	movlw	high (STR_22| (0+32768))
  5373  05F2  00A7               	movwf	printf@f+1
  5374  05F3  3061               	movlw	97
  5375  05F4  120A  158A  2104  120A  118A  	fcall	_toupper
  5376  05F9  1283               	bcf	3,5	;RP0=0, select bank0
  5377  05FA  1303               	bcf	3,6	;RP1=0, select bank0
  5378  05FB  00B6               	movwf	??_ctype_testing
  5379  05FC  01B7               	clrf	??_ctype_testing+1
  5380  05FD  0836               	movf	??_ctype_testing,w
  5381  05FE  00A8               	movwf	?_printf+2
  5382  05FF  0837               	movf	??_ctype_testing+1,w
  5383  0600  00A9               	movwf	?_printf+3
  5384  0601  120A  158A  26BC  120A  118A  	fcall	_printf
  5385  0606                     l3365:
  5386                           
  5387                           ;main.c: 365:     _delay((unsigned long)((3000)*(20000000/4000.0)));
  5388  0606  304D               	movlw	77
  5389  0607  1283               	bcf	3,5	;RP0=0, select bank0
  5390  0608  1303               	bcf	3,6	;RP1=0, select bank0
  5391  0609  00B8               	movwf	??_ctype_testing+2
  5392  060A  3019               	movlw	25
  5393  060B  00B7               	movwf	??_ctype_testing+1
  5394  060C  304F               	movlw	79
  5395  060D  00B6               	movwf	??_ctype_testing
  5396  060E                     u2207:
  5397  060E  0BB6               	decfsz	??_ctype_testing,f
  5398  060F  2E0E               	goto	u2207
  5399  0610  0BB7               	decfsz	??_ctype_testing+1,f
  5400  0611  2E0E               	goto	u2207
  5401  0612  0BB8               	decfsz	??_ctype_testing+2,f
  5402  0613  2E0E               	goto	u2207
  5403  0614                     l3367:
  5404                           
  5405                           ;main.c: 366:     lcd_clear();
  5406  0614  160A  118A  2786  120A  118A  	fcall	_lcd_clear
  5407  0619                     l3369:
  5408                           
  5409                           ;main.c: 368:     lcd_goto(1,0);
  5410  0619  01F8               	clrf	lcd_goto@col
  5411  061A  3001               	movlw	1
  5412  061B  120A  158A  23E3  120A  118A  	fcall	_lcd_goto
  5413  0620                     l3371:
  5414                           
  5415                           ;main.c: 369:     printf("a to ascii %d", (('a')&0x7F));
  5416  0620  300F               	movlw	low (STR_23| (0+32768))
  5417  0621  1283               	bcf	3,5	;RP0=0, select bank0
  5418  0622  1303               	bcf	3,6	;RP1=0, select bank0
  5419  0623  00A6               	movwf	printf@f
  5420  0624  3088               	movlw	high (STR_23| (0+32768))
  5421  0625  00A7               	movwf	printf@f+1
  5422  0626  3061               	movlw	97
  5423  0627  00A8               	movwf	?_printf+2
  5424  0628  3000               	movlw	0
  5425  0629  00A9               	movwf	?_printf+3
  5426  062A  120A  158A  26BC  120A  118A  	fcall	_printf
  5427  062F                     l3373:
  5428                           
  5429                           ;main.c: 370:     _delay((unsigned long)((3000)*(20000000/4000.0)));
  5430  062F  304D               	movlw	77
  5431  0630  1283               	bcf	3,5	;RP0=0, select bank0
  5432  0631  1303               	bcf	3,6	;RP1=0, select bank0
  5433  0632  00B8               	movwf	??_ctype_testing+2
  5434  0633  3019               	movlw	25
  5435  0634  00B7               	movwf	??_ctype_testing+1
  5436  0635  304F               	movlw	79
  5437  0636  00B6               	movwf	??_ctype_testing
  5438  0637                     u2217:
  5439  0637  0BB6               	decfsz	??_ctype_testing,f
  5440  0638  2E37               	goto	u2217
  5441  0639  0BB7               	decfsz	??_ctype_testing+1,f
  5442  063A  2E37               	goto	u2217
  5443  063B  0BB8               	decfsz	??_ctype_testing+2,f
  5444  063C  2E37               	goto	u2217
  5445  063D                     l3375:
  5446                           
  5447                           ;main.c: 371:     lcd_clear();
  5448  063D  160A  118A  2786  120A  118A  	fcall	_lcd_clear
  5449  0642                     l182:
  5450  0642  0008               	return
  5451  0643                     __end_of_ctype_testing:
  5452                           
  5453                           	psect	text24
  5454  0904                     __ptext24:	
  5455 ;; *************** function _toupper *****************
  5456 ;; Defined at:
  5457 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\toupper.c"
  5458 ;; Parameters:    Size  Location     Type
  5459 ;;  c               1    wreg     unsigned char 
  5460 ;; Auto vars:     Size  Location     Type
  5461 ;;  c               1    3[COMMON] unsigned char 
  5462 ;; Return value:  Size  Location     Type
  5463 ;;                  1    wreg      unsigned char 
  5464 ;; Registers used:
  5465 ;;		wreg, status,2, status,0
  5466 ;; Tracked objects:
  5467 ;;		On entry : 0/0
  5468 ;;		On exit  : 0/0
  5469 ;;		Unchanged: 0/0
  5470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5471 ;;      Params:         0       0       0       0       0
  5472 ;;      Locals:         1       0       0       0       0
  5473 ;;      Temps:          1       0       0       0       0
  5474 ;;      Totals:         2       0       0       0       0
  5475 ;;Total ram usage:        2 bytes
  5476 ;; Hardware stack levels used: 1
  5477 ;; Hardware stack levels required when called: 1
  5478 ;; This function calls:
  5479 ;;		Nothing
  5480 ;; This function is called by:
  5481 ;;		_ctype_testing
  5482 ;; This function uses a non-reentrant model
  5483 ;;
  5484                           
  5485                           
  5486                           ;psect for function _toupper
  5487  0904                     _toupper:
  5488                           
  5489                           ;incstack = 0
  5490                           ; Regs used in _toupper: [wreg+status,2+status,0]
  5491                           ;toupper@c stored from wreg
  5492  0904  00F3               	movwf	toupper@c
  5493  0905                     l1681:
  5494  0905  307B               	movlw	123
  5495  0906  0273               	subwf	toupper@c,w
  5496  0907  1803               	skipnc
  5497  0908  290A               	goto	u681
  5498  0909  290B               	goto	u680
  5499  090A                     u681:
  5500  090A  2915               	goto	l1687
  5501  090B                     u680:
  5502  090B                     l1683:
  5503  090B  3061               	movlw	97
  5504  090C  0273               	subwf	toupper@c,w
  5505  090D  1C03               	skipc
  5506  090E  2910               	goto	u691
  5507  090F  2911               	goto	u690
  5508  0910                     u691:
  5509  0910  2915               	goto	l1687
  5510  0911                     u690:
  5511  0911                     l1685:
  5512  0911  30DF               	movlw	223
  5513  0912  00F2               	movwf	??_toupper
  5514  0913  0872               	movf	??_toupper,w
  5515  0914  05F3               	andwf	toupper@c,f
  5516  0915                     l1687:
  5517  0915  0873               	movf	toupper@c,w
  5518  0916                     l1065:
  5519  0916  0008               	return
  5520  0917                     __end_of_toupper:
  5521                           
  5522                           	psect	text25
  5523  17CC                     __ptext25:	
  5524 ;; *************** function _tolower *****************
  5525 ;; Defined at:
  5526 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\tolower.c"
  5527 ;; Parameters:    Size  Location     Type
  5528 ;;  c               1    wreg     unsigned char 
  5529 ;; Auto vars:     Size  Location     Type
  5530 ;;  c               1    2[COMMON] unsigned char 
  5531 ;; Return value:  Size  Location     Type
  5532 ;;                  1    wreg      unsigned char 
  5533 ;; Registers used:
  5534 ;;		wreg
  5535 ;; Tracked objects:
  5536 ;;		On entry : 0/0
  5537 ;;		On exit  : 0/0
  5538 ;;		Unchanged: 0/0
  5539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5540 ;;      Params:         0       0       0       0       0
  5541 ;;      Locals:         1       0       0       0       0
  5542 ;;      Temps:          0       0       0       0       0
  5543 ;;      Totals:         1       0       0       0       0
  5544 ;;Total ram usage:        1 bytes
  5545 ;; Hardware stack levels used: 1
  5546 ;; Hardware stack levels required when called: 1
  5547 ;; This function calls:
  5548 ;;		Nothing
  5549 ;; This function is called by:
  5550 ;;		_ctype_testing
  5551 ;; This function uses a non-reentrant model
  5552 ;;
  5553                           
  5554                           
  5555                           ;psect for function _tolower
  5556  17CC                     _tolower:
  5557                           
  5558                           ;incstack = 0
  5559                           ; Regs used in _tolower: [wreg]
  5560                           ;tolower@c stored from wreg
  5561  17CC  00F2               	movwf	tolower@c
  5562  17CD                     l1671:
  5563  17CD  305B               	movlw	91
  5564  17CE  0272               	subwf	tolower@c,w
  5565  17CF  1803               	skipnc
  5566  17D0  2FD2               	goto	u661
  5567  17D1  2FD3               	goto	u660
  5568  17D2                     u661:
  5569  17D2  2FDA               	goto	l1677
  5570  17D3                     u660:
  5571  17D3                     l1673:
  5572  17D3  3041               	movlw	65
  5573  17D4  0272               	subwf	tolower@c,w
  5574  17D5  1C03               	skipc
  5575  17D6  2FD8               	goto	u671
  5576  17D7  2FD9               	goto	u670
  5577  17D8                     u671:
  5578  17D8  2FDA               	goto	l1677
  5579  17D9                     u670:
  5580  17D9                     l1675:
  5581  17D9  16F2               	bsf	tolower@c,5
  5582  17DA                     l1677:
  5583  17DA  0872               	movf	tolower@c,w
  5584  17DB                     l1061:
  5585  17DB  0008               	return
  5586  17DC                     __end_of_tolower:
  5587                           
  5588                           	psect	text26
  5589  0EBC                     __ptext26:	
  5590 ;; *************** function _printf *****************
  5591 ;; Defined at:
  5592 ;;		line 477 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c"
  5593 ;; Parameters:    Size  Location     Type
  5594 ;;  f               2    6[BANK0 ] PTR const unsigned char 
  5595 ;;		 -> STR_50(3), STR_49(7), STR_47(3), STR_46(8), 
  5596 ;;		 -> STR_44(3), STR_43(7), STR_41(3), STR_40(7), 
  5597 ;;		 -> STR_38(3), STR_37(7), STR_35(3), STR_34(7), 
  5598 ;;		 -> STR_33(11), STR_32(7), STR_31(3), STR_30(7), 
  5599 ;;		 -> STR_29(3), STR_28(7), STR_27(3), STR_26(7), 
  5600 ;;		 -> STR_25(11), STR_24(17), STR_23(14), STR_22(15), 
  5601 ;;		 -> STR_21(15), STR_20(15), STR_19(15), STR_18(15), 
  5602 ;;		 -> STR_17(15), STR_16(15), STR_15(15), STR_14(15), 
  5603 ;;		 -> STR_13(16), STR_12(15), STR_11(15), STR_10(15), 
  5604 ;;		 -> STR_9(15), STR_8(10), STR_7(17), STR_6(9), 
  5605 ;;		 -> STR_5(17), STR_4(7), STR_3(17), STR_2(13), 
  5606 ;;		 -> STR_1(15), 
  5607 ;; Auto vars:     Size  Location     Type
  5608 ;;  tmpval          4    0        struct .
  5609 ;;  val             2   19[BANK0 ] unsigned int 
  5610 ;;  cp              2   16[BANK0 ] PTR const unsigned char 
  5611 ;;		 -> STR_51(7), NULL(0), ?_printf(2), string_testing@string(10), 
  5612 ;;		 -> ad_char_val(5), 
  5613 ;;  len             2    0        unsigned int 
  5614 ;;  c               1   21[BANK0 ] unsigned char 
  5615 ;;  ap              1   18[BANK0 ] PTR void [1]
  5616 ;;		 -> ?_printf(2), 
  5617 ;;  prec            1   15[BANK0 ] char 
  5618 ;;  flag            1   14[BANK0 ] unsigned char 
  5619 ;; Return value:  Size  Location     Type
  5620 ;;                  2    6[BANK0 ] int 
  5621 ;; Registers used:
  5622 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5623 ;; Tracked objects:
  5624 ;;		On entry : 0/0
  5625 ;;		On exit  : 0/0
  5626 ;;		Unchanged: 0/0
  5627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5628 ;;      Params:         0       4       0       0       0
  5629 ;;      Locals:         0       8       0       0       0
  5630 ;;      Temps:          0       4       0       0       0
  5631 ;;      Totals:         0      16       0       0       0
  5632 ;;Total ram usage:       16 bytes
  5633 ;; Hardware stack levels used: 1
  5634 ;; Hardware stack levels required when called: 7
  5635 ;; This function calls:
  5636 ;;		___lwdiv
  5637 ;;		___lwmod
  5638 ;;		_putch
  5639 ;; This function is called by:
  5640 ;;		_show_ad
  5641 ;;		_stdlib_testing
  5642 ;;		_math_testing
  5643 ;;		_ctype_testing
  5644 ;;		_string_testing
  5645 ;; This function uses a non-reentrant model
  5646 ;;
  5647                           
  5648                           
  5649                           ;psect for function _printf
  5650  0EBC                     _printf:
  5651  0EBC                     l3155:	
  5652                           ;incstack = 0
  5653 ;; hardware stack exceeded
  5654                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5655                           
  5656                           
  5657                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 477: printf(const
      +                           char * f, ...);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 47
      +                          8: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 479:  va_list
      +                           ap;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 512:  char c;
      +                          ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 521:  signed char
      +                           prec;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 525:  unsig
      +                          ned char flag;
  5658  0EBC  3028               	movlw	(low ((?_printf| 0+2)))& (0+255)
  5659  0EBD  1283               	bcf	3,5	;RP0=0, select bank0
  5660  0EBE  1303               	bcf	3,6	;RP1=0, select bank0
  5661  0EBF  00AA               	movwf	??_printf
  5662  0EC0  082A               	movf	??_printf,w
  5663  0EC1  00B2               	movwf	printf@ap
  5664                           
  5665                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  5666  0EC2  2FE5               	goto	l3221
  5667  0EC3                     l3157:
  5668                           
  5669                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  5670  0EC3  3025               	movlw	37
  5671  0EC4  0635               	xorwf	printf@c,w
  5672  0EC5  1903               	btfsc	3,2
  5673  0EC6  2EC8               	goto	u1851
  5674  0EC7  2EC9               	goto	u1850
  5675  0EC8                     u1851:
  5676  0EC8  2ED0               	goto	l3161
  5677  0EC9                     u1850:
  5678  0EC9                     l3159:
  5679                           
  5680                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 558:    (putch(c) );
  5681  0EC9  0835               	movf	printf@c,w
  5682  0ECA  160A  118A  2756  120A  158A  	fcall	_putch
  5683                           
  5684                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 559:    continue;
  5685  0ECF  2FE5               	goto	l3221
  5686  0ED0                     l3161:
  5687                           
  5688                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  5689  0ED0  01AE               	clrf	printf@flag
  5690                           
  5691                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  5692  0ED1  2F1F               	goto	l3185
  5693  0ED2                     l3163:
  5694                           
  5695                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 760:     cp = (*(
      +                          const char * *)__va_arg((*(const char * **)ap), (const char *)0));
  5696  0ED2  0832               	movf	printf@ap,w
  5697  0ED3  0084               	movwf	4
  5698  0ED4  1383               	bcf	3,7	;select IRP bank0
  5699  0ED5  0800               	movf	0,w
  5700  0ED6  00B0               	movwf	printf@cp
  5701  0ED7  3000               	movlw	0
  5702  0ED8  00B1               	movwf	printf@cp+1
  5703  0ED9                     l3165:
  5704  0ED9  3001               	movlw	1
  5705  0EDA  00AA               	movwf	??_printf
  5706  0EDB  082A               	movf	??_printf,w
  5707  0EDC  07B2               	addwf	printf@ap,f
  5708  0EDD                     l3167:
  5709                           
  5710                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 766:    if(!cp)
  5711  0EDD  0830               	movf	printf@cp,w
  5712  0EDE  0431               	iorwf	printf@cp+1,w
  5713  0EDF  1D03               	btfss	3,2
  5714  0EE0  2EE2               	goto	u1861
  5715  0EE1  2EE3               	goto	u1860
  5716  0EE2                     u1861:
  5717  0EE2  2EFE               	goto	l3175
  5718  0EE3                     u1860:
  5719  0EE3                     l3169:
  5720                           
  5721                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 767:     cp = "(n
      +                          ull)";
  5722  0EE3  305B               	movlw	low (STR_51| (0+32768))
  5723  0EE4  00B0               	movwf	printf@cp
  5724  0EE5  3088               	movlw	high (STR_51| (0+32768))
  5725  0EE6  00B1               	movwf	printf@cp+1
  5726  0EE7  2EFE               	goto	l3175
  5727  0EE8                     l3171:
  5728                           
  5729                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 804:     (putch(*
      +                          cp++) );
  5730  0EE8  0831               	movf	printf@cp+1,w
  5731  0EE9  00FF               	movwf	btemp+1
  5732  0EEA  0830               	movf	printf@cp,w
  5733  0EEB  0084               	movwf	4
  5734  0EEC  120A  118A  2700  120A  158A  	fcall	stringtab
  5735  0EF1  160A  118A  2756  120A  158A  	fcall	_putch
  5736  0EF6                     l3173:
  5737  0EF6  3001               	movlw	1
  5738  0EF7  1283               	bcf	3,5	;RP0=0, select bank0
  5739  0EF8  1303               	bcf	3,6	;RP1=0, select bank0
  5740  0EF9  07B0               	addwf	printf@cp,f
  5741  0EFA  1803               	skipnc
  5742  0EFB  0AB1               	incf	printf@cp+1,f
  5743  0EFC  3000               	movlw	0
  5744  0EFD  07B1               	addwf	printf@cp+1,f
  5745  0EFE                     l3175:
  5746                           
  5747                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 803:    while(*cp
      +                          )
  5748  0EFE  0831               	movf	printf@cp+1,w
  5749  0EFF  00FF               	movwf	btemp+1
  5750  0F00  0830               	movf	printf@cp,w
  5751  0F01  0084               	movwf	4
  5752  0F02  120A  118A  2700  120A  158A  	fcall	stringtab
  5753  0F07  3A00               	xorlw	0
  5754  0F08  1D03               	skipz
  5755  0F09  2F0B               	goto	u1871
  5756  0F0A  2F0C               	goto	u1870
  5757  0F0B                     u1871:
  5758  0F0B  2EE8               	goto	l3171
  5759  0F0C                     u1870:
  5760  0F0C  2FE5               	goto	l3221
  5761  0F0D                     l3177:
  5762                           
  5763                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 825:    c = (char
      +                          )(*(int *)__va_arg((*(int **)ap), (int)0));
  5764  0F0D  0832               	movf	printf@ap,w
  5765  0F0E  0084               	movwf	4
  5766  0F0F  1383               	bcf	3,7	;select IRP bank0
  5767  0F10  0800               	movf	0,w
  5768  0F11  00AA               	movwf	??_printf
  5769  0F12  082A               	movf	??_printf,w
  5770  0F13  00B5               	movwf	printf@c
  5771  0F14                     l3179:
  5772  0F14  3002               	movlw	2
  5773  0F15  00AA               	movwf	??_printf
  5774  0F16  082A               	movf	??_printf,w
  5775  0F17  07B2               	addwf	printf@ap,f
  5776  0F18                     l3181:
  5777                           
  5778                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 835:    (putch(c)
      +                           );
  5779  0F18  0835               	movf	printf@c,w
  5780  0F19  160A  118A  2756  120A  158A  	fcall	_putch
  5781                           
  5782                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 836:    continue;
  5783  0F1E  2FE5               	goto	l3221
  5784  0F1F                     l3185:
  5785  0F1F  0827               	movf	printf@f+1,w
  5786  0F20  00AB               	movwf	??_printf+1
  5787  0F21  0826               	movf	printf@f,w
  5788  0F22  00AA               	movwf	??_printf
  5789  0F23  0AA6               	incf	printf@f,f
  5790  0F24  1903               	skipnz
  5791  0F25  0AA7               	incf	printf@f+1,f
  5792  0F26  082B               	movf	??_printf+1,w
  5793  0F27  00FF               	movwf	btemp+1
  5794  0F28  082A               	movf	??_printf,w
  5795  0F29  0084               	movwf	4
  5796  0F2A  120A  118A  2700  120A  158A  	fcall	stringtab
  5797  0F2F  00B5               	movwf	printf@c
  5798  0F30  00AC               	movwf	??_printf+2
  5799  0F31  01AD               	clrf	??_printf+3
  5800                           
  5801                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5802                           ; Switch size 1, requested type "simple"
  5803                           ; Number of cases is 1, Range of values is 0 to 0
  5804                           ; switch strategies available:
  5805                           ; Name         Instructions Cycles
  5806                           ; simple_byte            4     3 (average)
  5807                           ; direct_byte           11     8 (fixed)
  5808                           ; jumptable            260     6 (fixed)
  5809                           ;	Chosen strategy is simple_byte
  5810  0F32  082D               	movf	??_printf+3,w
  5811  0F33  3A00               	xorlw	0	; case 0
  5812  0F34  1903               	skipnz
  5813  0F35  2F37               	goto	l3555
  5814  0F36  2F18               	goto	l3181
  5815  0F37                     l3555:
  5816                           
  5817                           ; Switch size 1, requested type "simple"
  5818                           ; Number of cases is 5, Range of values is 0 to 115
  5819                           ; switch strategies available:
  5820                           ; Name         Instructions Cycles
  5821                           ; simple_byte           16     9 (average)
  5822                           ; jumptable            260     6 (fixed)
  5823                           ;	Chosen strategy is simple_byte
  5824  0F37  082C               	movf	??_printf+2,w
  5825  0F38  3A00               	xorlw	0	; case 0
  5826  0F39  1903               	skipnz
  5827  0F3A  2FFF               	goto	l453
  5828  0F3B  3A63               	xorlw	99	; case 99
  5829  0F3C  1903               	skipnz
  5830  0F3D  2F0D               	goto	l3177
  5831  0F3E  3A07               	xorlw	7	; case 100
  5832  0F3F  1903               	skipnz
  5833  0F40  2F48               	goto	l3187
  5834  0F41  3A0D               	xorlw	13	; case 105
  5835  0F42  1903               	skipnz
  5836  0F43  2F48               	goto	l3187
  5837  0F44  3A1A               	xorlw	26	; case 115
  5838  0F45  1903               	skipnz
  5839  0F46  2ED2               	goto	l3163
  5840  0F47  2F18               	goto	l3181
  5841  0F48                     l3187:
  5842                           
  5843                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  5844  0F48  0832               	movf	printf@ap,w
  5845  0F49  0084               	movwf	4
  5846  0F4A  1383               	bcf	3,7	;select IRP bank0
  5847  0F4B  0800               	movf	0,w
  5848  0F4C  00B3               	movwf	printf@val
  5849  0F4D  0A84               	incf	4,f
  5850  0F4E  0800               	movf	0,w
  5851  0F4F  00B4               	movwf	printf@val+1
  5852  0F50                     l3189:
  5853  0F50  3002               	movlw	2
  5854  0F51  00AA               	movwf	??_printf
  5855  0F52  082A               	movf	??_printf,w
  5856  0F53  07B2               	addwf	printf@ap,f
  5857  0F54                     l3191:
  5858                           
  5859                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  5860  0F54  1FB4               	btfss	printf@val+1,7
  5861  0F55  2F57               	goto	u1881
  5862  0F56  2F58               	goto	u1880
  5863  0F57                     u1881:
  5864  0F57  2F61               	goto	l3197
  5865  0F58                     u1880:
  5866  0F58                     l3193:
  5867                           
  5868                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  5869  0F58  3003               	movlw	3
  5870  0F59  00AA               	movwf	??_printf
  5871  0F5A  082A               	movf	??_printf,w
  5872  0F5B  04AE               	iorwf	printf@flag,f
  5873  0F5C                     l3195:
  5874                           
  5875                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  5876  0F5C  09B3               	comf	printf@val,f
  5877  0F5D  09B4               	comf	printf@val+1,f
  5878  0F5E  0AB3               	incf	printf@val,f
  5879  0F5F  1903               	skipnz
  5880  0F60  0AB4               	incf	printf@val+1,f
  5881  0F61                     l3197:
  5882                           
  5883                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  5884  0F61  01B5               	clrf	printf@c
  5885  0F62  0AB5               	incf	printf@c,f
  5886  0F63                     l3203:
  5887                           
  5888                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  5889  0F63  0835               	movf	printf@c,w
  5890  0F64  00AA               	movwf	??_printf
  5891  0F65  072A               	addwf	??_printf,w
  5892  0F66  3E12               	addlw	low (_dpowers| (0+32768))
  5893  0F67  0084               	movwf	4
  5894  0F68  3087               	movlw	high (_dpowers| (0+32768))
  5895  0F69  1803               	skipnc
  5896  0F6A  3E01               	addlw	1
  5897  0F6B  00FF               	movwf	btemp+1
  5898  0F6C  120A  118A  2700  120A  158A  	fcall	stringtab
  5899  0F71  00AB               	movwf	??_printf+1
  5900  0F72  120A  118A  2700  120A  158A  	fcall	stringtab
  5901  0F77  00AC               	movwf	??_printf+2
  5902  0F78  082C               	movf	??_printf+2,w
  5903  0F79  0234               	subwf	printf@val+1,w
  5904  0F7A  1D03               	skipz
  5905  0F7B  2F7E               	goto	u1895
  5906  0F7C  082B               	movf	??_printf+1,w
  5907  0F7D  0233               	subwf	printf@val,w
  5908  0F7E                     u1895:
  5909  0F7E  1803               	skipnc
  5910  0F7F  2F81               	goto	u1891
  5911  0F80  2F82               	goto	u1890
  5912  0F81                     u1891:
  5913  0F81  2F83               	goto	l3207
  5914  0F82                     u1890:
  5915  0F82  2F8D               	goto	l3209
  5916  0F83                     l3207:
  5917  0F83  3001               	movlw	1
  5918  0F84  00AA               	movwf	??_printf
  5919  0F85  082A               	movf	??_printf,w
  5920  0F86  07B5               	addwf	printf@c,f
  5921  0F87  3005               	movlw	5
  5922  0F88  0635               	xorwf	printf@c,w
  5923  0F89  1D03               	btfss	3,2
  5924  0F8A  2F8C               	goto	u1901
  5925  0F8B  2F8D               	goto	u1900
  5926  0F8C                     u1901:
  5927  0F8C  2F63               	goto	l3203
  5928  0F8D                     u1900:
  5929  0F8D                     l3209:
  5930                           
  5931                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  5932  0F8D  082E               	movf	printf@flag,w
  5933  0F8E  3903               	andlw	3
  5934  0F8F  1903               	btfsc	3,2
  5935  0F90  2F92               	goto	u1911
  5936  0F91  2F93               	goto	u1910
  5937  0F92                     u1911:
  5938  0F92  2F99               	goto	l3213
  5939  0F93                     u1910:
  5940  0F93                     l3211:
  5941                           
  5942                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1465:     (putch(
      +                          '-') );
  5943  0F93  302D               	movlw	45
  5944  0F94  160A  118A  2756  120A  158A  	fcall	_putch
  5945  0F99                     l3213:
  5946                           
  5947                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  5948  0F99  1283               	bcf	3,5	;RP0=0, select bank0
  5949  0F9A  1303               	bcf	3,6	;RP1=0, select bank0
  5950  0F9B  0835               	movf	printf@c,w
  5951  0F9C  00AA               	movwf	??_printf
  5952  0F9D  082A               	movf	??_printf,w
  5953  0F9E  00AF               	movwf	printf@prec
  5954                           
  5955                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  5956  0F9F  2FDA               	goto	l3219
  5957  0FA0                     l3215:
  5958                           
  5959                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  5960  0FA0  300A               	movlw	10
  5961  0FA1  00A0               	movwf	___lwmod@divisor
  5962  0FA2  3000               	movlw	0
  5963  0FA3  00A1               	movwf	___lwmod@divisor+1
  5964  0FA4  082F               	movf	printf@prec,w
  5965  0FA5  00AA               	movwf	??_printf
  5966  0FA6  072A               	addwf	??_printf,w
  5967  0FA7  3E12               	addlw	low (_dpowers| (0+32768))
  5968  0FA8  0084               	movwf	4
  5969  0FA9  3087               	movlw	high (_dpowers| (0+32768))
  5970  0FAA  1803               	skipnc
  5971  0FAB  3E01               	addlw	1
  5972  0FAC  00FF               	movwf	btemp+1
  5973  0FAD  120A  118A  2700  120A  158A  	fcall	stringtab
  5974  0FB2  00F2               	movwf	___lwdiv@divisor
  5975  0FB3  120A  118A  2700  120A  158A  	fcall	stringtab
  5976  0FB8  00F3               	movwf	___lwdiv@divisor+1
  5977  0FB9  0834               	movf	printf@val+1,w
  5978  0FBA  00F5               	movwf	___lwdiv@dividend+1
  5979  0FBB  0833               	movf	printf@val,w
  5980  0FBC  00F4               	movwf	___lwdiv@dividend
  5981  0FBD  120A  158A  2512  120A  158A  	fcall	___lwdiv
  5982  0FC2  0873               	movf	?___lwdiv+1,w
  5983  0FC3  1283               	bcf	3,5	;RP0=0, select bank0
  5984  0FC4  1303               	bcf	3,6	;RP1=0, select bank0
  5985  0FC5  00A3               	movwf	___lwmod@dividend+1
  5986  0FC6  0872               	movf	?___lwdiv,w
  5987  0FC7  00A2               	movwf	___lwmod@dividend
  5988  0FC8  120A  158A  241E  120A  158A  	fcall	___lwmod
  5989  0FCD  1283               	bcf	3,5	;RP0=0, select bank0
  5990  0FCE  1303               	bcf	3,6	;RP1=0, select bank0
  5991  0FCF  0820               	movf	?___lwmod,w
  5992  0FD0  3E30               	addlw	48
  5993  0FD1  00AB               	movwf	??_printf+1
  5994  0FD2  082B               	movf	??_printf+1,w
  5995  0FD3  00B5               	movwf	printf@c
  5996  0FD4                     l3217:
  5997                           
  5998                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1550:    (putch(c) );
  5999  0FD4  0835               	movf	printf@c,w
  6000  0FD5  160A  118A  2756  120A  158A  	fcall	_putch
  6001  0FDA                     l3219:
  6002                           
  6003                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  6004  0FDA  30FF               	movlw	255
  6005  0FDB  1283               	bcf	3,5	;RP0=0, select bank0
  6006  0FDC  1303               	bcf	3,6	;RP1=0, select bank0
  6007  0FDD  00AA               	movwf	??_printf
  6008  0FDE  082A               	movf	??_printf,w
  6009  0FDF  07AF               	addwf	printf@prec,f
  6010  0FE0  0A2F               	incf	printf@prec,w
  6011  0FE1  1D03               	btfss	3,2
  6012  0FE2  2FE4               	goto	u1921
  6013  0FE3  2FE5               	goto	u1920
  6014  0FE4                     u1921:
  6015  0FE4  2FA0               	goto	l3215
  6016  0FE5                     u1920:
  6017  0FE5                     l3221:
  6018                           
  6019                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  6020  0FE5  1283               	bcf	3,5	;RP0=0, select bank0
  6021  0FE6  1303               	bcf	3,6	;RP1=0, select bank0
  6022  0FE7  0827               	movf	printf@f+1,w
  6023  0FE8  00AB               	movwf	??_printf+1
  6024  0FE9  0826               	movf	printf@f,w
  6025  0FEA  00AA               	movwf	??_printf
  6026  0FEB  0AA6               	incf	printf@f,f
  6027  0FEC  1903               	skipnz
  6028  0FED  0AA7               	incf	printf@f+1,f
  6029  0FEE  082B               	movf	??_printf+1,w
  6030  0FEF  00FF               	movwf	btemp+1
  6031  0FF0  082A               	movf	??_printf,w
  6032  0FF1  0084               	movwf	4
  6033  0FF2  120A  118A  2700  120A  158A  	fcall	stringtab
  6034  0FF7  00AC               	movwf	??_printf+2
  6035  0FF8  082C               	movf	??_printf+2,w
  6036  0FF9  00B5               	movwf	printf@c
  6037  0FFA  0835               	movf	printf@c,w
  6038  0FFB  1D03               	btfss	3,2
  6039  0FFC  2FFE               	goto	u1931
  6040  0FFD  2FFF               	goto	u1930
  6041  0FFE                     u1931:
  6042  0FFE  2EC3               	goto	l3157
  6043  0FFF                     u1930:
  6044  0FFF                     l453:
  6045  0FFF  0008               	return
  6046  1000                     __end_of_printf:
  6047                           
  6048                           	psect	text27
  6049  1756                     __ptext27:	
  6050 ;; *************** function _putch *****************
  6051 ;; Defined at:
  6052 ;;		line 55 in file "main.c"
  6053 ;; Parameters:    Size  Location     Type
  6054 ;;  dado            1    wreg     unsigned char 
  6055 ;; Auto vars:     Size  Location     Type
  6056 ;;  dado            1    8[COMMON] unsigned char 
  6057 ;; Return value:  Size  Location     Type
  6058 ;;                  1    wreg      void 
  6059 ;; Registers used:
  6060 ;;		wreg, status,2, status,0, pclath, cstack
  6061 ;; Tracked objects:
  6062 ;;		On entry : 0/0
  6063 ;;		On exit  : 0/0
  6064 ;;		Unchanged: 0/0
  6065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6066 ;;      Params:         0       0       0       0       0
  6067 ;;      Locals:         1       0       0       0       0
  6068 ;;      Temps:          0       0       0       0       0
  6069 ;;      Totals:         1       0       0       0       0
  6070 ;;Total ram usage:        1 bytes
  6071 ;; Hardware stack levels used: 1
  6072 ;; Hardware stack levels required when called: 6
  6073 ;; This function calls:
  6074 ;;		_lcd_char
  6075 ;; This function is called by:
  6076 ;;		_printf
  6077 ;; This function uses a non-reentrant model
  6078 ;;
  6079                           
  6080                           
  6081                           ;psect for function _putch
  6082  1756                     _putch:
  6083                           
  6084                           ;incstack = 0
  6085 ;; hardware stack exceeded
  6086                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  6087                           ;putch@dado stored from wreg
  6088  1756  00F8               	movwf	putch@dado
  6089  1757                     l2337:
  6090                           
  6091                           ;main.c: 55: void putch(char dado);main.c: 56: {;main.c: 57:     lcd_char(dado);
  6092  1757  0878               	movf	putch@dado,w
  6093  1758  160A  118A  27BC  160A  118A  	fcall	_lcd_char
  6094  175D                     l167:
  6095  175D  0008               	return
  6096  175E                     __end_of_putch:
  6097                           
  6098                           	psect	text28
  6099  17BC                     __ptext28:	
  6100 ;; *************** function _lcd_char *****************
  6101 ;; Defined at:
  6102 ;;		line 119 in file "lcd.c"
  6103 ;; Parameters:    Size  Location     Type
  6104 ;;  data            1    wreg     unsigned char 
  6105 ;; Auto vars:     Size  Location     Type
  6106 ;;  data            1    7[COMMON] unsigned char 
  6107 ;; Return value:  Size  Location     Type
  6108 ;;                  1    wreg      void 
  6109 ;; Registers used:
  6110 ;;		wreg, status,2, status,0, pclath, cstack
  6111 ;; Tracked objects:
  6112 ;;		On entry : 0/0
  6113 ;;		On exit  : 0/0
  6114 ;;		Unchanged: 0/0
  6115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6116 ;;      Params:         0       0       0       0       0
  6117 ;;      Locals:         1       0       0       0       0
  6118 ;;      Temps:          0       0       0       0       0
  6119 ;;      Totals:         1       0       0       0       0
  6120 ;;Total ram usage:        1 bytes
  6121 ;; Hardware stack levels used: 1
  6122 ;; Hardware stack levels required when called: 5
  6123 ;; This function calls:
  6124 ;;		_lcd_byte_4bits
  6125 ;;		_lcd_byte_8bits
  6126 ;;		_lcd_delay_40us
  6127 ;; This function is called by:
  6128 ;;		_putch
  6129 ;;		_lcd_puts
  6130 ;; This function uses a non-reentrant model
  6131 ;;
  6132                           
  6133                           
  6134                           ;psect for function _lcd_char
  6135  17BC                     _lcd_char:
  6136                           
  6137                           ;incstack = 0
  6138 ;; hardware stack exceeded
  6139                           ; Regs used in _lcd_char: [wreg+status,2+status,0+pclath+cstack]
  6140                           ;lcd_char@data stored from wreg
  6141  17BC  00F7               	movwf	lcd_char@data
  6142  17BD                     l2263:
  6143                           
  6144                           ;lcd.c: 123:     if (8 == 8)
  6145  17BD  1283               	bcf	3,5	;RP0=0, select bank0
  6146  17BE  1303               	bcf	3,6	;RP1=0, select bank0
  6147  17BF  1409               	bsf	9,0	;volatile
  6148  17C0                     l2265:
  6149                           
  6150                           ;lcd.c: 124:         lcd_byte_8bits(data);
  6151  17C0  0877               	movf	lcd_char@data,w
  6152  17C1  160A  118A  277B  160A  118A  	fcall	_lcd_byte_8bits
  6153  17C6                     l302:
  6154                           
  6155                           ;lcd.c: 128:     lcd_delay_40us();
  6156  17C6  160A  118A  274A  160A  118A  	fcall	_lcd_delay_40us
  6157  17CB                     l303:
  6158  17CB  0008               	return
  6159  17CC                     __end_of_lcd_char:
  6160                           
  6161                           	psect	text29
  6162  0C1E                     __ptext29:	
  6163 ;; *************** function ___lwmod *****************
  6164 ;; Defined at:
  6165 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
  6166 ;; Parameters:    Size  Location     Type
  6167 ;;  divisor         2    0[BANK0 ] unsigned int 
  6168 ;;  dividend        2    2[BANK0 ] unsigned int 
  6169 ;; Auto vars:     Size  Location     Type
  6170 ;;  counter         1    5[BANK0 ] unsigned char 
  6171 ;; Return value:  Size  Location     Type
  6172 ;;                  2    0[BANK0 ] unsigned int 
  6173 ;; Registers used:
  6174 ;;		wreg, status,2, status,0
  6175 ;; Tracked objects:
  6176 ;;		On entry : 0/0
  6177 ;;		On exit  : 0/0
  6178 ;;		Unchanged: 0/0
  6179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6180 ;;      Params:         0       4       0       0       0
  6181 ;;      Locals:         0       1       0       0       0
  6182 ;;      Temps:          0       1       0       0       0
  6183 ;;      Totals:         0       6       0       0       0
  6184 ;;Total ram usage:        6 bytes
  6185 ;; Hardware stack levels used: 1
  6186 ;; Hardware stack levels required when called: 1
  6187 ;; This function calls:
  6188 ;;		Nothing
  6189 ;; This function is called by:
  6190 ;;		_printf
  6191 ;;		_utoa
  6192 ;; This function uses a non-reentrant model
  6193 ;;
  6194                           
  6195                           
  6196                           ;psect for function ___lwmod
  6197  0C1E                     ___lwmod:
  6198  0C1E                     l3071:	
  6199                           ;incstack = 0
  6200                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  6201                           
  6202  0C1E  1283               	bcf	3,5	;RP0=0, select bank0
  6203  0C1F  1303               	bcf	3,6	;RP1=0, select bank0
  6204  0C20  0820               	movf	___lwmod@divisor,w
  6205  0C21  0421               	iorwf	___lwmod@divisor+1,w
  6206  0C22  1903               	btfsc	3,2
  6207  0C23  2C25               	goto	u1751
  6208  0C24  2C26               	goto	u1750
  6209  0C25                     u1751:
  6210  0C25  2C55               	goto	l3089
  6211  0C26                     u1750:
  6212  0C26                     l3073:
  6213  0C26  01A5               	clrf	___lwmod@counter
  6214  0C27  0AA5               	incf	___lwmod@counter,f
  6215  0C28  2C34               	goto	l3079
  6216  0C29                     l3075:
  6217  0C29  3001               	movlw	1
  6218  0C2A                     u1765:
  6219  0C2A  1003               	clrc
  6220  0C2B  0DA0               	rlf	___lwmod@divisor,f
  6221  0C2C  0DA1               	rlf	___lwmod@divisor+1,f
  6222  0C2D  3EFF               	addlw	-1
  6223  0C2E  1D03               	skipz
  6224  0C2F  2C2A               	goto	u1765
  6225  0C30                     l3077:
  6226  0C30  3001               	movlw	1
  6227  0C31  00A4               	movwf	??___lwmod
  6228  0C32  0824               	movf	??___lwmod,w
  6229  0C33  07A5               	addwf	___lwmod@counter,f
  6230  0C34                     l3079:
  6231  0C34  1FA1               	btfss	___lwmod@divisor+1,7
  6232  0C35  2C37               	goto	u1771
  6233  0C36  2C38               	goto	u1770
  6234  0C37                     u1771:
  6235  0C37  2C29               	goto	l3075
  6236  0C38                     u1770:
  6237  0C38                     l3081:
  6238  0C38  0821               	movf	___lwmod@divisor+1,w
  6239  0C39  0223               	subwf	___lwmod@dividend+1,w
  6240  0C3A  1D03               	skipz
  6241  0C3B  2C3E               	goto	u1785
  6242  0C3C  0820               	movf	___lwmod@divisor,w
  6243  0C3D  0222               	subwf	___lwmod@dividend,w
  6244  0C3E                     u1785:
  6245  0C3E  1C03               	skipc
  6246  0C3F  2C41               	goto	u1781
  6247  0C40  2C42               	goto	u1780
  6248  0C41                     u1781:
  6249  0C41  2C48               	goto	l3085
  6250  0C42                     u1780:
  6251  0C42                     l3083:
  6252  0C42  0820               	movf	___lwmod@divisor,w
  6253  0C43  02A2               	subwf	___lwmod@dividend,f
  6254  0C44  0821               	movf	___lwmod@divisor+1,w
  6255  0C45  1C03               	skipc
  6256  0C46  03A3               	decf	___lwmod@dividend+1,f
  6257  0C47  02A3               	subwf	___lwmod@dividend+1,f
  6258  0C48                     l3085:
  6259  0C48  3001               	movlw	1
  6260  0C49                     u1795:
  6261  0C49  1003               	clrc
  6262  0C4A  0CA1               	rrf	___lwmod@divisor+1,f
  6263  0C4B  0CA0               	rrf	___lwmod@divisor,f
  6264  0C4C  3EFF               	addlw	-1
  6265  0C4D  1D03               	skipz
  6266  0C4E  2C49               	goto	u1795
  6267  0C4F                     l3087:
  6268  0C4F  3001               	movlw	1
  6269  0C50  02A5               	subwf	___lwmod@counter,f
  6270  0C51  1D03               	btfss	3,2
  6271  0C52  2C54               	goto	u1801
  6272  0C53  2C55               	goto	u1800
  6273  0C54                     u1801:
  6274  0C54  2C38               	goto	l3081
  6275  0C55                     u1800:
  6276  0C55                     l3089:
  6277  0C55  0823               	movf	___lwmod@dividend+1,w
  6278  0C56  00A1               	movwf	?___lwmod+1
  6279  0C57  0822               	movf	___lwmod@dividend,w
  6280  0C58  00A0               	movwf	?___lwmod
  6281  0C59                     l739:
  6282  0C59  0008               	return
  6283  0C5A                     __end_of___lwmod:
  6284                           
  6285                           	psect	text30
  6286  0D12                     __ptext30:	
  6287 ;; *************** function ___lwdiv *****************
  6288 ;; Defined at:
  6289 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  6290 ;; Parameters:    Size  Location     Type
  6291 ;;  divisor         2    2[COMMON] unsigned int 
  6292 ;;  dividend        2    4[COMMON] unsigned int 
  6293 ;; Auto vars:     Size  Location     Type
  6294 ;;  quotient        2    7[COMMON] unsigned int 
  6295 ;;  counter         1    9[COMMON] unsigned char 
  6296 ;; Return value:  Size  Location     Type
  6297 ;;                  2    2[COMMON] unsigned int 
  6298 ;; Registers used:
  6299 ;;		wreg, status,2, status,0
  6300 ;; Tracked objects:
  6301 ;;		On entry : 0/0
  6302 ;;		On exit  : 0/0
  6303 ;;		Unchanged: 0/0
  6304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6305 ;;      Params:         4       0       0       0       0
  6306 ;;      Locals:         3       0       0       0       0
  6307 ;;      Temps:          1       0       0       0       0
  6308 ;;      Totals:         8       0       0       0       0
  6309 ;;Total ram usage:        8 bytes
  6310 ;; Hardware stack levels used: 1
  6311 ;; Hardware stack levels required when called: 1
  6312 ;; This function calls:
  6313 ;;		Nothing
  6314 ;; This function is called by:
  6315 ;;		_printf
  6316 ;;		_utoa
  6317 ;; This function uses a non-reentrant model
  6318 ;;
  6319                           
  6320                           
  6321                           ;psect for function ___lwdiv
  6322  0D12                     ___lwdiv:
  6323  0D12                     l2289:	
  6324                           ;incstack = 0
  6325                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  6326                           
  6327  0D12  01F7               	clrf	___lwdiv@quotient
  6328  0D13  01F8               	clrf	___lwdiv@quotient+1
  6329  0D14                     l2291:
  6330  0D14  0872               	movf	___lwdiv@divisor,w
  6331  0D15  0473               	iorwf	___lwdiv@divisor+1,w
  6332  0D16  1903               	btfsc	3,2
  6333  0D17  2D19               	goto	u1041
  6334  0D18  2D1A               	goto	u1040
  6335  0D19                     u1041:
  6336  0D19  2D51               	goto	l2311
  6337  0D1A                     u1040:
  6338  0D1A                     l2293:
  6339  0D1A  01F9               	clrf	___lwdiv@counter
  6340  0D1B  0AF9               	incf	___lwdiv@counter,f
  6341  0D1C  2D28               	goto	l2299
  6342  0D1D                     l2295:
  6343  0D1D  3001               	movlw	1
  6344  0D1E                     u1055:
  6345  0D1E  1003               	clrc
  6346  0D1F  0DF2               	rlf	___lwdiv@divisor,f
  6347  0D20  0DF3               	rlf	___lwdiv@divisor+1,f
  6348  0D21  3EFF               	addlw	-1
  6349  0D22  1D03               	skipz
  6350  0D23  2D1E               	goto	u1055
  6351  0D24                     l2297:
  6352  0D24  3001               	movlw	1
  6353  0D25  00F6               	movwf	??___lwdiv
  6354  0D26  0876               	movf	??___lwdiv,w
  6355  0D27  07F9               	addwf	___lwdiv@counter,f
  6356  0D28                     l2299:
  6357  0D28  1FF3               	btfss	___lwdiv@divisor+1,7
  6358  0D29  2D2B               	goto	u1061
  6359  0D2A  2D2C               	goto	u1060
  6360  0D2B                     u1061:
  6361  0D2B  2D1D               	goto	l2295
  6362  0D2C                     u1060:
  6363  0D2C                     l2301:
  6364  0D2C  3001               	movlw	1
  6365  0D2D                     u1075:
  6366  0D2D  1003               	clrc
  6367  0D2E  0DF7               	rlf	___lwdiv@quotient,f
  6368  0D2F  0DF8               	rlf	___lwdiv@quotient+1,f
  6369  0D30  3EFF               	addlw	-1
  6370  0D31  1D03               	skipz
  6371  0D32  2D2D               	goto	u1075
  6372  0D33  0873               	movf	___lwdiv@divisor+1,w
  6373  0D34  0275               	subwf	___lwdiv@dividend+1,w
  6374  0D35  1D03               	skipz
  6375  0D36  2D39               	goto	u1085
  6376  0D37  0872               	movf	___lwdiv@divisor,w
  6377  0D38  0274               	subwf	___lwdiv@dividend,w
  6378  0D39                     u1085:
  6379  0D39  1C03               	skipc
  6380  0D3A  2D3C               	goto	u1081
  6381  0D3B  2D3D               	goto	u1080
  6382  0D3C                     u1081:
  6383  0D3C  2D44               	goto	l2307
  6384  0D3D                     u1080:
  6385  0D3D                     l2303:
  6386  0D3D  0872               	movf	___lwdiv@divisor,w
  6387  0D3E  02F4               	subwf	___lwdiv@dividend,f
  6388  0D3F  0873               	movf	___lwdiv@divisor+1,w
  6389  0D40  1C03               	skipc
  6390  0D41  03F5               	decf	___lwdiv@dividend+1,f
  6391  0D42  02F5               	subwf	___lwdiv@dividend+1,f
  6392  0D43                     l2305:
  6393  0D43  1477               	bsf	___lwdiv@quotient,0
  6394  0D44                     l2307:
  6395  0D44  3001               	movlw	1
  6396  0D45                     u1095:
  6397  0D45  1003               	clrc
  6398  0D46  0CF3               	rrf	___lwdiv@divisor+1,f
  6399  0D47  0CF2               	rrf	___lwdiv@divisor,f
  6400  0D48  3EFF               	addlw	-1
  6401  0D49  1D03               	skipz
  6402  0D4A  2D45               	goto	u1095
  6403  0D4B                     l2309:
  6404  0D4B  3001               	movlw	1
  6405  0D4C  02F9               	subwf	___lwdiv@counter,f
  6406  0D4D  1D03               	btfss	3,2
  6407  0D4E  2D50               	goto	u1101
  6408  0D4F  2D51               	goto	u1100
  6409  0D50                     u1101:
  6410  0D50  2D2C               	goto	l2301
  6411  0D51                     u1100:
  6412  0D51                     l2311:
  6413  0D51  0878               	movf	___lwdiv@quotient+1,w
  6414  0D52  00F3               	movwf	?___lwdiv+1
  6415  0D53  0877               	movf	___lwdiv@quotient,w
  6416  0D54  00F2               	movwf	?___lwdiv
  6417  0D55                     l729:
  6418  0D55  0008               	return
  6419  0D56                     __end_of___lwdiv:
  6420                           
  6421                           	psect	text31
  6422  0BE3                     __ptext31:	
  6423 ;; *************** function _lcd_goto *****************
  6424 ;; Defined at:
  6425 ;;		line 204 in file "lcd.c"
  6426 ;; Parameters:    Size  Location     Type
  6427 ;;  lin             1    wreg     unsigned char 
  6428 ;;  col             1    8[COMMON] unsigned char 
  6429 ;; Auto vars:     Size  Location     Type
  6430 ;;  lin             1    9[COMMON] unsigned char 
  6431 ;; Return value:  Size  Location     Type
  6432 ;;                  1    wreg      void 
  6433 ;; Registers used:
  6434 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6435 ;; Tracked objects:
  6436 ;;		On entry : 0/0
  6437 ;;		On exit  : 0/0
  6438 ;;		Unchanged: 0/0
  6439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6440 ;;      Params:         1       0       0       0       0
  6441 ;;      Locals:         1       0       0       0       0
  6442 ;;      Temps:          0       2       0       0       0
  6443 ;;      Totals:         2       2       0       0       0
  6444 ;;Total ram usage:        4 bytes
  6445 ;; Hardware stack levels used: 1
  6446 ;; Hardware stack levels required when called: 6
  6447 ;; This function calls:
  6448 ;;		_lcd_cmd
  6449 ;; This function is called by:
  6450 ;;		_show_ad
  6451 ;;		_stdlib_testing
  6452 ;;		_math_testing
  6453 ;;		_ctype_testing
  6454 ;;		_string_testing
  6455 ;; This function uses a non-reentrant model
  6456 ;;
  6457                           
  6458                           
  6459                           ;psect for function _lcd_goto
  6460  0BE3                     _lcd_goto:
  6461                           
  6462                           ;incstack = 0
  6463                           ; Regs used in _lcd_goto: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6464                           ;lcd_goto@lin stored from wreg
  6465  0BE3  00F9               	movwf	lcd_goto@lin
  6466  0BE4                     l3137:
  6467                           
  6468                           ;lcd.c: 204: void lcd_goto(unsigned char lin, unsigned char col);lcd.c: 205: {;lcd.c: 20
      +                          6:     switch(lin)
  6469  0BE4  2C05               	goto	l3149
  6470  0BE5                     l3139:
  6471                           
  6472                           ;lcd.c: 209:         {;lcd.c: 210:             lcd_cmd(0x80+col);
  6473  0BE5  0878               	movf	lcd_goto@col,w
  6474  0BE6  3E80               	addlw	128
  6475  0BE7  160A  118A  27AC  120A  158A  	fcall	_lcd_cmd
  6476                           
  6477                           ;lcd.c: 211:             break;
  6478  0BEC  2C1D               	goto	l335
  6479  0BED                     l3141:
  6480                           
  6481                           ;lcd.c: 214:         {;lcd.c: 215:             lcd_cmd(0xc0+col);
  6482  0BED  0878               	movf	lcd_goto@col,w
  6483  0BEE  3EC0               	addlw	192
  6484  0BEF  160A  118A  27AC  120A  158A  	fcall	_lcd_cmd
  6485                           
  6486                           ;lcd.c: 216:             break;
  6487  0BF4  2C1D               	goto	l335
  6488  0BF5                     l3143:
  6489                           
  6490                           ;lcd.c: 219:         {;lcd.c: 220:             lcd_cmd(0x90+col);
  6491  0BF5  0878               	movf	lcd_goto@col,w
  6492  0BF6  3E90               	addlw	144
  6493  0BF7  160A  118A  27AC  120A  158A  	fcall	_lcd_cmd
  6494                           
  6495                           ;lcd.c: 221:             break;
  6496  0BFC  2C1D               	goto	l335
  6497  0BFD                     l3145:
  6498                           
  6499                           ;lcd.c: 224:         {;lcd.c: 225:             lcd_cmd(0xd0+col);
  6500  0BFD  0878               	movf	lcd_goto@col,w
  6501  0BFE  3ED0               	addlw	208
  6502  0BFF  160A  118A  27AC  120A  158A  	fcall	_lcd_cmd
  6503                           
  6504                           ;lcd.c: 226:             break;
  6505  0C04  2C1D               	goto	l335
  6506  0C05                     l3149:
  6507  0C05  0879               	movf	lcd_goto@lin,w
  6508  0C06  1283               	bcf	3,5	;RP0=0, select bank0
  6509  0C07  1303               	bcf	3,6	;RP1=0, select bank0
  6510  0C08  00A0               	movwf	??_lcd_goto
  6511  0C09  01A1               	clrf	??_lcd_goto+1
  6512                           
  6513                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6514                           ; Switch size 1, requested type "simple"
  6515                           ; Number of cases is 1, Range of values is 0 to 0
  6516                           ; switch strategies available:
  6517                           ; Name         Instructions Cycles
  6518                           ; simple_byte            4     3 (average)
  6519                           ; direct_byte           11     8 (fixed)
  6520                           ; jumptable            260     6 (fixed)
  6521                           ;	Chosen strategy is simple_byte
  6522  0C0A  0821               	movf	??_lcd_goto+1,w
  6523  0C0B  3A00               	xorlw	0	; case 0
  6524  0C0C  1903               	skipnz
  6525  0C0D  2C0F               	goto	l3557
  6526  0C0E  2C1D               	goto	l335
  6527  0C0F                     l3557:
  6528                           
  6529                           ; Switch size 1, requested type "simple"
  6530                           ; Number of cases is 4, Range of values is 1 to 4
  6531                           ; switch strategies available:
  6532                           ; Name         Instructions Cycles
  6533                           ; simple_byte           13     7 (average)
  6534                           ; direct_byte           23    11 (fixed)
  6535                           ; jumptable            263     9 (fixed)
  6536                           ;	Chosen strategy is simple_byte
  6537  0C0F  0820               	movf	??_lcd_goto,w
  6538  0C10  3A01               	xorlw	1	; case 1
  6539  0C11  1903               	skipnz
  6540  0C12  2BE5               	goto	l3139
  6541  0C13  3A03               	xorlw	3	; case 2
  6542  0C14  1903               	skipnz
  6543  0C15  2BED               	goto	l3141
  6544  0C16  3A01               	xorlw	1	; case 3
  6545  0C17  1903               	skipnz
  6546  0C18  2BF5               	goto	l3143
  6547  0C19  3A07               	xorlw	7	; case 4
  6548  0C1A  1903               	skipnz
  6549  0C1B  2BFD               	goto	l3145
  6550  0C1C  2C1D               	goto	l335
  6551  0C1D                     l335:
  6552  0C1D  0008               	return
  6553  0C1E                     __end_of_lcd_goto:
  6554                           
  6555                           	psect	text32
  6556  1786                     __ptext32:	
  6557 ;; *************** function _lcd_clear *****************
  6558 ;; Defined at:
  6559 ;;		line 192 in file "lcd.c"
  6560 ;; Parameters:    Size  Location     Type
  6561 ;;		None
  6562 ;; Auto vars:     Size  Location     Type
  6563 ;;		None
  6564 ;; Return value:  Size  Location     Type
  6565 ;;                  1    wreg      void 
  6566 ;; Registers used:
  6567 ;;		wreg, status,2, status,0, pclath, cstack
  6568 ;; Tracked objects:
  6569 ;;		On entry : 0/0
  6570 ;;		On exit  : 0/0
  6571 ;;		Unchanged: 0/0
  6572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6573 ;;      Params:         0       0       0       0       0
  6574 ;;      Locals:         0       0       0       0       0
  6575 ;;      Temps:          0       0       0       0       0
  6576 ;;      Totals:         0       0       0       0       0
  6577 ;;Total ram usage:        0 bytes
  6578 ;; Hardware stack levels used: 1
  6579 ;; Hardware stack levels required when called: 6
  6580 ;; This function calls:
  6581 ;;		_lcd_cmd
  6582 ;;		_lcd_delay_2ms
  6583 ;; This function is called by:
  6584 ;;		_show_ad
  6585 ;;		_stdlib_testing
  6586 ;;		_math_testing
  6587 ;;		_ctype_testing
  6588 ;;		_string_testing
  6589 ;;		_lcd_init_8bits
  6590 ;;		_lcd_init_4bits
  6591 ;;		_lcd_shutdown
  6592 ;; This function uses a non-reentrant model
  6593 ;;
  6594                           
  6595                           
  6596                           ;psect for function _lcd_clear
  6597  1786                     _lcd_clear:
  6598  1786                     l2339:	
  6599                           ;incstack = 0
  6600                           ; Regs used in _lcd_clear: [wreg+status,2+status,0+pclath+cstack]
  6601                           
  6602                           
  6603                           ;lcd.c: 194:     lcd_cmd(0x01);
  6604  1786  3001               	movlw	1
  6605  1787  160A  118A  27AC  160A  118A  	fcall	_lcd_cmd
  6606                           
  6607                           ;lcd.c: 195:     lcd_delay_2ms();
  6608  178C  160A  118A  2766  160A  118A  	fcall	_lcd_delay_2ms
  6609  1791                     l323:
  6610  1791  0008               	return
  6611  1792                     __end_of_lcd_clear:
  6612                           
  6613                           	psect	text33
  6614  1766                     __ptext33:	
  6615 ;; *************** function _lcd_delay_2ms *****************
  6616 ;; Defined at:
  6617 ;;		line 61 in file "lcd.c"
  6618 ;; Parameters:    Size  Location     Type
  6619 ;;		None
  6620 ;; Auto vars:     Size  Location     Type
  6621 ;;		None
  6622 ;; Return value:  Size  Location     Type
  6623 ;;                  1    wreg      void 
  6624 ;; Registers used:
  6625 ;;		wreg
  6626 ;; Tracked objects:
  6627 ;;		On entry : 0/0
  6628 ;;		On exit  : 0/0
  6629 ;;		Unchanged: 0/0
  6630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6631 ;;      Params:         0       0       0       0       0
  6632 ;;      Locals:         0       0       0       0       0
  6633 ;;      Temps:          2       0       0       0       0
  6634 ;;      Totals:         2       0       0       0       0
  6635 ;;Total ram usage:        2 bytes
  6636 ;; Hardware stack levels used: 1
  6637 ;; Hardware stack levels required when called: 1
  6638 ;; This function calls:
  6639 ;;		Nothing
  6640 ;; This function is called by:
  6641 ;;		_lcd_init_8bits
  6642 ;;		_lcd_init_4bits
  6643 ;;		_lcd_clear
  6644 ;; This function uses a non-reentrant model
  6645 ;;
  6646                           
  6647                           
  6648                           ;psect for function _lcd_delay_2ms
  6649  1766                     _lcd_delay_2ms:
  6650  1766                     l2281:	
  6651                           ;incstack = 0
  6652                           ; Regs used in _lcd_delay_2ms: [wreg]
  6653                           
  6654  1766  300D               	movlw	13
  6655  1767  00F3               	movwf	??_lcd_delay_2ms+1
  6656  1768  30FB               	movlw	251
  6657  1769  00F2               	movwf	??_lcd_delay_2ms
  6658  176A                     u2227:
  6659  176A  0BF2               	decfsz	??_lcd_delay_2ms,f
  6660  176B  2F6A               	goto	u2227
  6661  176C  0BF3               	decfsz	??_lcd_delay_2ms+1,f
  6662  176D  2F6A               	goto	u2227
  6663  176E  2F6F               	nop2
  6664  176F                     l270:
  6665  176F  0008               	return
  6666  1770                     __end_of_lcd_delay_2ms:
  6667                           
  6668                           	psect	text34
  6669  17AC                     __ptext34:	
  6670 ;; *************** function _lcd_cmd *****************
  6671 ;; Defined at:
  6672 ;;		line 107 in file "lcd.c"
  6673 ;; Parameters:    Size  Location     Type
  6674 ;;  data            1    wreg     unsigned char 
  6675 ;; Auto vars:     Size  Location     Type
  6676 ;;  data            1    7[COMMON] unsigned char 
  6677 ;; Return value:  Size  Location     Type
  6678 ;;                  1    wreg      void 
  6679 ;; Registers used:
  6680 ;;		wreg, status,2, status,0, pclath, cstack
  6681 ;; Tracked objects:
  6682 ;;		On entry : 0/0
  6683 ;;		On exit  : 0/0
  6684 ;;		Unchanged: 0/0
  6685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6686 ;;      Params:         0       0       0       0       0
  6687 ;;      Locals:         1       0       0       0       0
  6688 ;;      Temps:          0       0       0       0       0
  6689 ;;      Totals:         1       0       0       0       0
  6690 ;;Total ram usage:        1 bytes
  6691 ;; Hardware stack levels used: 1
  6692 ;; Hardware stack levels required when called: 5
  6693 ;; This function calls:
  6694 ;;		_lcd_byte_4bits
  6695 ;;		_lcd_byte_8bits
  6696 ;;		_lcd_delay_40us
  6697 ;; This function is called by:
  6698 ;;		_lcd_init_8bits
  6699 ;;		_lcd_init_4bits
  6700 ;;		_lcd_clear
  6701 ;;		_lcd_goto
  6702 ;;		_lcd_shutdown
  6703 ;; This function uses a non-reentrant model
  6704 ;;
  6705                           
  6706                           
  6707                           ;psect for function _lcd_cmd
  6708  17AC                     _lcd_cmd:
  6709                           
  6710                           ;incstack = 0
  6711                           ; Regs used in _lcd_cmd: [wreg+status,2+status,0+pclath+cstack]
  6712                           ;lcd_cmd@data stored from wreg
  6713  17AC  00F7               	movwf	lcd_cmd@data
  6714  17AD                     l2283:
  6715                           
  6716                           ;lcd.c: 111:     if (8 == 8)
  6717  17AD  1283               	bcf	3,5	;RP0=0, select bank0
  6718  17AE  1303               	bcf	3,6	;RP1=0, select bank0
  6719  17AF  1009               	bcf	9,0	;volatile
  6720  17B0                     l2285:
  6721                           
  6722                           ;lcd.c: 112:         lcd_byte_8bits(data);
  6723  17B0  0877               	movf	lcd_cmd@data,w
  6724  17B1  160A  118A  277B  160A  118A  	fcall	_lcd_byte_8bits
  6725  17B6                     l297:
  6726                           
  6727                           ;lcd.c: 116:     lcd_delay_40us();
  6728  17B6  160A  118A  274A  160A  118A  	fcall	_lcd_delay_40us
  6729  17BB                     l298:
  6730  17BB  0008               	return
  6731  17BC                     __end_of_lcd_cmd:
  6732                           
  6733                           	psect	text35
  6734  174A                     __ptext35:	
  6735 ;; *************** function _lcd_delay_40us *****************
  6736 ;; Defined at:
  6737 ;;		line 60 in file "lcd.c"
  6738 ;; Parameters:    Size  Location     Type
  6739 ;;		None
  6740 ;; Auto vars:     Size  Location     Type
  6741 ;;		None
  6742 ;; Return value:  Size  Location     Type
  6743 ;;                  1    wreg      void 
  6744 ;; Registers used:
  6745 ;;		wreg
  6746 ;; Tracked objects:
  6747 ;;		On entry : 0/0
  6748 ;;		On exit  : 0/0
  6749 ;;		Unchanged: 0/0
  6750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6751 ;;      Params:         0       0       0       0       0
  6752 ;;      Locals:         0       0       0       0       0
  6753 ;;      Temps:          1       0       0       0       0
  6754 ;;      Totals:         1       0       0       0       0
  6755 ;;Total ram usage:        1 bytes
  6756 ;; Hardware stack levels used: 1
  6757 ;; Hardware stack levels required when called: 1
  6758 ;; This function calls:
  6759 ;;		Nothing
  6760 ;; This function is called by:
  6761 ;;		_lcd_cmd
  6762 ;;		_lcd_char
  6763 ;; This function uses a non-reentrant model
  6764 ;;
  6765                           
  6766                           
  6767                           ;psect for function _lcd_delay_40us
  6768  174A                     _lcd_delay_40us:
  6769  174A                     l2249:	
  6770                           ;incstack = 0
  6771                           ; Regs used in _lcd_delay_40us: [wreg]
  6772                           
  6773  174A  3042               	movlw	66
  6774  174B  00F2               	movwf	??_lcd_delay_40us
  6775  174C                     u2237:
  6776  174C  0BF2               	decfsz	??_lcd_delay_40us,f
  6777  174D  2F4C               	goto	u2237
  6778  174E  0000               	nop
  6779  174F                     l267:
  6780  174F  0008               	return
  6781  1750                     __end_of_lcd_delay_40us:
  6782                           
  6783                           	psect	text36
  6784  177B                     __ptext36:	
  6785 ;; *************** function _lcd_byte_8bits *****************
  6786 ;; Defined at:
  6787 ;;		line 101 in file "lcd.c"
  6788 ;; Parameters:    Size  Location     Type
  6789 ;;  data            1    wreg     unsigned char 
  6790 ;; Auto vars:     Size  Location     Type
  6791 ;;  data            1    2[COMMON] unsigned char 
  6792 ;; Return value:  Size  Location     Type
  6793 ;;                  1    wreg      void 
  6794 ;; Registers used:
  6795 ;;		wreg, status,2, status,0, pclath, cstack
  6796 ;; Tracked objects:
  6797 ;;		On entry : 0/0
  6798 ;;		On exit  : 0/0
  6799 ;;		Unchanged: 0/0
  6800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6801 ;;      Params:         0       0       0       0       0
  6802 ;;      Locals:         1       0       0       0       0
  6803 ;;      Temps:          0       0       0       0       0
  6804 ;;      Totals:         1       0       0       0       0
  6805 ;;Total ram usage:        1 bytes
  6806 ;; Hardware stack levels used: 1
  6807 ;; Hardware stack levels required when called: 3
  6808 ;; This function calls:
  6809 ;;		_lcd_en_pulse
  6810 ;; This function is called by:
  6811 ;;		_lcd_cmd
  6812 ;;		_lcd_char
  6813 ;; This function uses a non-reentrant model
  6814 ;;
  6815                           
  6816                           
  6817                           ;psect for function _lcd_byte_8bits
  6818  177B                     _lcd_byte_8bits:
  6819                           
  6820                           ;incstack = 0
  6821                           ; Regs used in _lcd_byte_8bits: [wreg+status,2+status,0+pclath+cstack]
  6822                           ;lcd_byte_8bits@data stored from wreg
  6823  177B  00F2               	movwf	lcd_byte_8bits@data
  6824  177C                     l2259:
  6825                           
  6826                           ;lcd.c: 101: void lcd_byte_8bits(unsigned char data);lcd.c: 102: {;lcd.c: 103:  PORTD = 
      +                          data;
  6827  177C  0872               	movf	lcd_byte_8bits@data,w
  6828  177D  1283               	bcf	3,5	;RP0=0, select bank0
  6829  177E  1303               	bcf	3,6	;RP1=0, select bank0
  6830  177F  0088               	movwf	8	;volatile
  6831  1780                     l2261:
  6832                           
  6833                           ;lcd.c: 104:     lcd_en_pulse();
  6834  1780  120A  158A  20BD  160A  118A  	fcall	_lcd_en_pulse
  6835  1785                     l293:
  6836  1785  0008               	return
  6837  1786                     __end_of_lcd_byte_8bits:
  6838                           
  6839                           	psect	text37
  6840  09F7                     __ptext37:	
  6841 ;; *************** function _lcd_byte_4bits *****************
  6842 ;; Defined at:
  6843 ;;		line 88 in file "lcd.c"
  6844 ;; Parameters:    Size  Location     Type
  6845 ;;  data            1    wreg     unsigned char 
  6846 ;; Auto vars:     Size  Location     Type
  6847 ;;  data            1    5[COMMON] unsigned char 
  6848 ;;  nibble          1    6[COMMON] unsigned char 
  6849 ;; Return value:  Size  Location     Type
  6850 ;;                  1    wreg      void 
  6851 ;; Registers used:
  6852 ;;		wreg, status,2, status,0, pclath, cstack
  6853 ;; Tracked objects:
  6854 ;;		On entry : 0/0
  6855 ;;		On exit  : 0/0
  6856 ;;		Unchanged: 0/0
  6857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6858 ;;      Params:         0       0       0       0       0
  6859 ;;      Locals:         2       0       0       0       0
  6860 ;;      Temps:          2       0       0       0       0
  6861 ;;      Totals:         4       0       0       0       0
  6862 ;;Total ram usage:        4 bytes
  6863 ;; Hardware stack levels used: 1
  6864 ;; Hardware stack levels required when called: 4
  6865 ;; This function calls:
  6866 ;;		_lcd_send_nibble
  6867 ;; This function is called by:
  6868 ;;		_lcd_cmd
  6869 ;;		_lcd_char
  6870 ;; This function uses a non-reentrant model
  6871 ;;
  6872                           
  6873                           
  6874                           ;psect for function _lcd_byte_4bits
  6875  09F7                     _lcd_byte_4bits:
  6876                           
  6877                           ;incstack = 0
  6878 ;; hardware stack exceeded
  6879                           ; Regs used in _lcd_byte_4bits: [wreg+status,2+status,0+pclath+cstack]
  6880                           ;lcd_byte_4bits@data stored from wreg
  6881  09F7  00F5               	movwf	lcd_byte_4bits@data
  6882  09F8                     l2251:
  6883                           
  6884                           ;lcd.c: 88: void lcd_byte_4bits(unsigned char data);lcd.c: 89: {;lcd.c: 90:     unsigned
      +                           char nibble;;lcd.c: 93:     nibble = (data >> 4);
  6885  09F8  0875               	movf	lcd_byte_4bits@data,w
  6886  09F9  00F3               	movwf	??_lcd_byte_4bits
  6887  09FA  3004               	movlw	4
  6888  09FB                     u1015:
  6889  09FB  1003               	clrc
  6890  09FC  0CF3               	rrf	??_lcd_byte_4bits,f
  6891  09FD  3EFF               	addlw	-1
  6892  09FE  1D03               	skipz
  6893  09FF  29FB               	goto	u1015
  6894  0A00  0873               	movf	??_lcd_byte_4bits,w
  6895  0A01  00F4               	movwf	??_lcd_byte_4bits+1
  6896  0A02  0874               	movf	??_lcd_byte_4bits+1,w
  6897  0A03  00F6               	movwf	lcd_byte_4bits@nibble
  6898  0A04                     l2253:
  6899                           
  6900                           ;lcd.c: 94:     lcd_send_nibble(nibble);
  6901  0A04  0876               	movf	lcd_byte_4bits@nibble,w
  6902  0A05  120A  158A  234B  120A  158A  	fcall	_lcd_send_nibble
  6903  0A0A                     l2255:
  6904                           
  6905                           ;lcd.c: 97:     nibble = (data & 0x0F);
  6906  0A0A  0875               	movf	lcd_byte_4bits@data,w
  6907  0A0B  390F               	andlw	15
  6908  0A0C  00F3               	movwf	??_lcd_byte_4bits
  6909  0A0D  0873               	movf	??_lcd_byte_4bits,w
  6910  0A0E  00F6               	movwf	lcd_byte_4bits@nibble
  6911  0A0F                     l2257:
  6912                           
  6913                           ;lcd.c: 98:     lcd_send_nibble(nibble);
  6914  0A0F  0876               	movf	lcd_byte_4bits@nibble,w
  6915  0A10  120A  158A  234B  120A  158A  	fcall	_lcd_send_nibble
  6916  0A15                     l290:
  6917  0A15  0008               	return
  6918  0A16                     __end_of_lcd_byte_4bits:
  6919                           
  6920                           	psect	text38
  6921  0B4B                     __ptext38:	
  6922 ;; *************** function _lcd_send_nibble *****************
  6923 ;; Defined at:
  6924 ;;		line 72 in file "lcd.c"
  6925 ;; Parameters:    Size  Location     Type
  6926 ;;  data            1    wreg     unsigned char 
  6927 ;; Auto vars:     Size  Location     Type
  6928 ;;  data            1    2[COMMON] unsigned char 
  6929 ;; Return value:  Size  Location     Type
  6930 ;;                  1    wreg      void 
  6931 ;; Registers used:
  6932 ;;		wreg, status,2, status,0, pclath, cstack
  6933 ;; Tracked objects:
  6934 ;;		On entry : 0/0
  6935 ;;		On exit  : 0/0
  6936 ;;		Unchanged: 0/0
  6937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6938 ;;      Params:         0       0       0       0       0
  6939 ;;      Locals:         1       0       0       0       0
  6940 ;;      Temps:          0       0       0       0       0
  6941 ;;      Totals:         1       0       0       0       0
  6942 ;;Total ram usage:        1 bytes
  6943 ;; Hardware stack levels used: 1
  6944 ;; Hardware stack levels required when called: 3
  6945 ;; This function calls:
  6946 ;;		_lcd_en_pulse
  6947 ;; This function is called by:
  6948 ;;		_lcd_byte_4bits
  6949 ;;		_lcd_init_4bits
  6950 ;; This function uses a non-reentrant model
  6951 ;;
  6952                           
  6953                           
  6954                           ;psect for function _lcd_send_nibble
  6955  0B4B                     _lcd_send_nibble:
  6956                           
  6957                           ;incstack = 0
  6958 ;; hardware stack exceeded
  6959                           ; Regs used in _lcd_send_nibble: [wreg+status,2+status,0+pclath+cstack]
  6960                           ;lcd_send_nibble@data stored from wreg
  6961  0B4B  00F2               	movwf	lcd_send_nibble@data
  6962  0B4C                     l2223:
  6963                           
  6964                           ;lcd.c: 72: void lcd_send_nibble(unsigned char data);lcd.c: 73: {;lcd.c: 76:     if (dat
      +                          a&0x01) var4 = 1;
  6965  0B4C  1C72               	btfss	lcd_send_nibble@data,0
  6966  0B4D  2B4F               	goto	u971
  6967  0B4E  2B50               	goto	u970
  6968  0B4F                     u971:
  6969  0B4F  2B55               	goto	l2227
  6970  0B50                     u970:
  6971  0B50                     l2225:
  6972  0B50  1283               	bcf	3,5	;RP0=0, select bank0
  6973  0B51  1303               	bcf	3,6	;RP1=0, select bank0
  6974  0B52  01D9               	clrf	_var4
  6975  0B53  0AD9               	incf	_var4,f
  6976  0B54  2B58               	goto	l2229
  6977  0B55                     l2227:
  6978  0B55  1283               	bcf	3,5	;RP0=0, select bank0
  6979  0B56  1303               	bcf	3,6	;RP1=0, select bank0
  6980  0B57  01D9               	clrf	_var4
  6981  0B58                     l2229:
  6982                           
  6983                           ;lcd.c: 78:  if (data&0x02) var5 = 1;
  6984  0B58  1CF2               	btfss	lcd_send_nibble@data,1
  6985  0B59  2B5B               	goto	u981
  6986  0B5A  2B5C               	goto	u980
  6987  0B5B                     u981:
  6988  0B5B  2B5F               	goto	l2233
  6989  0B5C                     u980:
  6990  0B5C                     l2231:
  6991  0B5C  01D8               	clrf	_var5
  6992  0B5D  0AD8               	incf	_var5,f
  6993  0B5E  2B60               	goto	l2235
  6994  0B5F                     l2233:
  6995  0B5F  01D8               	clrf	_var5
  6996  0B60                     l2235:
  6997                           
  6998                           ;lcd.c: 80:  if (data&0x04) var6 = 1;
  6999  0B60  1D72               	btfss	lcd_send_nibble@data,2
  7000  0B61  2B63               	goto	u991
  7001  0B62  2B64               	goto	u990
  7002  0B63                     u991:
  7003  0B63  2B67               	goto	l2239
  7004  0B64                     u990:
  7005  0B64                     l2237:
  7006  0B64  01D7               	clrf	_var6
  7007  0B65  0AD7               	incf	_var6,f
  7008  0B66  2B68               	goto	l2241
  7009  0B67                     l2239:
  7010  0B67  01D7               	clrf	_var6
  7011  0B68                     l2241:
  7012                           
  7013                           ;lcd.c: 82:  if (data&0x08) var7 = 1;
  7014  0B68  1DF2               	btfss	lcd_send_nibble@data,3
  7015  0B69  2B6B               	goto	u1001
  7016  0B6A  2B6C               	goto	u1000
  7017  0B6B                     u1001:
  7018  0B6B  2B6F               	goto	l2245
  7019  0B6C                     u1000:
  7020  0B6C                     l2243:
  7021  0B6C  01D6               	clrf	_var7
  7022  0B6D  0AD6               	incf	_var7,f
  7023  0B6E  2B70               	goto	l2247
  7024  0B6F                     l2245:
  7025  0B6F  01D6               	clrf	_var7
  7026  0B70                     l2247:
  7027                           
  7028                           ;lcd.c: 85:     lcd_en_pulse();
  7029  0B70  120A  158A  20BD  120A  158A  	fcall	_lcd_en_pulse
  7030  0B75                     l287:
  7031  0B75  0008               	return
  7032  0B76                     __end_of_lcd_send_nibble:
  7033                           
  7034                           	psect	text39
  7035  08BD                     __ptext39:	
  7036 ;; *************** function _lcd_en_pulse *****************
  7037 ;; Defined at:
  7038 ;;		line 64 in file "lcd.c"
  7039 ;; Parameters:    Size  Location     Type
  7040 ;;		None
  7041 ;; Auto vars:     Size  Location     Type
  7042 ;;		None
  7043 ;; Return value:  Size  Location     Type
  7044 ;;                  1    wreg      void 
  7045 ;; Registers used:
  7046 ;;		status,2, status,0, pclath, cstack
  7047 ;; Tracked objects:
  7048 ;;		On entry : 0/0
  7049 ;;		On exit  : 0/0
  7050 ;;		Unchanged: 0/0
  7051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7052 ;;      Params:         0       0       0       0       0
  7053 ;;      Locals:         0       0       0       0       0
  7054 ;;      Temps:          0       0       0       0       0
  7055 ;;      Totals:         0       0       0       0       0
  7056 ;;Total ram usage:        0 bytes
  7057 ;; Hardware stack levels used: 1
  7058 ;; Hardware stack levels required when called: 2
  7059 ;; This function calls:
  7060 ;;		_lcd_delay_1us
  7061 ;; This function is called by:
  7062 ;;		_lcd_send_nibble
  7063 ;;		_lcd_byte_8bits
  7064 ;; This function uses a non-reentrant model
  7065 ;;
  7066                           
  7067                           
  7068                           ;psect for function _lcd_en_pulse
  7069  08BD                     _lcd_en_pulse:
  7070  08BD                     l2217:	
  7071                           ;incstack = 0
  7072                           ; Regs used in _lcd_en_pulse: [status,2+status,0+pclath+cstack]
  7073                           
  7074                           
  7075                           ;lcd.c: 66:     PORTEbits.RE1 = 1;
  7076  08BD  1283               	bcf	3,5	;RP0=0, select bank0
  7077  08BE  1303               	bcf	3,6	;RP1=0, select bank0
  7078  08BF  1489               	bsf	9,1	;volatile
  7079  08C0                     l2219:
  7080                           
  7081                           ;lcd.c: 67:     lcd_delay_1us();
  7082  08C0  160A  118A  2746  120A  158A  	fcall	_lcd_delay_1us
  7083  08C5                     l2221:
  7084                           
  7085                           ;lcd.c: 68:     PORTEbits.RE1 = 0;
  7086  08C5  1283               	bcf	3,5	;RP0=0, select bank0
  7087  08C6  1303               	bcf	3,6	;RP1=0, select bank0
  7088  08C7  1089               	bcf	9,1	;volatile
  7089                           
  7090                           ;lcd.c: 69:     lcd_delay_1us();
  7091  08C8  160A  118A  2746  120A  158A  	fcall	_lcd_delay_1us
  7092  08CD                     l276:
  7093  08CD  0008               	return
  7094  08CE                     __end_of_lcd_en_pulse:
  7095                           
  7096                           	psect	text40
  7097  1746                     __ptext40:	
  7098 ;; *************** function _lcd_delay_1us *****************
  7099 ;; Defined at:
  7100 ;;		line 59 in file "lcd.c"
  7101 ;; Parameters:    Size  Location     Type
  7102 ;;		None
  7103 ;; Auto vars:     Size  Location     Type
  7104 ;;		None
  7105 ;; Return value:  Size  Location     Type
  7106 ;;                  1    wreg      void 
  7107 ;; Registers used:
  7108 ;;		None
  7109 ;; Tracked objects:
  7110 ;;		On entry : 0/0
  7111 ;;		On exit  : 0/0
  7112 ;;		Unchanged: 0/0
  7113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7114 ;;      Params:         0       0       0       0       0
  7115 ;;      Locals:         0       0       0       0       0
  7116 ;;      Temps:          0       0       0       0       0
  7117 ;;      Totals:         0       0       0       0       0
  7118 ;;Total ram usage:        0 bytes
  7119 ;; Hardware stack levels used: 1
  7120 ;; Hardware stack levels required when called: 1
  7121 ;; This function calls:
  7122 ;;		Nothing
  7123 ;; This function is called by:
  7124 ;;		_lcd_en_pulse
  7125 ;; This function uses a non-reentrant model
  7126 ;;
  7127                           
  7128                           
  7129                           ;psect for function _lcd_delay_1us
  7130  1746                     _lcd_delay_1us:
  7131  1746                     l2215:	
  7132                           ;incstack = 0
  7133                           ; Regs used in _lcd_delay_1us: []
  7134                           
  7135  1746  2F47               	nop2	;2 cycle nop
  7136  1747  2F48               	nop2	;2 cycle nop
  7137  1748  0000               	nop
  7138  1749                     l264:
  7139  1749  0008               	return
  7140  174A                     __end_of_lcd_delay_1us:
  7141                           
  7142                           	psect	text41
  7143  0AA9                     __ptext41:	
  7144 ;; *************** function _isxdigit *****************
  7145 ;; Defined at:
  7146 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\isxdigit.c"
  7147 ;; Parameters:    Size  Location     Type
  7148 ;;  c               1    wreg     unsigned char 
  7149 ;; Auto vars:     Size  Location     Type
  7150 ;;  c               1    5[COMMON] unsigned char 
  7151 ;; Return value:  Size  Location     Type
  7152 ;;		None               void
  7153 ;; Registers used:
  7154 ;;		wreg, status,2, status,0, pclath, cstack
  7155 ;; Tracked objects:
  7156 ;;		On entry : 0/0
  7157 ;;		On exit  : 0/0
  7158 ;;		Unchanged: 0/0
  7159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7160 ;;      Params:         0       0       0       0       0
  7161 ;;      Locals:         2       0       0       0       0
  7162 ;;      Temps:          0       0       0       0       0
  7163 ;;      Totals:         2       0       0       0       0
  7164 ;;Total ram usage:        2 bytes
  7165 ;; Hardware stack levels used: 1
  7166 ;; Hardware stack levels required when called: 2
  7167 ;; This function calls:
  7168 ;;		_isdigit
  7169 ;; This function is called by:
  7170 ;;		_ctype_testing
  7171 ;; This function uses a non-reentrant model
  7172 ;;
  7173                           
  7174                           
  7175                           ;psect for function _isxdigit
  7176  0AA9                     _isxdigit:
  7177                           
  7178                           ;incstack = 0
  7179                           ; Regs used in _isxdigit: [wreg+status,2+status,0+pclath+cstack]
  7180                           ;isxdigit@c stored from wreg
  7181  0AA9  00F5               	movwf	isxdigit@c
  7182  0AAA                     l2533:
  7183  0AAA  01F4               	clrf	_isxdigit$995
  7184  0AAB  0AF4               	incf	_isxdigit$995,f
  7185  0AAC                     l2535:
  7186  0AAC  3067               	movlw	103
  7187  0AAD  0275               	subwf	isxdigit@c,w
  7188  0AAE  1803               	skipnc
  7189  0AAF  2AB1               	goto	u1411
  7190  0AB0  2AB2               	goto	u1410
  7191  0AB1                     u1411:
  7192  0AB1  2AB8               	goto	l2539
  7193  0AB2                     u1410:
  7194  0AB2                     l2537:
  7195  0AB2  3061               	movlw	97
  7196  0AB3  0275               	subwf	isxdigit@c,w
  7197  0AB4  1803               	skipnc
  7198  0AB5  2AB7               	goto	u1421
  7199  0AB6  2AB8               	goto	u1420
  7200  0AB7                     u1421:
  7201  0AB7  2ACF               	goto	l2547
  7202  0AB8                     u1420:
  7203  0AB8                     l2539:
  7204  0AB8  3047               	movlw	71
  7205  0AB9  0275               	subwf	isxdigit@c,w
  7206  0ABA  1803               	skipnc
  7207  0ABB  2ABD               	goto	u1431
  7208  0ABC  2ABE               	goto	u1430
  7209  0ABD                     u1431:
  7210  0ABD  2AC4               	goto	l2543
  7211  0ABE                     u1430:
  7212  0ABE                     l2541:
  7213  0ABE  3041               	movlw	65
  7214  0ABF  0275               	subwf	isxdigit@c,w
  7215  0AC0  1803               	skipnc
  7216  0AC1  2AC3               	goto	u1441
  7217  0AC2  2AC4               	goto	u1440
  7218  0AC3                     u1441:
  7219  0AC3  2ACF               	goto	l2547
  7220  0AC4                     u1440:
  7221  0AC4                     l2543:
  7222  0AC4  0875               	movf	isxdigit@c,w
  7223  0AC5  120A  158A  20F2  120A  158A  	fcall	_isdigit
  7224  0ACA  1803               	btfsc	3,0
  7225  0ACB  2ACD               	goto	u1451
  7226  0ACC  2ACE               	goto	u1450
  7227  0ACD                     u1451:
  7228  0ACD  2ACF               	goto	l2547
  7229  0ACE                     u1450:
  7230  0ACE                     l2545:
  7231  0ACE  01F4               	clrf	_isxdigit$995
  7232  0ACF                     l2547:
  7233  0ACF  0C74               	rrf	_isxdigit$995,w
  7234  0AD0                     l966:
  7235  0AD0  0008               	return
  7236  0AD1                     __end_of_isxdigit:
  7237                           
  7238                           	psect	text42
  7239  08F2                     __ptext42:	
  7240 ;; *************** function _isdigit *****************
  7241 ;; Defined at:
  7242 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\isdigit.c"
  7243 ;; Parameters:    Size  Location     Type
  7244 ;;  c               1    wreg     unsigned char 
  7245 ;; Auto vars:     Size  Location     Type
  7246 ;;  c               1    3[COMMON] unsigned char 
  7247 ;; Return value:  Size  Location     Type
  7248 ;;		None               void
  7249 ;; Registers used:
  7250 ;;		wreg, status,2, status,0
  7251 ;; Tracked objects:
  7252 ;;		On entry : 0/0
  7253 ;;		On exit  : 0/0
  7254 ;;		Unchanged: 0/0
  7255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7256 ;;      Params:         0       0       0       0       0
  7257 ;;      Locals:         2       0       0       0       0
  7258 ;;      Temps:          0       0       0       0       0
  7259 ;;      Totals:         2       0       0       0       0
  7260 ;;Total ram usage:        2 bytes
  7261 ;; Hardware stack levels used: 1
  7262 ;; Hardware stack levels required when called: 1
  7263 ;; This function calls:
  7264 ;;		Nothing
  7265 ;; This function is called by:
  7266 ;;		_isxdigit
  7267 ;; This function uses a non-reentrant model
  7268 ;;
  7269                           
  7270                           
  7271                           ;psect for function _isdigit
  7272  08F2                     _isdigit:
  7273                           
  7274                           ;incstack = 0
  7275                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  7276                           ;isdigit@c stored from wreg
  7277  08F2  00F3               	movwf	isdigit@c
  7278  08F3                     l2355:
  7279  08F3  01F2               	clrf	_isdigit$998
  7280  08F4                     l2357:
  7281  08F4  303A               	movlw	58
  7282  08F5  0273               	subwf	isdigit@c,w
  7283  08F6  1803               	skipnc
  7284  08F7  28F9               	goto	u1201
  7285  08F8  28FA               	goto	u1200
  7286  08F9                     u1201:
  7287  08F9  2902               	goto	l2363
  7288  08FA                     u1200:
  7289  08FA                     l2359:
  7290  08FA  3030               	movlw	48
  7291  08FB  0273               	subwf	isdigit@c,w
  7292  08FC  1C03               	skipc
  7293  08FD  28FF               	goto	u1211
  7294  08FE  2900               	goto	u1210
  7295  08FF                     u1211:
  7296  08FF  2902               	goto	l2363
  7297  0900                     u1210:
  7298  0900                     l2361:
  7299  0900  01F2               	clrf	_isdigit$998
  7300  0901  0AF2               	incf	_isdigit$998,f
  7301  0902                     l2363:
  7302  0902  0C72               	rrf	_isdigit$998,w
  7303  0903                     l971:
  7304  0903  0008               	return
  7305  0904                     __end_of_isdigit:
  7306                           
  7307                           	psect	text43
  7308  0955                     __ptext43:	
  7309 ;; *************** function _isspace *****************
  7310 ;; Defined at:
  7311 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\isspace.c"
  7312 ;; Parameters:    Size  Location     Type
  7313 ;;  c               1    wreg     unsigned char 
  7314 ;; Auto vars:     Size  Location     Type
  7315 ;;  c               1    3[COMMON] unsigned char 
  7316 ;; Return value:  Size  Location     Type
  7317 ;;		None               void
  7318 ;; Registers used:
  7319 ;;		wreg, status,2, status,0
  7320 ;; Tracked objects:
  7321 ;;		On entry : 0/0
  7322 ;;		On exit  : 0/0
  7323 ;;		Unchanged: 0/0
  7324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7325 ;;      Params:         0       0       0       0       0
  7326 ;;      Locals:         2       0       0       0       0
  7327 ;;      Temps:          0       0       0       0       0
  7328 ;;      Totals:         2       0       0       0       0
  7329 ;;Total ram usage:        2 bytes
  7330 ;; Hardware stack levels used: 1
  7331 ;; Hardware stack levels required when called: 1
  7332 ;; This function calls:
  7333 ;;		Nothing
  7334 ;; This function is called by:
  7335 ;;		_ctype_testing
  7336 ;; This function uses a non-reentrant model
  7337 ;;
  7338                           
  7339                           
  7340                           ;psect for function _isspace
  7341  0955                     _isspace:
  7342                           
  7343                           ;incstack = 0
  7344                           ; Regs used in _isspace: [wreg+status,2+status,0]
  7345                           ;isspace@c stored from wreg
  7346  0955  00F3               	movwf	isspace@c
  7347  0956                     l2519:
  7348  0956  01F2               	clrf	_isspace$984
  7349  0957  0AF2               	incf	_isspace$984,f
  7350  0958                     l2521:
  7351  0958  3020               	movlw	32
  7352  0959  0673               	xorwf	isspace@c,w
  7353  095A  1903               	btfsc	3,2
  7354  095B  295D               	goto	u1381
  7355  095C  295E               	goto	u1380
  7356  095D                     u1381:
  7357  095D  296B               	goto	l2529
  7358  095E                     u1380:
  7359  095E                     l2523:
  7360  095E  300E               	movlw	14
  7361  095F  0273               	subwf	isspace@c,w
  7362  0960  1803               	skipnc
  7363  0961  2963               	goto	u1391
  7364  0962  2964               	goto	u1390
  7365  0963                     u1391:
  7366  0963  296A               	goto	l2527
  7367  0964                     u1390:
  7368  0964                     l2525:
  7369  0964  3009               	movlw	9
  7370  0965  0273               	subwf	isspace@c,w
  7371  0966  1803               	skipnc
  7372  0967  2969               	goto	u1401
  7373  0968  296A               	goto	u1400
  7374  0969                     u1401:
  7375  0969  296B               	goto	l2529
  7376  096A                     u1400:
  7377  096A                     l2527:
  7378  096A  01F2               	clrf	_isspace$984
  7379  096B                     l2529:
  7380  096B  0C72               	rrf	_isspace$984,w
  7381  096C                     l954:
  7382  096C  0008               	return
  7383  096D                     __end_of_isspace:
  7384                           
  7385                           	psect	text44
  7386  06CB                     __ptext44:	
  7387 ;; *************** function _ispunct *****************
  7388 ;; Defined at:
  7389 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\ispunct.c"
  7390 ;; Parameters:    Size  Location     Type
  7391 ;;  c               1    wreg     unsigned char 
  7392 ;; Auto vars:     Size  Location     Type
  7393 ;;  c               1    2[COMMON] unsigned char 
  7394 ;; Return value:  Size  Location     Type
  7395 ;;		None               void
  7396 ;; Registers used:
  7397 ;;		wreg, status,2, status,0
  7398 ;; Tracked objects:
  7399 ;;		On entry : 0/0
  7400 ;;		On exit  : 0/0
  7401 ;;		Unchanged: 0/0
  7402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7403 ;;      Params:         0       0       0       0       0
  7404 ;;      Locals:         1       0       0       0       0
  7405 ;;      Temps:          0       0       0       0       0
  7406 ;;      Totals:         1       0       0       0       0
  7407 ;;Total ram usage:        1 bytes
  7408 ;; Hardware stack levels used: 1
  7409 ;; Hardware stack levels required when called: 1
  7410 ;; This function calls:
  7411 ;;		Nothing
  7412 ;; This function is called by:
  7413 ;;		_ctype_testing
  7414 ;; This function uses a non-reentrant model
  7415 ;;
  7416                           
  7417                           
  7418                           ;psect for function _ispunct
  7419  06CB                     _ispunct:
  7420                           
  7421                           ;incstack = 0
  7422                           ; Regs used in _ispunct: [wreg+status,2+status,0]
  7423                           ;ispunct@c stored from wreg
  7424  06CB  00F2               	movwf	ispunct@c
  7425  06CC                     l1569:
  7426  06CC  3021               	movlw	33
  7427  06CD  0272               	subwf	ispunct@c,w
  7428  06CE  1C03               	skipc
  7429  06CF  2ED1               	goto	u421
  7430  06D0  2ED2               	goto	u420
  7431  06D1                     u421:
  7432  06D1  2ED8               	goto	l1573
  7433  06D2                     u420:
  7434  06D2                     l1571:
  7435  06D2  3030               	movlw	48
  7436  06D3  0272               	subwf	ispunct@c,w
  7437  06D4  1C03               	skipc
  7438  06D5  2ED7               	goto	u431
  7439  06D6  2ED8               	goto	u430
  7440  06D7                     u431:
  7441  06D7  2EFC               	goto	l1585
  7442  06D8                     u430:
  7443  06D8                     l1573:
  7444  06D8  303A               	movlw	58
  7445  06D9  0272               	subwf	ispunct@c,w
  7446  06DA  1C03               	skipc
  7447  06DB  2EDD               	goto	u441
  7448  06DC  2EDE               	goto	u440
  7449  06DD                     u441:
  7450  06DD  2EE4               	goto	l1577
  7451  06DE                     u440:
  7452  06DE                     l1575:
  7453  06DE  3041               	movlw	65
  7454  06DF  0272               	subwf	ispunct@c,w
  7455  06E0  1C03               	skipc
  7456  06E1  2EE3               	goto	u451
  7457  06E2  2EE4               	goto	u450
  7458  06E3                     u451:
  7459  06E3  2EFC               	goto	l1585
  7460  06E4                     u450:
  7461  06E4                     l1577:
  7462  06E4  305B               	movlw	91
  7463  06E5  0272               	subwf	ispunct@c,w
  7464  06E6  1C03               	skipc
  7465  06E7  2EE9               	goto	u461
  7466  06E8  2EEA               	goto	u460
  7467  06E9                     u461:
  7468  06E9  2EF0               	goto	l1581
  7469  06EA                     u460:
  7470  06EA                     l1579:
  7471  06EA  3061               	movlw	97
  7472  06EB  0272               	subwf	ispunct@c,w
  7473  06EC  1C03               	skipc
  7474  06ED  2EEF               	goto	u471
  7475  06EE  2EF0               	goto	u470
  7476  06EF                     u471:
  7477  06EF  2EFC               	goto	l1585
  7478  06F0                     u470:
  7479  06F0                     l1581:
  7480  06F0  307B               	movlw	123
  7481  06F1  0272               	subwf	ispunct@c,w
  7482  06F2  1C03               	skipc
  7483  06F3  2EF5               	goto	u481
  7484  06F4  2EF6               	goto	u480
  7485  06F5                     u481:
  7486  06F5  2EFE               	goto	l1589
  7487  06F6                     u480:
  7488  06F6                     l1583:
  7489  06F6  307F               	movlw	127
  7490  06F7  0272               	subwf	ispunct@c,w
  7491  06F8  1803               	skipnc
  7492  06F9  2EFB               	goto	u491
  7493  06FA  2EFC               	goto	u490
  7494  06FB                     u491:
  7495  06FB  2EFE               	goto	l1589
  7496  06FC                     u490:
  7497  06FC                     l1585:
  7498  06FC  1403               	setc
  7499  06FD  2EFF               	goto	l949
  7500  06FE                     l1589:
  7501  06FE  1003               	clrc
  7502  06FF                     l949:
  7503  06FF  0008               	return
  7504  0700                     __end_of_ispunct:
  7505                           
  7506                           	psect	text45
  7507  08E0                     __ptext45:	
  7508 ;; *************** function _isprint *****************
  7509 ;; Defined at:
  7510 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\isprint.c"
  7511 ;; Parameters:    Size  Location     Type
  7512 ;;  c               1    wreg     unsigned char 
  7513 ;; Auto vars:     Size  Location     Type
  7514 ;;  c               1    3[COMMON] unsigned char 
  7515 ;; Return value:  Size  Location     Type
  7516 ;;		None               void
  7517 ;; Registers used:
  7518 ;;		wreg, status,2, status,0
  7519 ;; Tracked objects:
  7520 ;;		On entry : 0/0
  7521 ;;		On exit  : 0/0
  7522 ;;		Unchanged: 0/0
  7523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7524 ;;      Params:         0       0       0       0       0
  7525 ;;      Locals:         2       0       0       0       0
  7526 ;;      Temps:          0       0       0       0       0
  7527 ;;      Totals:         2       0       0       0       0
  7528 ;;Total ram usage:        2 bytes
  7529 ;; Hardware stack levels used: 1
  7530 ;; Hardware stack levels required when called: 1
  7531 ;; This function calls:
  7532 ;;		Nothing
  7533 ;; This function is called by:
  7534 ;;		_ctype_testing
  7535 ;; This function uses a non-reentrant model
  7536 ;;
  7537                           
  7538                           
  7539                           ;psect for function _isprint
  7540  08E0                     _isprint:
  7541                           
  7542                           ;incstack = 0
  7543                           ; Regs used in _isprint: [wreg+status,2+status,0]
  7544                           ;isprint@c stored from wreg
  7545  08E0  00F3               	movwf	isprint@c
  7546  08E1                     l2563:
  7547  08E1  01F2               	clrf	_isprint$979
  7548  08E2                     l2565:
  7549  08E2  307F               	movlw	127
  7550  08E3  0273               	subwf	isprint@c,w
  7551  08E4  1803               	skipnc
  7552  08E5  28E7               	goto	u1481
  7553  08E6  28E8               	goto	u1480
  7554  08E7                     u1481:
  7555  08E7  28F0               	goto	l2571
  7556  08E8                     u1480:
  7557  08E8                     l2567:
  7558  08E8  3020               	movlw	32
  7559  08E9  0273               	subwf	isprint@c,w
  7560  08EA  1C03               	skipc
  7561  08EB  28ED               	goto	u1491
  7562  08EC  28EE               	goto	u1490
  7563  08ED                     u1491:
  7564  08ED  28F0               	goto	l2571
  7565  08EE                     u1490:
  7566  08EE                     l2569:
  7567  08EE  01F2               	clrf	_isprint$979
  7568  08EF  0AF2               	incf	_isprint$979,f
  7569  08F0                     l2571:
  7570  08F0  0C72               	rrf	_isprint$979,w
  7571  08F1                     l937:
  7572  08F1  0008               	return
  7573  08F2                     __end_of_isprint:
  7574                           
  7575                           	psect	text46
  7576  08CE                     __ptext46:	
  7577 ;; *************** function _islower *****************
  7578 ;; Defined at:
  7579 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\islower.c"
  7580 ;; Parameters:    Size  Location     Type
  7581 ;;  c               1    wreg     unsigned char 
  7582 ;; Auto vars:     Size  Location     Type
  7583 ;;  c               1    3[COMMON] unsigned char 
  7584 ;; Return value:  Size  Location     Type
  7585 ;;		None               void
  7586 ;; Registers used:
  7587 ;;		wreg, status,2, status,0
  7588 ;; Tracked objects:
  7589 ;;		On entry : 0/0
  7590 ;;		On exit  : 0/0
  7591 ;;		Unchanged: 0/0
  7592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7593 ;;      Params:         0       0       0       0       0
  7594 ;;      Locals:         2       0       0       0       0
  7595 ;;      Temps:          0       0       0       0       0
  7596 ;;      Totals:         2       0       0       0       0
  7597 ;;Total ram usage:        2 bytes
  7598 ;; Hardware stack levels used: 1
  7599 ;; Hardware stack levels required when called: 1
  7600 ;; This function calls:
  7601 ;;		Nothing
  7602 ;; This function is called by:
  7603 ;;		_ctype_testing
  7604 ;; This function uses a non-reentrant model
  7605 ;;
  7606                           
  7607                           
  7608                           ;psect for function _islower
  7609  08CE                     _islower:
  7610                           
  7611                           ;incstack = 0
  7612                           ; Regs used in _islower: [wreg+status,2+status,0]
  7613                           ;islower@c stored from wreg
  7614  08CE  00F3               	movwf	islower@c
  7615  08CF                     l2551:
  7616  08CF  01F2               	clrf	_islower$976
  7617  08D0                     l2553:
  7618  08D0  307B               	movlw	123
  7619  08D1  0273               	subwf	islower@c,w
  7620  08D2  1803               	skipnc
  7621  08D3  28D5               	goto	u1461
  7622  08D4  28D6               	goto	u1460
  7623  08D5                     u1461:
  7624  08D5  28DE               	goto	l2559
  7625  08D6                     u1460:
  7626  08D6                     l2555:
  7627  08D6  3061               	movlw	97
  7628  08D7  0273               	subwf	islower@c,w
  7629  08D8  1C03               	skipc
  7630  08D9  28DB               	goto	u1471
  7631  08DA  28DC               	goto	u1470
  7632  08DB                     u1471:
  7633  08DB  28DE               	goto	l2559
  7634  08DC                     u1470:
  7635  08DC                     l2557:
  7636  08DC  01F2               	clrf	_islower$976
  7637  08DD  0AF2               	incf	_islower$976,f
  7638  08DE                     l2559:
  7639  08DE  0C72               	rrf	_islower$976,w
  7640  08DF                     l932:
  7641  08DF  0008               	return
  7642  08E0                     __end_of_islower:
  7643                           
  7644                           	psect	text47
  7645  17EE                     __ptext47:	
  7646 ;; *************** function _isgraph *****************
  7647 ;; Defined at:
  7648 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\isgraph.c"
  7649 ;; Parameters:    Size  Location     Type
  7650 ;;  c               1    wreg     unsigned char 
  7651 ;; Auto vars:     Size  Location     Type
  7652 ;;  c               1    3[COMMON] unsigned char 
  7653 ;; Return value:  Size  Location     Type
  7654 ;;		None               void
  7655 ;; Registers used:
  7656 ;;		wreg, status,2, status,0
  7657 ;; Tracked objects:
  7658 ;;		On entry : 0/0
  7659 ;;		On exit  : 0/0
  7660 ;;		Unchanged: 0/0
  7661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7662 ;;      Params:         0       0       0       0       0
  7663 ;;      Locals:         2       0       0       0       0
  7664 ;;      Temps:          0       0       0       0       0
  7665 ;;      Totals:         2       0       0       0       0
  7666 ;;Total ram usage:        2 bytes
  7667 ;; Hardware stack levels used: 1
  7668 ;; Hardware stack levels required when called: 1
  7669 ;; This function calls:
  7670 ;;		Nothing
  7671 ;; This function is called by:
  7672 ;;		_ctype_testing
  7673 ;; This function uses a non-reentrant model
  7674 ;;
  7675                           
  7676                           
  7677                           ;psect for function _isgraph
  7678  17EE                     _isgraph:
  7679                           
  7680                           ;incstack = 0
  7681                           ; Regs used in _isgraph: [wreg+status,2+status,0]
  7682                           ;isgraph@c stored from wreg
  7683  17EE  00F3               	movwf	isgraph@c
  7684  17EF                     l2507:
  7685  17EF  01F2               	clrf	_isgraph$973
  7686  17F0                     l2509:
  7687  17F0  307F               	movlw	127
  7688  17F1  0273               	subwf	isgraph@c,w
  7689  17F2  1803               	skipnc
  7690  17F3  2FF5               	goto	u1361
  7691  17F4  2FF6               	goto	u1360
  7692  17F5                     u1361:
  7693  17F5  2FFE               	goto	l2515
  7694  17F6                     u1360:
  7695  17F6                     l2511:
  7696  17F6  3021               	movlw	33
  7697  17F7  0273               	subwf	isgraph@c,w
  7698  17F8  1C03               	skipc
  7699  17F9  2FFB               	goto	u1371
  7700  17FA  2FFC               	goto	u1370
  7701  17FB                     u1371:
  7702  17FB  2FFE               	goto	l2515
  7703  17FC                     u1370:
  7704  17FC                     l2513:
  7705  17FC  01F2               	clrf	_isgraph$973
  7706  17FD  0AF2               	incf	_isgraph$973,f
  7707  17FE                     l2515:
  7708  17FE  0C72               	rrf	_isgraph$973,w
  7709  17FF                     l927:
  7710  17FF  0008               	return
  7711  1800                     __end_of_isgraph:
  7712                           
  7713                           	psect	text48
  7714  1770                     __ptext48:	
  7715 ;; *************** function _iscntrl *****************
  7716 ;; Defined at:
  7717 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\iscntrl.c"
  7718 ;; Parameters:    Size  Location     Type
  7719 ;;  c               1    wreg     unsigned char 
  7720 ;; Auto vars:     Size  Location     Type
  7721 ;;  c               1    2[COMMON] unsigned char 
  7722 ;; Return value:  Size  Location     Type
  7723 ;;		None               void
  7724 ;; Registers used:
  7725 ;;		wreg, status,2, status,0
  7726 ;; Tracked objects:
  7727 ;;		On entry : 0/0
  7728 ;;		On exit  : 0/0
  7729 ;;		Unchanged: 0/0
  7730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7731 ;;      Params:         0       0       0       0       0
  7732 ;;      Locals:         1       0       0       0       0
  7733 ;;      Temps:          0       0       0       0       0
  7734 ;;      Totals:         1       0       0       0       0
  7735 ;;Total ram usage:        1 bytes
  7736 ;; Hardware stack levels used: 1
  7737 ;; Hardware stack levels required when called: 1
  7738 ;; This function calls:
  7739 ;;		Nothing
  7740 ;; This function is called by:
  7741 ;;		_ctype_testing
  7742 ;; This function uses a non-reentrant model
  7743 ;;
  7744                           
  7745                           
  7746                           ;psect for function _iscntrl
  7747  1770                     _iscntrl:
  7748                           
  7749                           ;incstack = 0
  7750                           ; Regs used in _iscntrl: [wreg+status,2+status,0]
  7751                           ;iscntrl@c stored from wreg
  7752  1770  00F2               	movwf	iscntrl@c
  7753  1771                     l1625:
  7754  1771  3020               	movlw	32
  7755  1772  0272               	subwf	iscntrl@c,w
  7756  1773  1C03               	skipc
  7757  1774  2F76               	goto	u581
  7758  1775  2F77               	goto	u580
  7759  1776                     u581:
  7760  1776  2F79               	goto	l1629
  7761  1777                     u580:
  7762  1777                     l1627:
  7763  1777  1003               	clrc
  7764  1778  2F7A               	goto	l922
  7765  1779                     l1629:
  7766  1779  1403               	setc
  7767  177A                     l922:
  7768  177A  0008               	return
  7769  177B                     __end_of_iscntrl:
  7770                           
  7771                           	psect	text49
  7772  09BC                     __ptext49:	
  7773 ;; *************** function _isalnum *****************
  7774 ;; Defined at:
  7775 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\isalnum.c"
  7776 ;; Parameters:    Size  Location     Type
  7777 ;;  c               1    wreg     unsigned char 
  7778 ;; Auto vars:     Size  Location     Type
  7779 ;;  c               1    7[COMMON] unsigned char 
  7780 ;; Return value:  Size  Location     Type
  7781 ;;		None               void
  7782 ;; Registers used:
  7783 ;;		wreg, status,2, status,0, pclath, cstack
  7784 ;; Tracked objects:
  7785 ;;		On entry : 0/0
  7786 ;;		On exit  : 0/0
  7787 ;;		Unchanged: 0/0
  7788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7789 ;;      Params:         0       0       0       0       0
  7790 ;;      Locals:         2       0       0       0       0
  7791 ;;      Temps:          0       0       0       0       0
  7792 ;;      Totals:         2       0       0       0       0
  7793 ;;Total ram usage:        2 bytes
  7794 ;; Hardware stack levels used: 1
  7795 ;; Hardware stack levels required when called: 3
  7796 ;; This function calls:
  7797 ;;		_isalpha
  7798 ;; This function is called by:
  7799 ;;		_ctype_testing
  7800 ;; This function uses a non-reentrant model
  7801 ;;
  7802                           
  7803                           
  7804                           ;psect for function _isalnum
  7805  09BC                     _isalnum:
  7806                           
  7807                           ;incstack = 0
  7808                           ; Regs used in _isalnum: [wreg+status,2+status,0+pclath+cstack]
  7809                           ;isalnum@c stored from wreg
  7810  09BC  00F7               	movwf	isalnum@c
  7811  09BD                     l2575:
  7812  09BD  01F6               	clrf	_isalnum$964
  7813  09BE  0AF6               	incf	_isalnum$964,f
  7814  09BF                     l2577:
  7815  09BF  303A               	movlw	58
  7816  09C0  0277               	subwf	isalnum@c,w
  7817  09C1  1803               	skipnc
  7818  09C2  29C4               	goto	u1501
  7819  09C3  29C5               	goto	u1500
  7820  09C4                     u1501:
  7821  09C4  29CB               	goto	l2581
  7822  09C5                     u1500:
  7823  09C5                     l2579:
  7824  09C5  3030               	movlw	48
  7825  09C6  0277               	subwf	isalnum@c,w
  7826  09C7  1803               	skipnc
  7827  09C8  29CA               	goto	u1511
  7828  09C9  29CB               	goto	u1510
  7829  09CA                     u1511:
  7830  09CA  29D6               	goto	l2585
  7831  09CB                     u1510:
  7832  09CB                     l2581:
  7833  09CB  0877               	movf	isalnum@c,w
  7834  09CC  120A  158A  21A0  120A  158A  	fcall	_isalpha
  7835  09D1  1803               	btfsc	3,0
  7836  09D2  29D4               	goto	u1521
  7837  09D3  29D5               	goto	u1520
  7838  09D4                     u1521:
  7839  09D4  29D6               	goto	l2585
  7840  09D5                     u1520:
  7841  09D5                     l2583:
  7842  09D5  01F6               	clrf	_isalnum$964
  7843  09D6                     l2585:
  7844  09D6  0C76               	rrf	_isalnum$964,w
  7845  09D7                     l912:
  7846  09D7  0008               	return
  7847  09D8                     __end_of_isalnum:
  7848                           
  7849                           	psect	text50
  7850  09A0                     __ptext50:	
  7851 ;; *************** function _isalpha *****************
  7852 ;; Defined at:
  7853 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\isalpha.c"
  7854 ;; Parameters:    Size  Location     Type
  7855 ;;  c               1    wreg     unsigned char 
  7856 ;; Auto vars:     Size  Location     Type
  7857 ;;  c               1    5[COMMON] unsigned char 
  7858 ;; Return value:  Size  Location     Type
  7859 ;;		None               void
  7860 ;; Registers used:
  7861 ;;		wreg, status,2, status,0, pclath, cstack
  7862 ;; Tracked objects:
  7863 ;;		On entry : 0/0
  7864 ;;		On exit  : 0/0
  7865 ;;		Unchanged: 0/0
  7866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7867 ;;      Params:         0       0       0       0       0
  7868 ;;      Locals:         2       0       0       0       0
  7869 ;;      Temps:          0       0       0       0       0
  7870 ;;      Totals:         2       0       0       0       0
  7871 ;;Total ram usage:        2 bytes
  7872 ;; Hardware stack levels used: 1
  7873 ;; Hardware stack levels required when called: 2
  7874 ;; This function calls:
  7875 ;;		_isupper
  7876 ;; This function is called by:
  7877 ;;		_ctype_testing
  7878 ;;		_isalnum
  7879 ;; This function uses a non-reentrant model
  7880 ;;
  7881                           
  7882                           
  7883                           ;psect for function _isalpha
  7884  09A0                     _isalpha:
  7885                           
  7886                           ;incstack = 0
  7887                           ; Regs used in _isalpha: [wreg+status,2+status,0+pclath+cstack]
  7888                           ;isalpha@c stored from wreg
  7889  09A0  00F5               	movwf	isalpha@c
  7890  09A1                     l2341:
  7891  09A1  01F4               	clrf	_isalpha$968
  7892  09A2  0AF4               	incf	_isalpha$968,f
  7893  09A3                     l2343:
  7894  09A3  307B               	movlw	123
  7895  09A4  0275               	subwf	isalpha@c,w
  7896  09A5  1803               	skipnc
  7897  09A6  29A8               	goto	u1171
  7898  09A7  29A9               	goto	u1170
  7899  09A8                     u1171:
  7900  09A8  29AF               	goto	l2347
  7901  09A9                     u1170:
  7902  09A9                     l2345:
  7903  09A9  3061               	movlw	97
  7904  09AA  0275               	subwf	isalpha@c,w
  7905  09AB  1803               	skipnc
  7906  09AC  29AE               	goto	u1181
  7907  09AD  29AF               	goto	u1180
  7908  09AE                     u1181:
  7909  09AE  29BA               	goto	l2351
  7910  09AF                     u1180:
  7911  09AF                     l2347:
  7912  09AF  0875               	movf	isalpha@c,w
  7913  09B0  160A  118A  27DC  120A  158A  	fcall	_isupper
  7914  09B5  1803               	btfsc	3,0
  7915  09B6  29B8               	goto	u1191
  7916  09B7  29B9               	goto	u1190
  7917  09B8                     u1191:
  7918  09B8  29BA               	goto	l2351
  7919  09B9                     u1190:
  7920  09B9                     l2349:
  7921  09B9  01F4               	clrf	_isalpha$968
  7922  09BA                     l2351:
  7923  09BA  0C74               	rrf	_isalpha$968,w
  7924  09BB                     l919:
  7925  09BB  0008               	return
  7926  09BC                     __end_of_isalpha:
  7927                           
  7928                           	psect	text51
  7929  17DC                     __ptext51:	
  7930 ;; *************** function _isupper *****************
  7931 ;; Defined at:
  7932 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\isupper.c"
  7933 ;; Parameters:    Size  Location     Type
  7934 ;;  c               1    wreg     unsigned char 
  7935 ;; Auto vars:     Size  Location     Type
  7936 ;;  c               1    3[COMMON] unsigned char 
  7937 ;; Return value:  Size  Location     Type
  7938 ;;		None               void
  7939 ;; Registers used:
  7940 ;;		wreg, status,2, status,0
  7941 ;; Tracked objects:
  7942 ;;		On entry : 0/0
  7943 ;;		On exit  : 0/0
  7944 ;;		Unchanged: 0/0
  7945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7946 ;;      Params:         0       0       0       0       0
  7947 ;;      Locals:         2       0       0       0       0
  7948 ;;      Temps:          0       0       0       0       0
  7949 ;;      Totals:         2       0       0       0       0
  7950 ;;Total ram usage:        2 bytes
  7951 ;; Hardware stack levels used: 1
  7952 ;; Hardware stack levels required when called: 1
  7953 ;; This function calls:
  7954 ;;		Nothing
  7955 ;; This function is called by:
  7956 ;;		_ctype_testing
  7957 ;;		_isalpha
  7958 ;; This function uses a non-reentrant model
  7959 ;;
  7960                           
  7961                           
  7962                           ;psect for function _isupper
  7963  17DC                     _isupper:
  7964                           
  7965                           ;incstack = 0
  7966                           ; Regs used in _isupper: [wreg+status,2+status,0]
  7967                           ;isupper@c stored from wreg
  7968  17DC  00F3               	movwf	isupper@c
  7969  17DD                     l2269:
  7970  17DD  01F2               	clrf	_isupper$987
  7971  17DE                     l2271:
  7972  17DE  305B               	movlw	91
  7973  17DF  0273               	subwf	isupper@c,w
  7974  17E0  1803               	skipnc
  7975  17E1  2FE3               	goto	u1021
  7976  17E2  2FE4               	goto	u1020
  7977  17E3                     u1021:
  7978  17E3  2FEC               	goto	l2277
  7979  17E4                     u1020:
  7980  17E4                     l2273:
  7981  17E4  3041               	movlw	65
  7982  17E5  0273               	subwf	isupper@c,w
  7983  17E6  1C03               	skipc
  7984  17E7  2FE9               	goto	u1031
  7985  17E8  2FEA               	goto	u1030
  7986  17E9                     u1031:
  7987  17E9  2FEC               	goto	l2277
  7988  17EA                     u1030:
  7989  17EA                     l2275:
  7990  17EA  01F2               	clrf	_isupper$987
  7991  17EB  0AF2               	incf	_isupper$987,f
  7992  17EC                     l2277:
  7993  17EC  0C72               	rrf	_isupper$987,w
  7994  17ED                     l959:
  7995  17ED  0008               	return
  7996  17EE                     __end_of_isupper:
  7997                           
  7998                           	psect	text52
  7999  09D8                     __ptext52:	
  8000 ;; *************** function _myIsr *****************
  8001 ;; Defined at:
  8002 ;;		line 24 in file "main.c"
  8003 ;; Parameters:    Size  Location     Type
  8004 ;;		None
  8005 ;; Auto vars:     Size  Location     Type
  8006 ;;		None
  8007 ;; Return value:  Size  Location     Type
  8008 ;;                  1    wreg      void 
  8009 ;; Registers used:
  8010 ;;		status,0
  8011 ;; Tracked objects:
  8012 ;;		On entry : 0/0
  8013 ;;		On exit  : 0/0
  8014 ;;		Unchanged: 0/0
  8015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8016 ;;      Params:         0       0       0       0       0
  8017 ;;      Locals:         0       0       0       0       0
  8018 ;;      Temps:          2       0       0       0       0
  8019 ;;      Totals:         2       0       0       0       0
  8020 ;;Total ram usage:        2 bytes
  8021 ;; Hardware stack levels used: 1
  8022 ;; This function calls:
  8023 ;;		Nothing
  8024 ;; This function is called by:
  8025 ;;		Interrupt level 1
  8026 ;; This function uses a non-reentrant model
  8027 ;;
  8028                           
  8029                           
  8030                           ;psect for function _myIsr
  8031  09D8                     _myIsr:
  8032  09D8                     i1l2119:
  8033                           
  8034                           ;main.c: 27:     if(INTCONbits.INTE && INTCONbits.INTF)
  8035  09D8  1E0B               	btfss	11,4	;volatile
  8036  09D9  29DB               	goto	u91_21
  8037  09DA  29DC               	goto	u91_20
  8038  09DB                     u91_21:
  8039  09DB  29F0               	goto	i1l152
  8040  09DC                     u91_20:
  8041  09DC                     i1l2121:
  8042  09DC  1C8B               	btfss	11,1	;volatile
  8043  09DD  29DF               	goto	u92_21
  8044  09DE  29E0               	goto	u92_20
  8045  09DF                     u92_21:
  8046  09DF  29F0               	goto	i1l152
  8047  09E0                     u92_20:
  8048  09E0                     i1l2123:
  8049                           
  8050                           ;main.c: 28:     {;main.c: 29:         INTCONbits.INTF = 0;
  8051  09E0  108B               	bcf	11,1	;volatile
  8052  09E1                     i1l2125:
  8053                           
  8054                           ;main.c: 30:         PORTBbits.RB1 = ~PORTBbits.RB1;
  8055  09E1  1003               	clrc
  8056  09E2  1283               	bcf	3,5	;RP0=0, select bank0
  8057  09E3  1303               	bcf	3,6	;RP1=0, select bank0
  8058  09E4  1C86               	btfss	6,1	;volatile
  8059  09E5  1403               	setc
  8060  09E6  1803               	btfsc	3,0
  8061  09E7  29E9               	goto	u93_21
  8062  09E8  29ED               	goto	u93_20
  8063  09E9                     u93_21:
  8064  09E9  1283               	bcf	3,5	;RP0=0, select bank0
  8065  09EA  1303               	bcf	3,6	;RP1=0, select bank0
  8066  09EB  1486               	bsf	6,1	;volatile
  8067  09EC  29F0               	goto	u94_24
  8068  09ED                     u93_20:
  8069  09ED  1283               	bcf	3,5	;RP0=0, select bank0
  8070  09EE  1303               	bcf	3,6	;RP1=0, select bank0
  8071  09EF  1086               	bcf	6,1	;volatile
  8072  09F0                     u94_24:
  8073  09F0                     i1l152:
  8074  09F0  0871               	movf	??_myIsr+1,w
  8075  09F1  008A               	movwf	10
  8076  09F2  0E70               	swapf	??_myIsr,w
  8077  09F3  0083               	movwf	3
  8078  09F4  0EFE               	swapf	btemp,f
  8079  09F5  0E7E               	swapf	btemp,w
  8080  09F6  0009               	retfie
  8081  09F7                     __end_of_myIsr:
  8082  007E                     btemp	set	126	;btemp
  8083  007E                     wtemp0	set	126
  8084                           
  8085                           	psect	intentry
  8086  0004                     __pintentry:	
  8087                           ;incstack = 0
  8088 ;; hardware stack exceeded
  8089                           ; Regs used in _myIsr: [status,0]
  8090                           
  8091  0004                     interrupt_function:
  8092  007E                     saved_w	set	btemp
  8093  0004  00FE               	movwf	btemp
  8094  0005  0E03               	swapf	3,w
  8095  0006  00F0               	movwf	??_myIsr
  8096  0007  080A               	movf	10,w
  8097  0008  00F1               	movwf	??_myIsr+1
  8098  0009  120A  158A  29D8   	ljmp	_myIsr
  8099                           
  8100                           	psect	config
  8101                           
  8102                           ;Config register CONFIG @ 0x2007
  8103                           ;	Oscillator Selection bits
  8104                           ;	FOSC = HS, HS oscillator
  8105                           ;	Watchdog Timer Enable bit
  8106                           ;	WDTE = OFF, WDT disabled
  8107                           ;	Power-up Timer Enable bit
  8108                           ;	PWRTE = ON, PWRT enabled
  8109                           ;	Brown-out Reset Enable bit
  8110                           ;	BOREN = ON, BOR enabled
  8111                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  8112                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
  8113                           ;	Data EEPROM Memory Code Protection bit
  8114                           ;	CPD = OFF, Data EEPROM code protection off
  8115                           ;	Flash Program Memory Write Enable bits
  8116                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  8117                           ;	In-Circuit Debugger Mode bit
  8118                           ;	DEBUG = 0x1, unprogrammed default
  8119                           ;	Flash Program Memory Code Protection bit
  8120                           ;	CP = OFF, Code protection off
  8121  2007                     	org	8199
  8122  2007  3FF2               	dw	16370

Data Sizes:
    Strings     417
    Constant    10
    Data        32
    BSS         94
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     46      80
    BANK1            80      0      80
    BANK3            96      0      10
    BANK2            96      0       0

Pointer List with Targets:

    status	PTR int  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    str_unsigned	PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 10
		 -> string_testing@string(BANK0[10]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 10
		 -> string_testing@string(BANK0[10]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_42(CODE[6]), 

    strcpy@to	PTR unsigned char  size(1) Largest target is 10
		 -> string_testing@string(BANK0[10]), 

    strcpy@cp	PTR unsigned char  size(1) Largest target is 10
		 -> string_testing@string(BANK0[10]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_36(CODE[5]), 

    strcmp@s1	PTR const unsigned char  size(1) Largest target is 10
		 -> string_testing@string(BANK0[10]), 

    strchr@ptr	PTR const unsigned char  size(1) Largest target is 10
		 -> string_testing@string(BANK0[10]), 

    strcat@from	PTR const unsigned char  size(1) Largest target is 10
		 -> string_testing@str(BANK0[10]), 

    strcat@to	PTR unsigned char  size(1) Largest target is 10
		 -> string_testing@string(BANK0[10]), 

    strcat@cp	PTR unsigned char  size(1) Largest target is 10
		 -> string_testing@string(BANK0[10]), 

    memset@p1	PTR void  size(1) Largest target is 10
		 -> string_testing@string(BANK0[10]), 

    memset@p	PTR unsigned char  size(1) Largest target is 10
		 -> string_testing@string(BANK0[10]), 

    memmove@d1	PTR void  size(1) Largest target is 10
		 -> string_testing@string(BANK0[10]), 

    memmove@d	PTR unsigned char  size(1) Largest target is 10
		 -> string_testing@string(BANK0[10]), 

    memmove@s1	PTR const void  size(2) Largest target is 7
		 -> STR_48(CODE[7]), 

    memmove@s	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_48(CODE[7]), 

    memcpy@d1	PTR void  size(1) Largest target is 10
		 -> string_testing@string(BANK0[10]), 

    memcpy@d	PTR unsigned char  size(1) Largest target is 10
		 -> string_testing@string(BANK0[10]), 

    memcpy@s1	PTR const void  size(2) Largest target is 6
		 -> STR_45(CODE[6]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_45(CODE[6]), 

    memcmp@s2	PTR const void  size(2) Largest target is 3
		 -> STR_39(CODE[3]), 

    memcmp@s1	PTR const void  size(1) Largest target is 10
		 -> string_testing@string(BANK0[10]), 

    memchr@p	PTR const void  size(1) Largest target is 10
		 -> string_testing@string(BANK0[10]), 

    memchr@s	PTR unsigned char  size(1) Largest target is 10
		 -> string_testing@string(BANK0[10]), 

    utoa@buf	PTR unsigned char  size(1) Largest target is 5
		 -> ad_char_val(BANK0[5]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 5
		 -> ad_char_val(BANK0[5]), 

    itoa@buf	PTR unsigned char  size(1) Largest target is 5
		 -> ad_char_val(BANK0[5]), 

    itoa@cp	PTR unsigned char  size(1) Largest target is 5
		 -> ad_char_val(BANK0[5]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_50(CODE[3]), STR_49(CODE[7]), STR_47(CODE[3]), STR_46(CODE[8]), 
		 -> STR_44(CODE[3]), STR_43(CODE[7]), STR_41(CODE[3]), STR_40(CODE[7]), 
		 -> STR_38(CODE[3]), STR_37(CODE[7]), STR_35(CODE[3]), STR_34(CODE[7]), 
		 -> STR_33(CODE[11]), STR_32(CODE[7]), STR_31(CODE[3]), STR_30(CODE[7]), 
		 -> STR_29(CODE[3]), STR_28(CODE[7]), STR_27(CODE[3]), STR_26(CODE[7]), 
		 -> STR_25(CODE[11]), STR_24(CODE[17]), STR_23(CODE[14]), STR_22(CODE[15]), 
		 -> STR_21(CODE[15]), STR_20(CODE[15]), STR_19(CODE[15]), STR_18(CODE[15]), 
		 -> STR_17(CODE[15]), STR_16(CODE[15]), STR_15(CODE[15]), STR_14(CODE[15]), 
		 -> STR_13(CODE[16]), STR_12(CODE[15]), STR_11(CODE[15]), STR_10(CODE[15]), 
		 -> STR_9(CODE[15]), STR_8(CODE[10]), STR_7(CODE[17]), STR_6(CODE[9]), 
		 -> STR_5(CODE[17]), STR_4(CODE[7]), STR_3(CODE[17]), STR_2(CODE[13]), 
		 -> STR_1(CODE[15]), 

    printf@cp	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_51(CODE[7]), NULL(NULL[0]), ?_printf(BANK0[2]), string_testing@string(BANK0[10]), 
		 -> ad_char_val(BANK0[5]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    sp__memset	PTR void  size(1) Largest target is 10
		 -> string_testing@string(BANK0[10]), 

    sp__memmove	PTR void  size(1) Largest target is 10
		 -> string_testing@string(BANK0[10]), 

    sp__memcpy	PTR void  size(1) Largest target is 10
		 -> string_testing@string(BANK0[10]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 10
		 -> string_testing@string(BANK0[10]), 

    sp__memchr	PTR void  size(1) Largest target is 10
		 -> NULL(NULL[0]), string_testing@string(BANK0[10]), 

    sp__strchr	PTR unsigned char  size(1) Largest target is 10
		 -> NULL(NULL[0]), string_testing@string(BANK0[10]), 

    sp__strcat	PTR unsigned char  size(1) Largest target is 10
		 -> string_testing@string(BANK0[10]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 5
		 -> ad_char_val(BANK0[5]), 

    amost1@value	PTR unsigned int  size(1) Largest target is 2
		 -> ad_value(BANK0[2]), 


Critical Paths under _main in COMMON

    _string_testing->_lcd_goto
    _string_testing->_memmove
    _stdlib_testing->_lcd_goto
    _show_ad->_lcd_goto
    _utoa->___lwdiv
    _math_testing->_lcd_goto
    _lcd_init_8bits->_lcd_cmd
    _lcd_init_4bits->_lcd_cmd
    _ctype_testing->_lcd_goto
    _printf->___lwdiv
    _printf->_memmove
    _putch->_lcd_char
    _lcd_char->_lcd_byte_4bits
    ___lwmod->___lwdiv
    _lcd_goto->_lcd_cmd
    _lcd_clear->_lcd_cmd
    _lcd_cmd->_lcd_byte_4bits
    _lcd_byte_4bits->_lcd_send_nibble
    _isxdigit->_isdigit
    _isalnum->_isalpha
    _isalpha->_isupper

Critical Paths under _myIsr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_string_testing
    _string_testing->_printf
    _stdlib_testing->_printf
    _show_ad->_printf
    _itoa->_utoa
    _utoa->___lwmod
    _math_testing->_printf
    _ctype_testing->_printf
    _printf->___lwmod

Critical Paths under _myIsr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _myIsr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myIsr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myIsr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   62840
                      _ctype_testing
                               _init
                           _lcd_init
                       _math_testing
                            _show_ad
                     _stdlib_testing
                     _string_testing
 ---------------------------------------------------------------------------------
 (1) _string_testing                                      24    24      0   14267
                                             22 BANK0     24    24      0
                          _lcd_clear
                           _lcd_goto
                             _memchr
                             _memcmp
                             _memcpy
                            _memmove
                             _memset
                             _printf
                             _strcat
                             _strchr
                             _strcmp
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               5     3      2     123
                                              2 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               5     3      2     200
                                              2 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (3) _strcmp                                               7     5      2     200
                                              2 COMMON     7     5      2
 ---------------------------------------------------------------------------------
 (2) _strchr                                               3     1      2     197
                                              2 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (2) _strcat                                               4     3      1     207
                                              2 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _memset                                               7     3      4     297
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) _memmove                                             12     8      4     565
                                              2 COMMON     8     4      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (3) _memcpy                                              10     6      4     448
                                              2 COMMON     5     1      4
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (3) _memcmp                                               7     3      4     297
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) _memchr                                               7     3      4     297
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (1) _stdlib_testing                                       3     3      0   10986
                                             22 BANK0      3     3      0
                          _lcd_clear
                           _lcd_goto
                             _printf
 ---------------------------------------------------------------------------------
 (1) _show_ad                                              3     3      0   13356
                                             22 BANK0      3     3      0
                             _amost1
                               _itoa
                          _lcd_clear
                           _lcd_goto
                             _printf
 ---------------------------------------------------------------------------------
 (2) _itoa                                                 7     3      4    2315
                                             15 BANK0      6     2      4
                               _utoa
 ---------------------------------------------------------------------------------
 (3) _utoa                                                 9     5      4    1866
                                              6 BANK0      9     5      4
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) _amost1                                               2     2      0      55
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _math_testing                                         3     3      0   10986
                                             22 BANK0      3     3      0
                          _lcd_clear
                           _lcd_goto
                             _printf
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0    1064
                     _lcd_init_4bits
                     _lcd_init_8bits
 ---------------------------------------------------------------------------------
 (2) _lcd_init_8bits                                       0     0      0     488
                          _lcd_clear
                            _lcd_cmd
                      _lcd_delay_2ms
                     _lcd_delay_40ms
 ---------------------------------------------------------------------------------
 (2) _lcd_init_4bits                                       0     0      0     576
                          _lcd_clear
                            _lcd_cmd
                      _lcd_delay_2ms
                     _lcd_delay_40ms
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (3) _lcd_delay_40ms                                       3     3      0       0
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ctype_testing                                        3     3      0   12181
                                             22 BANK0      3     3      0
                            _isalnum
                            _isalpha
                            _iscntrl
                            _isgraph
                            _islower
                            _isprint
                            _ispunct
                            _isspace
                            _isupper
                           _isxdigit
                          _lcd_clear
                           _lcd_goto
                             _printf
                            _tolower
                            _toupper
 ---------------------------------------------------------------------------------
 (2) _toupper                                              2     2      0      45
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _tolower                                              1     1      0      45
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _printf                                              22    18      4    6293
                                              6 BANK0     16    12      4
                            ___lwdiv
                            ___lwmod
                            _isalnum (ARG)
                            _isalpha (ARG)
                            _iscntrl (ARG)
                            _isgraph (ARG)
                            _islower (ARG)
                            _isprint (ARG)
                            _ispunct (ARG)
                            _isspace (ARG)
                            _isupper (ARG)
                           _isxdigit (ARG)
                             _memchr (ARG)
                             _memcmp (ARG)
                             _memcpy (ARG)
                            _memmove (ARG)
                             _memset (ARG)
                              _putch
                             _strchr (ARG)
                             _strcmp (ARG)
                             _strcpy (ARG)
                             _strlen (ARG)
                            _tolower (ARG)
                            _toupper (ARG)
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0     266
                                              8 COMMON     1     1      0
                           _lcd_char
 ---------------------------------------------------------------------------------
 (4) _lcd_char                                             1     1      0     244
                                              7 COMMON     1     1      0
                     _lcd_byte_4bits
                     _lcd_byte_8bits
                     _lcd_delay_40us
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     592
                                              0 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     618
                                              2 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) _lcd_goto                                             4     3      1    4449
                                              8 COMMON     2     1      1
                                              0 BANK0      2     2      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_clear                                            0     0      0     244
                            _lcd_cmd
                      _lcd_delay_2ms
 ---------------------------------------------------------------------------------
 (3) _lcd_delay_2ms                                        2     2      0       0
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _lcd_cmd                                              1     1      0     244
                                              7 COMMON     1     1      0
                     _lcd_byte_4bits
                     _lcd_byte_8bits
                     _lcd_delay_40us
 ---------------------------------------------------------------------------------
 (5) _lcd_delay_40us                                       1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _lcd_byte_8bits                                       1     1      0      22
                                              2 COMMON     1     1      0
                       _lcd_en_pulse
 ---------------------------------------------------------------------------------
 (5) _lcd_byte_4bits                                       4     4      0     178
                                              3 COMMON     4     4      0
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (6) _lcd_send_nibble                                      1     1      0      88
                                              2 COMMON     1     1      0
                       _lcd_en_pulse
 ---------------------------------------------------------------------------------
 (6) _lcd_en_pulse                                         0     0      0       0
                      _lcd_delay_1us
 ---------------------------------------------------------------------------------
 (7) _lcd_delay_1us                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _isxdigit                                             2     2      0     202
                                              4 COMMON     2     2      0
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      68
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _isspace                                              2     2      0      90
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _ispunct                                              1     1      0     120
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _isprint                                              2     2      0      68
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _islower                                              2     2      0      68
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _isgraph                                              2     2      0      68
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _iscntrl                                              1     1      0      15
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _isalnum                                              2     2      0     248
                                              6 COMMON     2     2      0
                            _isalpha
 ---------------------------------------------------------------------------------
 (2) _isalpha                                              2     2      0     158
                                              4 COMMON     2     2      0
                            _isupper
 ---------------------------------------------------------------------------------
 (2) _isupper                                              2     2      0      68
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _myIsr                                                2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ctype_testing
     _isalnum
       _isalpha
         _isupper
     _isalpha
     _iscntrl
     _isgraph
     _islower
     _isprint
     _ispunct
     _isspace
     _isupper
     _isxdigit
       _isdigit
     _lcd_clear
       _lcd_cmd
         _lcd_byte_4bits
           _lcd_send_nibble
             _lcd_en_pulse
               _lcd_delay_1us
         _lcd_byte_8bits
           _lcd_en_pulse
         _lcd_delay_40us
       _lcd_delay_2ms
     _lcd_goto
       _lcd_cmd
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _isalnum (ARG)
       _isalpha (ARG)
       _iscntrl (ARG)
       _isgraph (ARG)
       _islower (ARG)
       _isprint (ARG)
       _ispunct (ARG)
       _isspace (ARG)
       _isupper (ARG)
       _isxdigit (ARG)
       _memchr (ARG)
       _memcmp (ARG)
       _memcpy (ARG)
       _memmove (ARG)
       _memset (ARG)
       _putch (ARG)
         _lcd_char
           _lcd_byte_4bits
           _lcd_byte_8bits
           _lcd_delay_40us
       _strchr (ARG)
       _strcmp (ARG)
       _strcpy (ARG)
       _strlen (ARG)
       _tolower (ARG)
       _toupper (ARG)
     _tolower
     _toupper
   _init
   _lcd_init
     _lcd_init_4bits
       _lcd_clear
       _lcd_cmd
       _lcd_delay_2ms
       _lcd_delay_40ms
       _lcd_send_nibble
     _lcd_init_8bits
       _lcd_clear
       _lcd_cmd
       _lcd_delay_2ms
       _lcd_delay_40ms
   _math_testing
     _lcd_clear
     _lcd_goto
     _printf
   _show_ad
     _amost1
     _itoa
       _utoa
         ___lwdiv
         ___lwmod
     _lcd_clear
     _lcd_goto
     _printf
   _stdlib_testing
     _lcd_clear
     _lcd_goto
     _printf
   _string_testing
     _lcd_clear
     _lcd_goto
     _memchr
     _memcmp
     _memcpy
     _memmove
     _memset
     _printf
     _strcat
     _strchr
     _strcmp
     _strcpy
     _strlen

 _myIsr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       A       9       10.4%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      50       7      100.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     2E      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      B6      12        0.0%
ABS                  0      0      B6       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Jan 28 17:39:27 2022

             lcd_cmd@data 0077              lcd_char@data 0077                         pc 0002  
                      fsr 0004                       l302 17C6                       l303 17CB  
                     l312 0D11                       l320 1755                       l170 0AA8  
                     l323 1791                       l315 0DE6                       l155 098F  
                     l173 0E49                       l270 176F                       l182 0642  
                     l158 099F                       l335 0C1D                       l167 175D  
                     l264 1749                       l176 0CD3                       l273 17AB  
                     l290 0A15                       l267 174F                       l179 0C96  
                     l276 08CD                       l293 1785                       l453 0FFF  
                     l189 0380                       l287 0B75                       l297 17B6  
                     l298 17BB                       l912 09D7                       l729 0D55  
                     l922 177A                       l739 0C59                       l932 08DF  
                     l919 09BB                       l927 17FF                       l937 08F1  
                     l954 096C                       l971 0903                       l949 06FF  
                     l966 0AD0                       l959 17ED                       l983 0EA4  
                     l991 0A5B                       l985 0EBB                       l977 0A81  
                     l988 0A4C                       l999 0D9D                       u420 06D2  
                     u421 06D1                       u430 06D8                       u431 06D7  
                     u440 06DE                       u441 06DD                       u450 06E4  
                     u451 06E3                       u460 06EA                       u461 06E9  
                     u470 06F0                       u471 06EF                       u480 06F6  
                     u481 06F5                       u490 06FC                       u491 06FB  
                     u580 1777                       u660 17D3                       u581 1776  
                     u661 17D2                       u670 17D9                       u671 17D8  
                     u680 090B                       u681 090A                       u690 0911  
                     u691 0910                       u970 0B50                       u971 0B4F  
                     u980 0B5C                       u981 0B5B                       u990 0B64  
                     u991 0B63                       fsr0 0004                       indf 0000  
             lcd_goto@col 0078               lcd_goto@lin 0079                      l1006 0BE2  
                    l1022 0A36                      l1031 0B21                      l1016 06CA  
                    l1034 093F                      l1051 0AF8                      l1036 0954  
                    l1061 17DB                      l1045 0BA9                      l1065 0916  
                    l1057 0985                      l1403 179E                      l2221 08C5  
                    l2301 0D2C                      l3101 0E6E                      l2215 1746  
                    l2231 0B5C                      l2223 0B4C                      l2303 0D3D  
                    l2311 0D51                      l3111 0EA0                      l3103 0E72  
                    l2217 08BD                      l2241 0B68                      l2233 0B5F  
                    l2225 0B50                      l2305 0D43                      l2401 0993  
                    l3113 0EA8                      l3105 0E74                      l2219 08C0  
                    l2243 0B6C                      l2235 0B60                      l2227 0B55  
                    l2251 09F8                      l2307 0D44                      l3211 0F93  
                    l3203 0F63                      l3115 0EAF                      l3107 0E87  
                    l3131 0A6E                      l3123 0A5F                      l2341 09A1  
                    l2245 0B6F                      l2237 0B64                      l2229 0B58  
                    l2253 0A04                      l2261 1780                      l3141 0BED  
                    l2309 0D4B                      l3213 0F99                      l3221 0FE5  
                    l3301 0403                      l3117 0EB1                      l3109 0E9A  
                    l3133 0A73                      l3125 0A5F                      l2271 17DE  
                    l2351 09BA                      l2343 09A3                      l2511 17F6  
                    l2247 0B70                      l2239 0B67                      l2255 0A0A  
                    l3143 0BF5                      l3071 0C1E                      l2263 17BD  
                    l3215 0FA0                      l3207 0F83                      l3311 045C  
                    l3303 0411                      l3119 0EB7                      l3127 0A63  
                    l3231 0BB6                      l2273 17E4                      l2345 09A9  
                    l1625 1771                      l2513 17FC                      l2521 0958  
                    l2361 0900                      l2257 0A0F                      l2249 174A  
                    l2281 1766                      l3145 0BFD                      l3137 0BE4  
                    l3081 0C38                      l3073 0C26                      l2265 17C0  
                    l2337 1757                      l3217 0FD4                      l3209 0F8D  
                    l3161 0ED0                      l3321 0499                      l3313 046A  
                    l3305 0416                      l3129 0A6A                      l3241 0BE1  
                    l3233 0BC2                      l2601 0948                      l3401 00E4  
                    l2275 17EA                      l2347 09AF                      l1627 1777  
                    l2515 17FE                      l2507 17EF                      l1571 06D2  
                    l2523 095E                      l2363 0902                      l2355 08F3  
                    l2259 177C                      l2283 17AD                      l2339 1786  
                    l3139 0BE5                      l2291 0D14                      l3083 0C42  
                    l3075 0C29                      l3219 0FDA                      l3171 0EE8  
                    l3163 0ED2                      l3155 0EBC                      l3331 04F2  
                    l3323 04B5                      l3315 046F                      l3307 041D  
                    l3251 0E08                      l2611 0A38                      l3235 0BC8  
                    l3227 0BAD                      l3411 012A                      l3403 00F2  
                    l2277 17EC                      l2269 17DD                      l2349 09B9  
                    l1629 1779                      l2509 17F0                      l1581 06F0  
                    l1573 06D8                      l2525 0964                      l2357 08F4  
                    l2541 0ABE                      l2533 0AAA                      l2285 17B0  
                    l3149 0C05                      l2293 0D1A                      l3085 0C48  
                    l3077 0C30                      l3181 0F18                      l3173 0EF6  
                    l3165 0ED9                      l3157 0EC3                      l3341 0544  
                    l3333 050E                      l3325 04C3                      l3317 0476  
                    l3309 0440                      l3093 0E4D                      l3261 0E44  
                    l3253 0E10                      l3245 0DE7                      l2621 0A48  
                    l2613 0A3D                      l3237 0BCF                      l3229 0BB1  
                    l2701 064E                      l2605 094A                      l3421 0156  
                    l3413 0138                      l3405 00F7                      l3501 0B23  
                    l2551 08CF                      l1583 06F6                      l1575 06DE  
                    l2527 096A                      l2519 0956                      l2359 08FA  
                    l2543 0AC4                      l2535 0AAC                      l2295 0D1D  
                    l3087 0C4F                      l3079 0C34                      l3191 0F54  
                    l3175 0EFE                      l3167 0EDD                      l3159 0EC9  
                    l1671 17CD                      l3351 059D                      l3343 054B  
                    l3335 051C                      l3327 04C8                      l3319 0492  
                    l3095 0E51                      l3255 0E1B                      l3247 0DED  
                    l3271 0CCE                      l3263 0C97                      l2623 0A5A  
                    l2615 0A46                      l3239 0BD3                      l2711 0691  
                    l2703 065C                      l2607 0953                      l2631 0977  
                    l3431 01B7                      l3423 0174                      l3415 013D  
                    l3407 0109                      l3511 0B3D                      l3503 0B28  
                    l2553 08D0                      l1577 06E4                      l1585 06FC  
                    l1569 06CC                      l2529 096B                      l2545 0ACE  
                    l2537 0AB2                      l2297 0D24                      l2289 0D12  
                    l3089 0C55                      l3193 0F58                      l3177 0F0D  
                    l3169 0EE3                      l3185 0F1F                      l1673 17D3  
                    l1681 0905                      l3361 05E6                      l3353 05B3  
                    l3345 0567                      l3337 0521                      l3329 04EB  
                    l3281 0C91                      l3273 0C5A                      l3097 0E64  
                    l3257 0E27                      l3249 0DFA                      l3265 0C9E  
                    l2721 06BD                      l2705 0672                      l2713 069E  
                    l2641 0B82                      l2633 097F                      l3441 01E3  
                    l3433 01C5                      l3425 0182                      l3417 0144  
                    l3409 0110                      l3513 0B42                      l3505 0B2E  
                    l2555 08D6                      l2571 08F0                      l2563 08E1  
                    l1579 06EA                      l2547 0ACF                      l2539 0AB8  
                    l2299 0D28                      l3195 0F5C                      l3187 0F48  
                    l3179 0F14                      l1675 17D9                      l1683 090B  
                    l3371 0620                      l3363 05ED                      l3355 05C1  
                    l3347 0575                      l3339 0528                      l3291 03B8  
                    l3283 0381                      l1851 0A9A                      l3275 0C61  
                    l3099 0E68                      l3259 0E36                      l3267 0CA9  
                    l2651 0D58                      l2715 06A4                      l2723 06C9  
                    l2707 0676                      l2731 0A23                      l2643 0B9D  
                    l2627 096E                      l3451 022A                      l3443 01FE  
                    l3435 01CA                      l3427 018E                      l3419 014F  
                    l3507 0B33                      l2581 09CB                      l2557 08DC  
                    l2565 08E2                      l1589 06FE                      l3197 0F61  
                    l3189 0F50                      l1677 17DA                      l1685 0911  
                    l3373 062F                      l3365 0606                      l3357 05C6  
                    l3349 0581                      l3293 03BD                      l3285 0388  
                    l1853 0A9C                      l1845 0A82                      l2741 0D9E  
                    l3277 0C6C                      l2397 0987                      l3269 0CC0  
                    l2653 0D6D                      l2661 0D8D                      l2717 06B3  
                    l2709 067A                      l2733 0A27                      l2645 0BA4  
                    l2637 0B77                      l2629 0973                      l3461 026E  
                    l3453 0249                      l3445 020C                      l3437 01D1  
                    l3429 0199                      l3381 005C                      l3509 0B38  
                    l2583 09D5                      l2575 09BD                      l2559 08DE  
                    l2567 08E8                      l1687 0915                      l3375 063D  
                    l3367 0614                      l3359 05CD                      l3295 03C4  
                    l3287 0393                      l1855 0A9E                      l1847 0A8D  
                    l3279 0C83                      l2399 098C                      l2663 0D9B  
                    l2719 06B9                      l2735 0A35                      l2727 0A17  
                    l2591 0AFF                      l2639 0B78                      l2671 0ADB  
                    l3471 02B4                      l3463 0275                      l3455 0257  
                    l3447 0211                      l3439 01DC                      l3391 00B2  
                    l3383 0073                      l2585 09D6                      l2577 09BF  
                    l2569 08EE                      l3369 0619                      l3297 03E0  
                    l3289 03AA                      l1857 0AA0                      l1849 0A91  
                    l2657 0D83                      l2649 0D57                      l2729 0A1C  
                    l2593 0B03                      l2673 0AE1                      l3481 02F3  
                    l3473 02BB                      l3465 028F                      l3457 025C  
                    l3449 0218                      l3393 00BC                      l3385 0081  
                    l3377 004A                      l2579 09C5                      l3555 0F37  
                    l3299 03E7                      l1859 0AA4                      l2739 0CD4  
                    l2659 0D87                      l2595 0B0C                      l2675 0AF7  
                    l2667 0AD2                      l3491 033D                      l3483 02FE  
                    l3475 02D9                      l3467 029D                      l3459 0263  
                    l3395 00C3                      l3387 0086                      l3379 0051  
                    l3557 0C0F                      l2597 0B14                      l2589 0AFA  
                    l2669 0AD7                      l3493 0348                      l3485 0305  
                    l3477 02E7                      l3469 02A2                      l3397 00CE  
                    l3389 009D                      l2599 093F                      l3495 036D  
                    l3487 0323                      l3479 02EC                      l3399 00D5  
                    l2697 0646                      l3497 037B                      l3489 0331  
                    l2699 064A                      l3499 0B22                      l2997 1750  
                    STR_1 073D                      STR_2 081D                      STR_3 071C  
                    STR_4 0869                      STR_5 071C                      STR_6 084A  
                    STR_7 071C                      STR_8 0840                      STR_9 0788  
                    u1000 0B6C                      u1001 0B6B                      u1020 17E4  
                    u1100 0D51                      u1021 17E3                      u1101 0D50  
                    u1030 17EA                      u1031 17E9                      u1015 09FB  
                    u1200 08FA                      u1040 0D1A                      u1201 08F9  
                    u1041 0D19                      u1210 0900                      u1211 08FF  
                    u1060 0D2C                      u1061 0D2B                      u1055 0D1E  
                    u2007 017C                      u1400 096A                      u1080 0D3D  
                    u1401 0969                      u1081 0D3C                      u2017 01BF  
                    u1170 09A9                      u1410 0AB2                      u1250 0993  
                    u1171 09A8                      u1411 0AB1                      u1075 0D2D  
                    u1251 0992                      u2107 0989                      u2027 0206  
                    u1180 09AF                      u1500 09C5                      u1420 0AB8  
                    u1181 09AE                      u1501 09C4                      u1421 0AB7  
                    u1085 0D39                      u2117 0C8B                      u2037 0251  
                    u1190 09B9                      u1510 09CB                      u1430 0ABE  
                    u1191 09B8                      u1511 09CA                      u1431 0ABD  
                    u1095 0D45                      u2207 060E                      u2127 17A4  
                    u2047 0297                      u1520 09D5                      u1360 17F6  
                    u1440 0AC4                      u1600 0B9D                      u1521 09D4  
                    u1361 17F5                      u1441 0AC3                      u2217 0637  
                    u2137 03B2                      u1601 0B9C                      u2057 02E1  
                    u1370 17FC                      u1450 0ACE                      u1530 0B0B  
                    u1610 0BA4                      u1371 17FB                      u1451 0ACD  
                    u2227 176A                      u2147 040B                      u1531 0B0A  
                    u1611 0BA3                      u2067 032B                      u1460 08D6  
                    u1380 095E                      u1620 0D6D                      u1700 06C9  
                    u1540 0B21                      u1461 08D5                      u1381 095D  
                    u2237 174C                      u2157 0464                      u1621 0D6C  
                    u1701 06C8                      u1541 0B20                      u2077 0375  
                    u1470 08DC                      u1390 0964                      u1630 0D9B  
                    u1710 0A35                      u1550 0948                      u1471 08DB  
                    u1391 0963                      u2167 04BD                      u2087 0CC8  
                    u1631 0D9A                      u1711 0A34                      u1551 0947  
                    u1480 08E8                      u1800 0C55                      u1560 0953  
                    u1640 0AF7                      u1481 08E7                      u1801 0C54  
                    u2177 0516                      u2097 0E3E                      u1561 0952  
                    u1641 0AF6                      u1490 08EE                      u1810 0E6E  
                    u1570 0A46                      u1491 08ED                      u2187 056F  
                    u1811 0E6D                      u1571 0A45                      u1900 0F8D  
                    u1820 0EA0                      u1580 0A5A                      u1660 065C  
                    u1901 0F8C                      u2197 05BB                      u1821 0E9F  
                    u1581 0A59                      u1661 065B                      u1750 0C26  
                    u1910 0F93                      u1830 0EB7                      u1670 0672  
                    u1590 097F                      u1751 0C25                      u1911 0F92  
                    u1831 0EB6                      u1671 0671                      u1591 097E  
                    u1920 0FE5                      u1840 0A63                      u1680 069D  
                    u1921 0FE4                      u1841 0A62                      u1681 069C  
                    u1665 0658                      u1770 0C38                      u1930 0FFF  
                    u1850 0EC9                      u1690 06A4                      u1771 0C37  
                    u1931 0FFE                      u1851 0EC8                      u1691 06A3  
                    u1675 066E                      u1780 0C42                      u1860 0EE3  
                    u1940 0BE1                      u1781 0C41                      u1765 0C2A  
                    u1861 0EE2                      u1941 0BE0                      u1870 0F0C  
                    u1950 0090                      u1871 0F0B                      u1880 0F58  
                    u1960 00A5                      u1785 0C3E                      u1881 0F57  
                    u1890 0F82                      u1795 0C49                      u1891 0F81  
                    u1895 0F7E                      u1977 007B                      u1987 00EC  
                    u1997 0132            ??_lcd_en_pulse 0072          ?_lcd_send_nibble 0070  
                    _main 0B22                      _init 0A82                      _var4 0059  
                    _var5 0058                      _var6 0057                      _var7 0056  
                    _itoa 0A5C                      btemp 007E                      _utoa 0E4A  
                    start 000C           ??_lcd_delay_2ms 0072           ??_lcd_delay_1us 0072  
                   ?_main 0070                     ?_init 0070                     ?_itoa 002F  
                   STR_10 07E2                     STR_11 0779                     STR_12 07C4  
                   STR_20 0797                     STR_21 075B                     STR_13 072D  
                   STR_30 0885                     STR_14 07A6                     STR_22 074C  
                   STR_31 0827                     STR_23 080F                     STR_15 07F1  
                   STR_24 071C                     STR_40 08A8                     STR_32 0870  
                   STR_16 07D3                     STR_41 0827                     STR_33 0835  
                   STR_25 082A                     STR_17 0800                     STR_50 0827  
                   STR_42 08AF                     STR_26 0893                     STR_34 087E  
                   STR_18 07B5                     STR_35 083D                     STR_27 0827  
                   STR_43 08A1                     STR_51 085B                     STR_19 076A  
                   STR_44 0827                     STR_36 08B5                     STR_28 088C  
                   STR_45 08AF                     STR_29 0827                     STR_37 0877  
                   STR_38 083D                     STR_46 0853                     STR_47 0827  
                   STR_39 08BA                     STR_48 0862                     STR_49 089A  
                   _CMCON 009C                     ?_utoa 0026           __end_of___lwdiv 0D56  
                   i1l152 09F0           __end_of___lwmod 0C5A                     _PORTA 0005  
                   _PORTB 0006                     _PORTC 0007                     _PORTD 0008  
                   _PORTE 0009                     _TRISA 0085                     _TRISB 0086  
                   _TRISC 0087                     _TRISD 0088                     _TRISE 0089  
                   u91_20 09DC                     u91_21 09DB                     u92_20 09E0  
                   u92_21 09DF                     u93_20 09ED                     u93_21 09E9  
                   u94_24 09F0           __end_of_lcd_cmd 17BC           __end_of_dpowers 071C  
         __end_of_isalpha 09BC                     _myIsr 09D8           __end_of_isdigit 0904  
         __end_of_isalnum 09D8           __end_of_memmove 06CB           __end_of_iscntrl 177B  
         __end_of_isgraph 1800                     _putch 1756           __end_of_islower 08E0  
         __end_of_isspace 096D            _stdlib_testing 0C97           __end_of_isprint 08F2  
         __end_of_ispunct 0700           __end_of_isupper 17EE                     pclath 000A  
         __end_of_show_ad 0E4A                     utoa@c 002D                     utoa@v 002B  
                   status 0003                     wtemp0 007E           __end_of_tolower 17DC  
         __end_of_toupper 0917      string_testing@string 0044           __initialization 000F  
            _str_unsigned 007B              __end_of_main 0B4B              __end_of_init 0AA9  
            __end_of_itoa 0A82              __end_of_utoa 0EBC          ??_lcd_delay_40ms 0072  
        ??_lcd_delay_40us 0072                    ??_main 007A                    ??_init 0072  
                  ??_itoa 0033             ?_math_testing 0070                    ??_utoa 002A  
  __end_of_stdlib_testing 0CD4                    _ADCON0 001F                    _ADCON1 009F  
                  _ADRESH 001E                    ?_myIsr 0070                    _ADRESL 009E  
                  ?_putch 0070                    i1l2121 09DC                    i1l2123 09E0  
                  i1l2125 09E1                    i1l2119 09D8                    _INTCON 000B  
        __end_of_lcd_char 17CC          __end_of_lcd_init 1756          __end_of_lcd_goto 0C1E  
                  _amost1 0986                 ??___lwdiv 0076                 ??___lwmod 0024  
                  _memchr 0A37                    _memcmp 0D56                    _memcpy 0BAA  
                  _memset 0A16          ??_lcd_byte_4bits 0073          ??_lcd_byte_8bits 0072  
    __end_of_lcd_en_pulse 08CE            ??_math_testing 0036                    _printf 0EBC  
               ??_lcd_cmd 0077                    _status 007A                    _strcat 0AF9  
                  _strchr 093E          ??_lcd_init_4bits 0078                    _strcmp 0B76  
                  _strcpy 0AD1                    _strlen 096D          ??_lcd_init_8bits 0078  
        __end_of_isxdigit 0AD1                 ??_isalpha 0074                 ??_isdigit 0072  
               ??_isalnum 0076                 ??_memmove 0076                 ??_iscntrl 0072  
               ??_isgraph 0072                 ??_islower 0072                    saved_w 007E  
               ??_isspace 0072                 ??_isprint 0072                 ??_ispunct 0072  
               ??_isupper 0072                 ??_show_ad 0036           ?_stdlib_testing 0070  
               ??_tolower 0072                 ??_toupper 0072   __end_of__initialization 0046  
  __size_of_ctype_testing 02C2            __pcstackCOMMON 0070              __pidataBANK0 1792  
            __pidataBANK1 092A             __end_of_myIsr 09F7             __end_of_putch 175E  
      __size_of_lcd_clear 000C                   ??_myIsr 0070                   ??_putch 0078  
              __pbssBANK0 004E                __pbssBANK1 00A0                __pbssBANK3 0190  
              __pmaintext 0B22                __pintentry 0004                   ?_amost1 0070  
                 ?_memchr 0072                   ?_memcmp 0072                   ?_memcpy 0072  
                 ?_memset 0072                   ?_printf 0026                   ?_strcat 0072  
                 ?_strchr 0072                   ?_strcmp 0072                   ?_strcpy 0072  
                 ?_strlen 0072             _ctype_testing 0381                 ?_lcd_char 0070  
               ?_lcd_init 0070                 ?_lcd_goto 0078                __stringtab 0700  
    __end_of_math_testing 0C97                 ?_isxdigit 0070   __size_of_string_testing 0337  
       __end_of_lcd_clear 1792  __size_of_lcd_send_nibble 002B     __size_of_lcd_en_pulse 0011  
                 ___lwdiv 0D12                   ___lwmod 0C1E           __size_of_amost1 001A  
   __end_of_lcd_delay_2ms 1770     __end_of_lcd_delay_1us 174A           __size_of_memchr 0025  
         __size_of_memcmp 0048           __size_of_memcpy 0039           __size_of_memset 0021  
          ?_ctype_testing 0070                   __ptext1 004A                   __ptext2 096D  
                 __ptext3 0AD1                   __ptext4 0B76                   __ptext5 093E  
                 __ptext6 0AF9                   __ptext7 0A16                   __ptext8 0643  
                 __ptext9 0BAA                   _lcd_cmd 17AC           __size_of_printf 0144  
         __size_of_strcat 0029           __size_of_strchr 0017           __size_of_strcmp 0034  
         __size_of_strcpy 0028           __size_of_strlen 0019                   _neg_abs 0052  
                 _dpowers 0712                   _isalpha 09A0                   _isdigit 08F2  
                 _isalnum 09BC                   _memmove 0643                   _iscntrl 1770  
                 _isgraph 17EE        lcd_byte_4bits@data 0075                   _islower 08CE  
                 _isspace 0955                   _isprint 08E0                   _ispunct 06CB  
                 _isupper 17DC                   _pos_abs 0054                   _show_ad 0DE7  
              _long_char1 005B                _long_char2 005A                _random_num 00D8  
              ??_lcd_char 0077                   _tolower 17CC                   clrloop0 175F  
              ??_lcd_init 0078                ??_lcd_goto 0020                   _toupper 0904  
    end_of_initialization 0046                   memchr@n 0072                   memchr@p 0077  
                 memchr@s 0078                   memchr@v 0074                   memcmp@n 0074  
                 memcpy@d 0023                   memcpy@n 0074                   memcpy@s 0021  
                 itoa@buf 0034                   memset@c 0072                   itoa@val 002F  
                 memset@n 0074                   memset@p 0077              _lcd_en_pulse 08BD  
          _unsigned_value 006C                ??_isxdigit 0074        lcd_byte_8bits@data 0072  
                 printf@c 0035                   printf@f 0026              __pstringtext 0700  
                 utoa@buf 002E                   utoa@val 0026                   strcmp@r 0077  
                 strlen@s 0075                 _PORTBbits 0006                 _PORTEbits 0009  
        ??_stdlib_testing 0036               _ad_char_val 005D       string_testing@F1251 00E6  
     string_testing@F1253 00DC           ??_ctype_testing 0036            __end_of_amost1 09A0  
       ??_lcd_send_nibble 0072            __end_of_memchr 0A5C            __end_of_memcmp 0D9E  
          __end_of_memcpy 0BE3            __end_of_memset 0A37            __end_of_printf 1000  
          __end_of_strcat 0B22            __end_of_strchr 0955            __end_of_strcmp 0BAA  
          __end_of_strcpy 0AF9            __end_of_strlen 0986       start_initialization 000F  
 __size_of_lcd_delay_40ms 000E   __size_of_lcd_delay_40us 0006     __size_of_math_testing 003D  
          _string_testing 004A                init_fetch0 0917                  ??_amost1 0072  
             __pdataBANK0 0064               __pdataBANK1 00DC                  ??_memchr 0076  
                ??_memcmp 0076                  ??_memcpy 0076                  ??_memset 0076  
                ??_printf 002A                  ??_strcat 0073                  ??_strchr 0074  
                ??_strcmp 0074                  ??_strcpy 0074                  ??_strlen 0074  
            _math_testing 0C5A               __pbssCOMMON 007A                 ___latbits 0002  
           __pcstackBANK0 0020   __size_of_lcd_byte_4bits 001F   __size_of_lcd_byte_8bits 000B  
 __size_of_lcd_init_4bits 0049   __size_of_lcd_init_8bits 003E         __size_of_lcd_char 0010  
       __size_of_lcd_init 0006         __size_of_lcd_goto 003B    __end_of_string_testing 0381  
        ___lwdiv@dividend 0074         __size_of_isxdigit 0028                  ?___lwdiv 0072  
                ?___lwmod 0020                 _lcd_clear 1786                  ?_lcd_cmd 0070  
                ?_isalpha 0070                  ?_isdigit 0070                  ?_isalnum 0070  
                ?_memmove 0072                  ?_iscntrl 0070                  ?_isgraph 0070  
                ?_islower 0070                  ?_isspace 0070                  ?_isprint 0070  
                ?_ispunct 0070                  ?_isupper 0070                  ?_show_ad 0070  
        ___lwdiv@quotient 0077                  ?_tolower 0070            __size_of_myIsr 001F  
                ?_toupper 0070            __size_of_putch 0008                 _int_value 006E  
       interrupt_function 0004                 clear_ram0 175E           ?_string_testing 0070  
    lcd_byte_4bits@nibble 0076                ?_lcd_clear 0070       lcd_send_nibble@data 0072  
              _ADCON0bits 001F               __stringbase 0712                printf@flag 002E  
              printf@prec 002F                 _str_float 0190               _float_value 0064  
          _lcd_delay_40ms 179E            _lcd_delay_40us 174A    __size_of_lcd_delay_2ms 000A  
  __size_of_lcd_delay_1us 0004           _lcd_send_nibble 0B4B                 memcpy@tmp 0020  
            _isxdigit$995 0074                 memmove@d1 0020                 memmove@s1 0072  
        __size_of___lwdiv 0044          __size_of___lwmod 003C               _isalpha$968 0074  
      __end_of__stringtab 0712               _isdigit$998 0072                  _ad_value 0062  
  __end_of_lcd_delay_40ms 17AC    __end_of_lcd_delay_40us 1750          __size_of_lcd_cmd 0010  
             _isalnum$964 0076                strcat@from 0072          __size_of_isalpha 001C  
        __size_of_isdigit 0012          __size_of_isalnum 001C          __size_of_memmove 0088  
        __size_of_iscntrl 000B          __size_of_isgraph 0012           ___lwdiv@divisor 0072  
        __size_of_islower 0012          __size_of_isspace 0018           ___lwdiv@counter 0079  
        __size_of_isprint 0012          __size_of_ispunct 0035                  __ptext10 0D56  
                __ptext11 0A37                  __ptext20 0D9E                  __ptext12 0C97  
                __ptext21 179E                  __ptext13 0DE7                  __ptext30 0D12  
                __ptext22 0A82                  __ptext14 0A5C                  __ptext31 0BE3  
                __ptext23 0381                  __ptext15 0E4A                  __ptext40 1746  
                __ptext32 1786                  __ptext24 0904                  __ptext16 0986  
                __ptext41 0AA9                  __ptext33 1766                  __ptext25 17CC  
                __ptext17 0C5A                  __ptext50 09A0                  __ptext42 08F2  
                __ptext34 17AC                  __ptext26 0EBC                  __ptext18 1750  
                __ptext51 17DC                  __ptext43 0955                  __ptext35 174A  
                __ptext27 1756                  __ptext19 0CD4                  __ptext52 09D8  
                __ptext44 06CB                  __ptext36 177B                  __ptext28 17BC  
                __ptext45 08E0                  __ptext37 09F7                  __ptext29 0C1E  
                __ptext46 08CE                  __ptext38 0B4B            _lcd_byte_4bits 09F7  
                __ptext47 17EE                  __ptext39 08BD                  __ptext48 1770  
                __ptext49 09BC          __size_of_isupper 0012            _lcd_byte_8bits 177B  
                _lcd_char 17BC          __size_of_show_ad 0063                  _lcd_init 1750  
                _lcd_goto 0BE3            _lcd_init_4bits 0D9E            _lcd_init_8bits 0CD4  
               isxdigit@c 0075          __size_of_tolower 0010               _isgraph$973 0072  
        __size_of_toupper 0013                  _neg_fabs 00C8                strcpy@from 0072  
                _neg_labs 00D0             __size_of_main 0029                  _int_char 005C  
           __size_of_init 0027             __size_of_itoa 0026             __size_of_utoa 0072  
                _isxdigit 0AA9                  _pos_fabs 00CC                  _pos_labs 00D4  
                _str_dec1 00BE                  _str_dec2 00AA               ??_lcd_clear 0078  
               printf@val 0033                  _str_hex1 00B4                  _str_hex2 00A0  
             _islower$976 0072             _lcd_delay_2ms 1766               _long_value1 0068  
             _long_value2 004E             _lcd_delay_1us 1746     __end_of_ctype_testing 0643  
             _isspace$984 0072           ?_lcd_delay_40ms 0070           ?_lcd_delay_40us 0070  
       string_testing@str 003A                 putch@dado 0078                _INTCONbits 000B  
             _isprint$979 0072    __end_of_lcd_byte_4bits 0A16                  memcmp@s1 0078  
                memcmp@s2 0072    __end_of_lcd_byte_8bits 1786                  memcpy@d1 0024  
                memcpy@s1 0072    __end_of_lcd_init_4bits 0DE7                  itoa@base 0031  
                init_ram0 091B    __end_of_lcd_init_8bits 0D12                  isalpha@c 0075  
                isdigit@c 0073                  memset@p1 0078                  isalnum@c 0077  
                memmove@d 0023                  memmove@n 0074                  memmove@s 0021  
                iscntrl@c 0072                  isgraph@c 0073                  intlevel1 0000  
 __end_of_lcd_send_nibble 0B76               _isupper$987 0072   __size_of_stdlib_testing 003D  
               strchr@chr 0072                  islower@c 0073          ___lwmod@dividend 0022  
               strchr@ptr 0074                  isspace@c 0073                  isprint@c 0073  
                ispunct@c 0072                  isupper@c 0073                 stringcode 070A  
                printf@ap 0032                  printf@cp 0030               amost1@value 0073  
          ?_lcd_delay_2ms 0070            ?_lcd_delay_1us 0070                  utoa@base 0028  
              _OPTION_REG 0081                  tolower@c 0072                  strcat@cp 0075  
                strcat@to 0074                  strcmp@s1 0078                  strcmp@s2 0072  
         ___lwmod@divisor 0020                  strcpy@cp 0075                  strlen@cp 0076  
                strcpy@to 0076           ___lwmod@counter 0025           ?_lcd_byte_4bits 0070  
         ?_lcd_byte_8bits 0070                  toupper@c 0073                  stringtab 0700  
         ?_lcd_init_4bits 0070           ?_lcd_init_8bits 0070          ??_string_testing 0036  
           ?_lcd_en_pulse 0070  
