

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Jan 26 17:47:36 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	intentry,global,class=CODE,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.20
    16                           ; Generated 12/02/2020 GMT
    17                           ; 
    18                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F877A Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  0091                     	;# 
    94  0092                     	;# 
    95  0093                     	;# 
    96  0094                     	;# 
    97  0098                     	;# 
    98  0099                     	;# 
    99  009C                     	;# 
   100  009D                     	;# 
   101  009E                     	;# 
   102  009F                     	;# 
   103  010C                     	;# 
   104  010D                     	;# 
   105  010E                     	;# 
   106  010F                     	;# 
   107  018C                     	;# 
   108  018D                     	;# 
   109  0000                     	;# 
   110  0001                     	;# 
   111  0002                     	;# 
   112  0003                     	;# 
   113  0004                     	;# 
   114  0005                     	;# 
   115  0006                     	;# 
   116  0007                     	;# 
   117  0008                     	;# 
   118  0009                     	;# 
   119  000A                     	;# 
   120  000B                     	;# 
   121  000C                     	;# 
   122  000D                     	;# 
   123  000E                     	;# 
   124  000E                     	;# 
   125  000F                     	;# 
   126  0010                     	;# 
   127  0011                     	;# 
   128  0012                     	;# 
   129  0013                     	;# 
   130  0014                     	;# 
   131  0015                     	;# 
   132  0015                     	;# 
   133  0016                     	;# 
   134  0017                     	;# 
   135  0018                     	;# 
   136  0019                     	;# 
   137  001A                     	;# 
   138  001B                     	;# 
   139  001B                     	;# 
   140  001C                     	;# 
   141  001D                     	;# 
   142  001E                     	;# 
   143  001F                     	;# 
   144  0081                     	;# 
   145  0085                     	;# 
   146  0086                     	;# 
   147  0087                     	;# 
   148  0088                     	;# 
   149  0089                     	;# 
   150  008C                     	;# 
   151  008D                     	;# 
   152  008E                     	;# 
   153  0091                     	;# 
   154  0092                     	;# 
   155  0093                     	;# 
   156  0094                     	;# 
   157  0098                     	;# 
   158  0099                     	;# 
   159  009C                     	;# 
   160  009D                     	;# 
   161  009E                     	;# 
   162  009F                     	;# 
   163  010C                     	;# 
   164  010D                     	;# 
   165  010E                     	;# 
   166  010F                     	;# 
   167  018C                     	;# 
   168  018D                     	;# 
   169                           
   170                           	psect	strings
   171  00E9                     __pstrings:
   172  00E9                     stringtab:
   173  00E9                     __stringtab:
   174  00E9                     stringcode:	
   175                           ;	String table - string pointers are 1 byte each
   176                           
   177  00E9                     stringdir:
   178  00E9  3000               	movlw	high stringdir
   179  00EA  008A               	movwf	10
   180  00EB  0804               	movf	4,w
   181  00EC  0A84               	incf	4,f
   182  00ED  0782               	addwf	2,f
   183  00EE                     __stringbase:
   184  00EE  3400               	retlw	0
   185  00EF                     __end_of__stringtab:
   186  00EF                     _tab1:
   187  00EF  343F               	retlw	63
   188  00F0  3406               	retlw	6
   189  00F1  345B               	retlw	91
   190  00F2  344F               	retlw	79
   191  00F3  3466               	retlw	102
   192  00F4  346D               	retlw	109
   193  00F5  347D               	retlw	125
   194  00F6  3407               	retlw	7
   195  00F7  347F               	retlw	127
   196  00F8  346F               	retlw	111
   197  00F9  3477               	retlw	119
   198  00FA  347C               	retlw	124
   199  00FB  3439               	retlw	57
   200  00FC  345E               	retlw	94
   201  00FD  3479               	retlw	121
   202  00FE  3471               	retlw	113
   203  00FF                     __end_of_tab1:
   204  0006                     _PORTBbits	set	6
   205  000B                     _INTCON	set	11
   206  0008                     _PORTD	set	8
   207  0009                     _PORTE	set	9
   208  0007                     _PORTC	set	7
   209  0006                     _PORTB	set	6
   210  0005                     _PORTA	set	5
   211  000B                     _INTCONbits	set	11
   212  0081                     _OPTION_REG	set	129
   213  0089                     _TRISE	set	137
   214  0087                     _TRISC	set	135
   215  0086                     _TRISB	set	134
   216  0085                     _TRISA	set	133
   217  0088                     _TRISD	set	136
   218                           
   219                           	psect	cinit
   220  000F                     start_initialization:	
   221                           ; #config settings
   222                           
   223  000F                     __initialization:
   224                           
   225                           ; Clear objects allocated to COMMON
   226  000F  01F6               	clrf	__pbssCOMMON& (0+127)
   227  0010  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   228  0011  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   229  0012  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   230  0013                     end_of_initialization:	
   231                           ;End of C runtime variable initialization code
   232                           
   233  0013                     __end_of__initialization:
   234  0013  0183               	clrf	3
   235  0014  120A  118A  2817   	ljmp	_main	;jump to C main() function
   236                           
   237                           	psect	bssCOMMON
   238  0076                     __pbssCOMMON:
   239  0076                     _disp4_val:
   240  0076                     	ds	1
   241  0077                     _disp3_val:
   242  0077                     	ds	1
   243  0078                     _disp2_val:
   244  0078                     	ds	1
   245  0079                     _disp1_val:
   246  0079                     	ds	1
   247                           
   248                           	psect	cstackCOMMON
   249  0070                     __pcstackCOMMON:
   250  0070                     ?_myIsr:
   251  0070                     ??_myIsr:	
   252                           ; 1 bytes @ 0x0
   253                           
   254  0070                     ?_init:	
   255                           ; 1 bytes @ 0x0
   256                           
   257  0070                     ?_main:	
   258                           ; 1 bytes @ 0x0
   259                           
   260                           
   261                           ; 1 bytes @ 0x0
   262  0070                     	ds	3
   263  0073                     ??_init:
   264  0073                     ??_main:	
   265                           ; 1 bytes @ 0x3
   266                           
   267                           
   268                           ; 1 bytes @ 0x3
   269  0073                     	ds	3
   270                           
   271                           	psect	maintext
   272  0017                     __pmaintext:	
   273 ;;
   274 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   275 ;;
   276 ;; *************** function _main *****************
   277 ;; Defined at:
   278 ;;		line 88 in file "main.c"
   279 ;; Parameters:    Size  Location     Type
   280 ;;		None
   281 ;; Auto vars:     Size  Location     Type
   282 ;;		None
   283 ;; Return value:  Size  Location     Type
   284 ;;                  1    wreg      void 
   285 ;; Registers used:
   286 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   287 ;; Tracked objects:
   288 ;;		On entry : B00/0
   289 ;;		On exit  : 0/0
   290 ;;		Unchanged: 0/0
   291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   292 ;;      Params:         0       0       0       0       0
   293 ;;      Locals:         0       0       0       0       0
   294 ;;      Temps:          3       0       0       0       0
   295 ;;      Totals:         3       0       0       0       0
   296 ;;Total ram usage:        3 bytes
   297 ;; Hardware stack levels required when called: 2
   298 ;; This function calls:
   299 ;;		_init
   300 ;; This function is called by:
   301 ;;		Startup code after reset
   302 ;; This function uses a non-reentrant model
   303 ;;
   304                           
   305                           
   306                           ;psect for function _main
   307  0017                     _main:
   308  0017                     l729:	
   309                           ;incstack = 0
   310                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   311                           
   312                           
   313                           ;main.c: 91:     INTCONbits.GIE = 0;
   314  0017  138B               	bcf	11,7	;volatile
   315  0018                     l731:
   316                           
   317                           ;main.c: 94:     init();
   318  0018  120A  118A  20CD  120A  118A  	fcall	_init
   319  001D                     l733:
   320                           
   321                           ;main.c: 97:     INTCONbits.GIE = 1;
   322  001D  178B               	bsf	11,7	;volatile
   323  001E                     l735:
   324                           
   325                           ;main.c: 101:     {;main.c: 103:         PORTC = tab1[disp1_val];
   326  001E  0879               	movf	_disp1_val,w
   327  001F  3E01               	addlw	low ((_tab1-__stringbase)| (0+32768))
   328  0020  0084               	movwf	4
   329  0021  120A  118A  20E9  120A  118A  	fcall	stringdir
   330  0026  1283               	bcf	3,5	;RP0=0, select bank0
   331  0027  1303               	bcf	3,6	;RP1=0, select bank0
   332  0028  0087               	movwf	7	;volatile
   333  0029                     l737:
   334                           
   335                           ;main.c: 104:         PORTBbits.RB2 = 1;
   336  0029  1506               	bsf	6,2	;volatile
   337  002A                     l739:
   338                           
   339                           ;main.c: 105:         _delay((unsigned long)((50)*(20000000/4000.0)));
   340  002A  3002               	movlw	2
   341  002B  00F5               	movwf	??_main+2
   342  002C  3045               	movlw	69
   343  002D  00F4               	movwf	??_main+1
   344  002E  30A9               	movlw	169
   345  002F  00F3               	movwf	??_main
   346  0030                     u77:
   347  0030  0BF3               	decfsz	??_main,f
   348  0031  2830               	goto	u77
   349  0032  0BF4               	decfsz	??_main+1,f
   350  0033  2830               	goto	u77
   351  0034  0BF5               	decfsz	??_main+2,f
   352  0035  2830               	goto	u77
   353  0036  2837               	nop2
   354  0037                     l741:
   355                           
   356                           ;main.c: 106:         PORTBbits.RB2 = 0;
   357  0037  1283               	bcf	3,5	;RP0=0, select bank0
   358  0038  1303               	bcf	3,6	;RP1=0, select bank0
   359  0039  1106               	bcf	6,2	;volatile
   360  003A                     l743:
   361                           
   362                           ;main.c: 107:         PORTC = tab1[disp2_val];
   363  003A  0878               	movf	_disp2_val,w
   364  003B  3E01               	addlw	low ((_tab1-__stringbase)| (0+32768))
   365  003C  0084               	movwf	4
   366  003D  120A  118A  20E9  120A  118A  	fcall	stringdir
   367  0042  0087               	movwf	7	;volatile
   368  0043                     l745:
   369                           
   370                           ;main.c: 108:         PORTBbits.RB3 = 1;
   371  0043  1586               	bsf	6,3	;volatile
   372  0044                     l747:
   373                           
   374                           ;main.c: 109:         _delay((unsigned long)((50)*(20000000/4000.0)));
   375  0044  3002               	movlw	2
   376  0045  00F5               	movwf	??_main+2
   377  0046  3045               	movlw	69
   378  0047  00F4               	movwf	??_main+1
   379  0048  30A9               	movlw	169
   380  0049  00F3               	movwf	??_main
   381  004A                     u87:
   382  004A  0BF3               	decfsz	??_main,f
   383  004B  284A               	goto	u87
   384  004C  0BF4               	decfsz	??_main+1,f
   385  004D  284A               	goto	u87
   386  004E  0BF5               	decfsz	??_main+2,f
   387  004F  284A               	goto	u87
   388  0050  2851               	nop2
   389  0051                     l749:
   390                           
   391                           ;main.c: 110:         PORTBbits.RB3 = 0;
   392  0051  1283               	bcf	3,5	;RP0=0, select bank0
   393  0052  1303               	bcf	3,6	;RP1=0, select bank0
   394  0053  1186               	bcf	6,3	;volatile
   395  0054                     l751:
   396                           
   397                           ;main.c: 111:         PORTC = tab1[disp3_val];
   398  0054  0877               	movf	_disp3_val,w
   399  0055  3E01               	addlw	low ((_tab1-__stringbase)| (0+32768))
   400  0056  0084               	movwf	4
   401  0057  120A  118A  20E9  120A  118A  	fcall	stringdir
   402  005C  0087               	movwf	7	;volatile
   403  005D                     l753:
   404                           
   405                           ;main.c: 112:         PORTBbits.RB4 = 1;
   406  005D  1606               	bsf	6,4	;volatile
   407  005E                     l755:
   408                           
   409                           ;main.c: 113:         _delay((unsigned long)((50)*(20000000/4000.0)));
   410  005E  3002               	movlw	2
   411  005F  00F5               	movwf	??_main+2
   412  0060  3045               	movlw	69
   413  0061  00F4               	movwf	??_main+1
   414  0062  30A9               	movlw	169
   415  0063  00F3               	movwf	??_main
   416  0064                     u97:
   417  0064  0BF3               	decfsz	??_main,f
   418  0065  2864               	goto	u97
   419  0066  0BF4               	decfsz	??_main+1,f
   420  0067  2864               	goto	u97
   421  0068  0BF5               	decfsz	??_main+2,f
   422  0069  2864               	goto	u97
   423  006A  286B               	nop2
   424  006B                     l757:
   425                           
   426                           ;main.c: 114:         PORTBbits.RB4 = 0;
   427  006B  1283               	bcf	3,5	;RP0=0, select bank0
   428  006C  1303               	bcf	3,6	;RP1=0, select bank0
   429  006D  1206               	bcf	6,4	;volatile
   430  006E                     l759:
   431                           
   432                           ;main.c: 115:         PORTC = tab1[disp4_val];
   433  006E  0876               	movf	_disp4_val,w
   434  006F  3E01               	addlw	low ((_tab1-__stringbase)| (0+32768))
   435  0070  0084               	movwf	4
   436  0071  120A  118A  20E9  120A  118A  	fcall	stringdir
   437  0076  0087               	movwf	7	;volatile
   438  0077                     l761:
   439                           
   440                           ;main.c: 116:         PORTBbits.RB5 = 1;
   441  0077  1686               	bsf	6,5	;volatile
   442  0078                     l763:
   443                           
   444                           ;main.c: 117:         _delay((unsigned long)((50)*(20000000/4000.0)));
   445  0078  3002               	movlw	2
   446  0079  00F5               	movwf	??_main+2
   447  007A  3045               	movlw	69
   448  007B  00F4               	movwf	??_main+1
   449  007C  30A9               	movlw	169
   450  007D  00F3               	movwf	??_main
   451  007E                     u107:
   452  007E  0BF3               	decfsz	??_main,f
   453  007F  287E               	goto	u107
   454  0080  0BF4               	decfsz	??_main+1,f
   455  0081  287E               	goto	u107
   456  0082  0BF5               	decfsz	??_main+2,f
   457  0083  287E               	goto	u107
   458  0084  2885               	nop2
   459  0085                     l765:
   460                           
   461                           ;main.c: 118:         PORTBbits.RB5 = 0;
   462  0085  1283               	bcf	3,5	;RP0=0, select bank0
   463  0086  1303               	bcf	3,6	;RP1=0, select bank0
   464  0087  1286               	bcf	6,5	;volatile
   465  0088  281E               	goto	l735
   466  0089  120A  118A  280C   	ljmp	start
   467  008C                     __end_of_main:
   468                           
   469                           	psect	text1
   470  00CD                     __ptext1:	
   471 ;; *************** function _init *****************
   472 ;; Defined at:
   473 ;;		line 48 in file "main.c"
   474 ;; Parameters:    Size  Location     Type
   475 ;;		None
   476 ;; Auto vars:     Size  Location     Type
   477 ;;		None
   478 ;; Return value:  Size  Location     Type
   479 ;;                  1    wreg      void 
   480 ;; Registers used:
   481 ;;		wreg, status,2
   482 ;; Tracked objects:
   483 ;;		On entry : 0/0
   484 ;;		On exit  : 0/0
   485 ;;		Unchanged: 0/0
   486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   487 ;;      Params:         0       0       0       0       0
   488 ;;      Locals:         0       0       0       0       0
   489 ;;      Temps:          0       0       0       0       0
   490 ;;      Totals:         0       0       0       0       0
   491 ;;Total ram usage:        0 bytes
   492 ;; Hardware stack levels used: 1
   493 ;; Hardware stack levels required when called: 1
   494 ;; This function calls:
   495 ;;		Nothing
   496 ;; This function is called by:
   497 ;;		_main
   498 ;; This function uses a non-reentrant model
   499 ;;
   500                           
   501                           
   502                           ;psect for function _init
   503  00CD                     _init:
   504  00CD                     l653:	
   505                           ;incstack = 0
   506                           ; Regs used in _init: [wreg+status,2]
   507                           
   508                           
   509                           ;main.c: 51:     PORTA = 0b00000000;
   510  00CD  1283               	bcf	3,5	;RP0=0, select bank0
   511  00CE  1303               	bcf	3,6	;RP1=0, select bank0
   512  00CF  0185               	clrf	5	;volatile
   513                           
   514                           ;main.c: 52:     PORTB = 0b00000000;
   515  00D0  0186               	clrf	6	;volatile
   516                           
   517                           ;main.c: 53:     PORTC = 0b00000000;
   518  00D1  0187               	clrf	7	;volatile
   519                           
   520                           ;main.c: 54:     TRISD = 0b00000000;
   521  00D2  1683               	bsf	3,5	;RP0=1, select bank1
   522  00D3  1303               	bcf	3,6	;RP1=0, select bank1
   523  00D4  0188               	clrf	8	;volatile
   524                           
   525                           ;main.c: 55:     PORTE = 0b00000000;
   526  00D5  1283               	bcf	3,5	;RP0=0, select bank0
   527  00D6  1303               	bcf	3,6	;RP1=0, select bank0
   528  00D7  0189               	clrf	9	;volatile
   529                           
   530                           ;main.c: 57:     TRISA = 0b00000000;
   531  00D8  1683               	bsf	3,5	;RP0=1, select bank1
   532  00D9  1303               	bcf	3,6	;RP1=0, select bank1
   533  00DA  0185               	clrf	5	;volatile
   534  00DB                     l655:
   535                           
   536                           ;main.c: 58:     TRISB = 0b00000001;
   537  00DB  3001               	movlw	1
   538  00DC  0086               	movwf	6	;volatile
   539  00DD                     l657:
   540                           
   541                           ;main.c: 59:     TRISC = 0b00000000;
   542  00DD  0187               	clrf	7	;volatile
   543  00DE                     l659:
   544                           
   545                           ;main.c: 60:     PORTD = 0b00000000;
   546  00DE  1283               	bcf	3,5	;RP0=0, select bank0
   547  00DF  1303               	bcf	3,6	;RP1=0, select bank0
   548  00E0  0188               	clrf	8	;volatile
   549  00E1                     l661:
   550                           
   551                           ;main.c: 61:     TRISE = 0b00000000;
   552  00E1  1683               	bsf	3,5	;RP0=1, select bank1
   553  00E2  1303               	bcf	3,6	;RP1=0, select bank1
   554  00E3  0189               	clrf	9	;volatile
   555                           
   556                           ;main.c: 64:     OPTION_REG = 0b10000011;
   557  00E4  3083               	movlw	131
   558  00E5  0081               	movwf	1	;volatile
   559                           
   560                           ;main.c: 75:     INTCON = 0b00010000;
   561  00E6  3010               	movlw	16
   562  00E7  008B               	movwf	11	;volatile
   563  00E8                     l53:
   564  00E8  0008               	return
   565  00E9                     __end_of_init:
   566                           
   567                           	psect	text2
   568  008C                     __ptext2:	
   569 ;; *************** function _myIsr *****************
   570 ;; Defined at:
   571 ;;		line 16 in file "main.c"
   572 ;; Parameters:    Size  Location     Type
   573 ;;		None
   574 ;; Auto vars:     Size  Location     Type
   575 ;;		None
   576 ;; Return value:  Size  Location     Type
   577 ;;                  1    wreg      void 
   578 ;; Registers used:
   579 ;;		wreg, status,2, status,0
   580 ;; Tracked objects:
   581 ;;		On entry : 0/0
   582 ;;		On exit  : 0/0
   583 ;;		Unchanged: 0/0
   584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   585 ;;      Params:         0       0       0       0       0
   586 ;;      Locals:         0       0       0       0       0
   587 ;;      Temps:          3       0       0       0       0
   588 ;;      Totals:         3       0       0       0       0
   589 ;;Total ram usage:        3 bytes
   590 ;; Hardware stack levels used: 1
   591 ;; This function calls:
   592 ;;		Nothing
   593 ;; This function is called by:
   594 ;;		Interrupt level 1
   595 ;; This function uses a non-reentrant model
   596 ;;
   597                           
   598                           
   599                           ;psect for function _myIsr
   600  008C                     _myIsr:
   601  008C                     i1l663:
   602                           
   603                           ;main.c: 19:     if(INTCONbits.INTE && INTCONbits.INTF)
   604  008C  1E0B               	btfss	11,4	;volatile
   605  008D  288F               	goto	u1_21
   606  008E  2890               	goto	u1_20
   607  008F                     u1_21:
   608  008F  28C6               	goto	i1l50
   609  0090                     u1_20:
   610  0090                     i1l665:
   611  0090  1C8B               	btfss	11,1	;volatile
   612  0091  2893               	goto	u2_21
   613  0092  2894               	goto	u2_20
   614  0093                     u2_21:
   615  0093  28C6               	goto	i1l50
   616  0094                     u2_20:
   617  0094                     i1l667:
   618                           
   619                           ;main.c: 20:     {;main.c: 22:     INTCONbits.INTF = 0;
   620  0094  108B               	bcf	11,1	;volatile
   621  0095                     i1l669:
   622                           
   623                           ;main.c: 24:     disp1_val = disp1_val+1;
   624  0095  0879               	movf	_disp1_val,w
   625  0096  3E01               	addlw	1
   626  0097  00F0               	movwf	??_myIsr
   627  0098  0870               	movf	??_myIsr,w
   628  0099  00F9               	movwf	_disp1_val
   629                           
   630                           ;main.c: 25:  if (disp1_val == 10)
   631  009A  300A               	movlw	10
   632  009B  0679               	xorwf	_disp1_val,w
   633  009C  1D03               	btfss	3,2
   634  009D  289F               	goto	u3_21
   635  009E  28A0               	goto	u3_20
   636  009F                     u3_21:
   637  009F  28C6               	goto	i1l50
   638  00A0                     u3_20:
   639  00A0                     i1l671:
   640                           
   641                           ;main.c: 26:  {;main.c: 27:   disp1_val = 0;
   642  00A0  01F9               	clrf	_disp1_val
   643  00A1                     i1l673:
   644                           
   645                           ;main.c: 28:   disp2_val = disp2_val+1;
   646  00A1  0878               	movf	_disp2_val,w
   647  00A2  3E01               	addlw	1
   648  00A3  00F0               	movwf	??_myIsr
   649  00A4  0870               	movf	??_myIsr,w
   650  00A5  00F8               	movwf	_disp2_val
   651  00A6                     i1l675:
   652                           
   653                           ;main.c: 29:   if (disp2_val == 10)
   654  00A6  300A               	movlw	10
   655  00A7  0678               	xorwf	_disp2_val,w
   656  00A8  1D03               	btfss	3,2
   657  00A9  28AB               	goto	u4_21
   658  00AA  28AC               	goto	u4_20
   659  00AB                     u4_21:
   660  00AB  28C6               	goto	i1l50
   661  00AC                     u4_20:
   662  00AC                     i1l677:
   663                           
   664                           ;main.c: 30:   {;main.c: 31:    disp2_val = 0;
   665  00AC  01F8               	clrf	_disp2_val
   666  00AD                     i1l679:
   667                           
   668                           ;main.c: 32:    disp3_val = disp3_val+1;
   669  00AD  0877               	movf	_disp3_val,w
   670  00AE  3E01               	addlw	1
   671  00AF  00F0               	movwf	??_myIsr
   672  00B0  0870               	movf	??_myIsr,w
   673  00B1  00F7               	movwf	_disp3_val
   674  00B2                     i1l681:
   675                           
   676                           ;main.c: 33:    if (disp3_val == 10)
   677  00B2  300A               	movlw	10
   678  00B3  0677               	xorwf	_disp3_val,w
   679  00B4  1D03               	btfss	3,2
   680  00B5  28B7               	goto	u5_21
   681  00B6  28B8               	goto	u5_20
   682  00B7                     u5_21:
   683  00B7  28C6               	goto	i1l50
   684  00B8                     u5_20:
   685  00B8                     i1l683:
   686                           
   687                           ;main.c: 34:    {;main.c: 35:     disp3_val = 0;
   688  00B8  01F7               	clrf	_disp3_val
   689  00B9                     i1l685:
   690                           
   691                           ;main.c: 36:     disp4_val = disp4_val+1;
   692  00B9  0876               	movf	_disp4_val,w
   693  00BA  3E01               	addlw	1
   694  00BB  00F0               	movwf	??_myIsr
   695  00BC  0870               	movf	??_myIsr,w
   696  00BD  00F6               	movwf	_disp4_val
   697  00BE                     i1l687:
   698                           
   699                           ;main.c: 37:     if (disp4_val == 10)
   700  00BE  300A               	movlw	10
   701  00BF  0676               	xorwf	_disp4_val,w
   702  00C0  1D03               	btfss	3,2
   703  00C1  28C3               	goto	u6_21
   704  00C2  28C4               	goto	u6_20
   705  00C3                     u6_21:
   706  00C3  28C6               	goto	i1l46
   707  00C4                     u6_20:
   708  00C4                     i1l689:
   709                           
   710                           ;main.c: 38:     {;main.c: 39:      disp4_val = 0;
   711  00C4  01F6               	clrf	_disp4_val
   712  00C5  28C6               	goto	i1l50
   713  00C6                     i1l46:	
   714                           ;main.c: 43:  }
   715                           
   716  00C6                     i1l50:
   717  00C6  0872               	movf	??_myIsr+2,w
   718  00C7  008A               	movwf	10
   719  00C8  0E71               	swapf	??_myIsr+1,w
   720  00C9  0083               	movwf	3
   721  00CA  0EFE               	swapf	btemp,f
   722  00CB  0E7E               	swapf	btemp,w
   723  00CC  0009               	retfie
   724  00CD                     __end_of_myIsr:
   725  007E                     btemp	set	126	;btemp
   726  007E                     wtemp0	set	126
   727                           
   728                           	psect	intentry
   729  0004                     __pintentry:	
   730                           ;incstack = 0
   731                           ; Regs used in _myIsr: [wreg+status,2+status,0]
   732                           
   733  0004                     interrupt_function:
   734  007E                     saved_w	set	btemp
   735  0004  00FE               	movwf	btemp
   736  0005  0E03               	swapf	3,w
   737  0006  00F1               	movwf	??_myIsr+1
   738  0007  080A               	movf	10,w
   739  0008  00F2               	movwf	??_myIsr+2
   740  0009  120A  118A  288C   	ljmp	_myIsr
   741                           
   742                           	psect	config
   743                           
   744                           ;Config register CONFIG @ 0x2007
   745                           ;	Oscillator Selection bits
   746                           ;	FOSC = HS, HS oscillator
   747                           ;	Watchdog Timer Enable bit
   748                           ;	WDTE = OFF, WDT disabled
   749                           ;	Power-up Timer Enable bit
   750                           ;	PWRTE = ON, PWRT enabled
   751                           ;	Brown-out Reset Enable bit
   752                           ;	BOREN = ON, BOR enabled
   753                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   754                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
   755                           ;	Data EEPROM Memory Code Protection bit
   756                           ;	CPD = OFF, Data EEPROM code protection off
   757                           ;	Flash Program Memory Write Enable bits
   758                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   759                           ;	In-Circuit Debugger Mode bit
   760                           ;	DEBUG = 0x1, unprogrammed default
   761                           ;	Flash Program Memory Code Protection bit
   762                           ;	CP = OFF, Code protection off
   763  2007                     	org	8199
   764  2007  3FF2               	dw	16370

Data Sizes:
    Strings     0
    Constant    16
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _myIsr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _myIsr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _myIsr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myIsr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myIsr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0       0
                                              3 COMMON     3     3      0
                               _init
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _myIsr                                                3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init

 _myIsr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       A      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Jan 26 17:47:36 2022

                      pc 0002                       l53 00E8                       u77 0030  
                     u87 004A                       u97 0064                       fsr 0004  
                    l731 0018                      l661 00E1                      l653 00CD  
                    l741 0037                      l733 001D                      l655 00DB  
                    l751 0054                      l743 003A                      l735 001E  
                    l657 00DD                      l761 0077                      l753 005D  
                    l745 0043                      l737 0029                      l729 0017  
                    l659 00DE                      l763 0078                      l755 005E  
                    l747 0044                      l739 002A                      l765 0085  
                    l757 006B                      l749 0051                      l759 006E  
                    u107 007E                      fsr0 0004                     i1l50 00C6  
                   i1l46 00C6                     u1_20 0090                     u1_21 008F  
                   u2_20 0094                     u2_21 0093                     u3_20 00A0  
                   u3_21 009F                     u4_20 00AC                     u4_21 00AB  
                   u5_20 00B8                     u5_21 00B7                     u6_20 00C4  
                   u6_21 00C3                     _tab1 00EF                     _main 0017  
                   _init 00CD                     btemp 007E                     start 000C  
                  ?_main 0070                    ?_init 0070                    i1l671 00A0  
                  i1l663 008C                    i1l681 00B2                    i1l673 00A1  
                  i1l665 0090                    i1l683 00B8                    i1l675 00A6  
                  i1l667 0094                    i1l685 00B9                    i1l677 00AC  
                  i1l669 0095                    i1l687 00BE                    i1l679 00AD  
                  i1l689 00C4                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _PORTE 0009  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _TRISE 0089                    _myIsr 008C  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_tab1 00FF             __end_of_main 008C  
           __end_of_init 00E9                   ??_main 0073                   ??_init 0073  
                 ?_myIsr 0070                   _INTCON 000B                   saved_w 007E  
__end_of__initialization 0013           __pcstackCOMMON 0070            __end_of_myIsr 00CD  
                ??_myIsr 0070               __pmaintext 0017               __pintentry 0004  
             __stringtab 00E9                  __ptext1 00CD                  __ptext2 008C  
   end_of_initialization 0013                _PORTBbits 0006      start_initialization 000F  
            __pbssCOMMON 0076                ___latbits 0002                _disp1_val 0079  
              _disp2_val 0078                _disp3_val 0077                _disp4_val 0076  
              __pstrings 00E9           __size_of_myIsr 0041        interrupt_function 0004  
            __stringbase 00EE       __end_of__stringtab 00EF            __size_of_main 0075  
          __size_of_init 001C               _INTCONbits 000B                 intlevel1 0000  
              stringcode 00E9               _OPTION_REG 0081                 stringdir 00E9  
               stringtab 00E9  
