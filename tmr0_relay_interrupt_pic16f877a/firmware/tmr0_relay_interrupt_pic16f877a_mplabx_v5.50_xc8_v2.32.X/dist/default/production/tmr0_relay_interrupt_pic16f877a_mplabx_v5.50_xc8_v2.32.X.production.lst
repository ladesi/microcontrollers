

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Jan 26 19:49:48 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.20
    15                           ; Generated 12/02/2020 GMT
    16                           ; 
    17                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  0091                     	;# 
    93  0092                     	;# 
    94  0093                     	;# 
    95  0094                     	;# 
    96  0098                     	;# 
    97  0099                     	;# 
    98  009C                     	;# 
    99  009D                     	;# 
   100  009E                     	;# 
   101  009F                     	;# 
   102  010C                     	;# 
   103  010D                     	;# 
   104  010E                     	;# 
   105  010F                     	;# 
   106  018C                     	;# 
   107  018D                     	;# 
   108  0000                     	;# 
   109  0001                     	;# 
   110  0002                     	;# 
   111  0003                     	;# 
   112  0004                     	;# 
   113  0005                     	;# 
   114  0006                     	;# 
   115  0007                     	;# 
   116  0008                     	;# 
   117  0009                     	;# 
   118  000A                     	;# 
   119  000B                     	;# 
   120  000C                     	;# 
   121  000D                     	;# 
   122  000E                     	;# 
   123  000E                     	;# 
   124  000F                     	;# 
   125  0010                     	;# 
   126  0011                     	;# 
   127  0012                     	;# 
   128  0013                     	;# 
   129  0014                     	;# 
   130  0015                     	;# 
   131  0015                     	;# 
   132  0016                     	;# 
   133  0017                     	;# 
   134  0018                     	;# 
   135  0019                     	;# 
   136  001A                     	;# 
   137  001B                     	;# 
   138  001B                     	;# 
   139  001C                     	;# 
   140  001D                     	;# 
   141  001E                     	;# 
   142  001F                     	;# 
   143  0081                     	;# 
   144  0085                     	;# 
   145  0086                     	;# 
   146  0087                     	;# 
   147  0088                     	;# 
   148  0089                     	;# 
   149  008C                     	;# 
   150  008D                     	;# 
   151  008E                     	;# 
   152  0091                     	;# 
   153  0092                     	;# 
   154  0093                     	;# 
   155  0094                     	;# 
   156  0098                     	;# 
   157  0099                     	;# 
   158  009C                     	;# 
   159  009D                     	;# 
   160  009E                     	;# 
   161  009F                     	;# 
   162  010C                     	;# 
   163  010D                     	;# 
   164  010E                     	;# 
   165  010F                     	;# 
   166  018C                     	;# 
   167  018D                     	;# 
   168  000B                     _INTCON	set	11
   169  0008                     _PORTD	set	8
   170  0009                     _PORTE	set	9
   171  0007                     _PORTC	set	7
   172  0006                     _PORTB	set	6
   173  0005                     _PORTA	set	5
   174  0001                     _TMR0	set	1
   175  0006                     _PORTBbits	set	6
   176  000B                     _INTCONbits	set	11
   177  0081                     _OPTION_REG	set	129
   178  0089                     _TRISE	set	137
   179  0087                     _TRISC	set	135
   180  0086                     _TRISB	set	134
   181  0085                     _TRISA	set	133
   182  0088                     _TRISD	set	136
   183                           
   184                           	psect	cinit
   185  000F                     start_initialization:	
   186                           ; #config settings
   187                           
   188  000F                     __initialization:
   189                           
   190                           ; Clear objects allocated to COMMON
   191  000F  01F0               	clrf	__pbssCOMMON& (0+127)
   192  0010  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   193  0011                     end_of_initialization:	
   194                           ;End of C runtime variable initialization code
   195                           
   196  0011                     __end_of__initialization:
   197  0011  0183               	clrf	3
   198  0012  120A  118A  2847   	ljmp	_main	;jump to C main() function
   199                           
   200                           	psect	bssCOMMON
   201  0070                     __pbssCOMMON:
   202  0070                     _count0:
   203  0070                     	ds	2
   204                           
   205                           	psect	cstackCOMMON
   206  0072                     __pcstackCOMMON:
   207  0072                     ?_myIsr:
   208  0072                     ??_myIsr:	
   209                           ; 1 bytes @ 0x0
   210                           
   211  0072                     ?_init:	
   212                           ; 1 bytes @ 0x0
   213                           
   214  0072                     ?_main:	
   215                           ; 1 bytes @ 0x0
   216                           
   217                           
   218                           ; 1 bytes @ 0x0
   219  0072                     	ds	2
   220  0074                     ??_init:
   221  0074                     ??_main:	
   222                           ; 1 bytes @ 0x2
   223                           
   224                           
   225                           	psect	maintext
   226  0047                     __pmaintext:	
   227                           ; 1 bytes @ 0x2
   228 ;;
   229 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   230 ;;
   231 ;; *************** function _main *****************
   232 ;; Defined at:
   233 ;;		line 77 in file "main.c"
   234 ;; Parameters:    Size  Location     Type
   235 ;;		None
   236 ;; Auto vars:     Size  Location     Type
   237 ;;		None
   238 ;; Return value:  Size  Location     Type
   239 ;;                  1    wreg      void 
   240 ;; Registers used:
   241 ;;		wreg, status,2, status,0, pclath, cstack
   242 ;; Tracked objects:
   243 ;;		On entry : B00/0
   244 ;;		On exit  : 0/0
   245 ;;		Unchanged: 0/0
   246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   247 ;;      Params:         0       0       0       0       0
   248 ;;      Locals:         0       0       0       0       0
   249 ;;      Temps:          0       0       0       0       0
   250 ;;      Totals:         0       0       0       0       0
   251 ;;Total ram usage:        0 bytes
   252 ;; Hardware stack levels required when called: 2
   253 ;; This function calls:
   254 ;;		_init
   255 ;; This function is called by:
   256 ;;		Startup code after reset
   257 ;; This function uses a non-reentrant model
   258 ;;
   259                           
   260                           
   261                           ;psect for function _main
   262  0047                     _main:
   263  0047                     l671:	
   264                           ;incstack = 0
   265                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   266                           
   267                           
   268                           ;main.c: 80:     INTCONbits.GIE = 0;
   269  0047  138B               	bcf	11,7	;volatile
   270  0048                     l673:
   271                           
   272                           ;main.c: 83:     init();
   273  0048  120A  118A  206C  120A  118A  	fcall	_init
   274  004D                     l675:
   275                           
   276                           ;main.c: 86:     INTCONbits.GIE = 1;
   277  004D  178B               	bsf	11,7	;volatile
   278  004E                     l677:
   279                           
   280                           ;main.c: 90:     {;main.c: 91:         if(count0 == 5000)
   281  004E  3088               	movlw	136
   282  004F  0670               	xorwf	_count0,w
   283  0050  3013               	movlw	19
   284  0051  1903               	skipnz
   285  0052  0671               	xorwf	_count0+1,w
   286  0053  1D03               	btfss	3,2
   287  0054  2856               	goto	u71
   288  0055  2857               	goto	u70
   289  0056                     u71:
   290  0056  284E               	goto	l677
   291  0057                     u70:
   292  0057                     l679:
   293                           
   294                           ;main.c: 92:         {;main.c: 93:             PORTBbits.RB6 = !PORTBbits.RB6;
   295  0057  1003               	clrc
   296  0058  1283               	bcf	3,5	;RP0=0, select bank0
   297  0059  1303               	bcf	3,6	;RP1=0, select bank0
   298  005A  1F06               	btfss	6,6	;volatile
   299  005B  1403               	setc
   300  005C  1803               	btfsc	3,0
   301  005D  285F               	goto	u81
   302  005E  2863               	goto	u80
   303  005F                     u81:
   304  005F  1283               	bcf	3,5	;RP0=0, select bank0
   305  0060  1303               	bcf	3,6	;RP1=0, select bank0
   306  0061  1706               	bsf	6,6	;volatile
   307  0062  2866               	goto	u94
   308  0063                     u80:
   309  0063  1283               	bcf	3,5	;RP0=0, select bank0
   310  0064  1303               	bcf	3,6	;RP1=0, select bank0
   311  0065  1306               	bcf	6,6	;volatile
   312  0066                     u94:
   313  0066                     l681:
   314                           
   315                           ;main.c: 94:             count0 = 0;
   316  0066  01F0               	clrf	_count0
   317  0067  01F1               	clrf	_count0+1
   318  0068  284E               	goto	l677
   319  0069  120A  118A  280C   	ljmp	start
   320  006C                     __end_of_main:
   321                           
   322                           	psect	text1
   323  006C                     __ptext1:	
   324 ;; *************** function _init *****************
   325 ;; Defined at:
   326 ;;		line 35 in file "main.c"
   327 ;; Parameters:    Size  Location     Type
   328 ;;		None
   329 ;; Auto vars:     Size  Location     Type
   330 ;;		None
   331 ;; Return value:  Size  Location     Type
   332 ;;                  1    wreg      void 
   333 ;; Registers used:
   334 ;;		wreg, status,2
   335 ;; Tracked objects:
   336 ;;		On entry : 0/0
   337 ;;		On exit  : 0/0
   338 ;;		Unchanged: 0/0
   339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   340 ;;      Params:         0       0       0       0       0
   341 ;;      Locals:         0       0       0       0       0
   342 ;;      Temps:          0       0       0       0       0
   343 ;;      Totals:         0       0       0       0       0
   344 ;;Total ram usage:        0 bytes
   345 ;; Hardware stack levels used: 1
   346 ;; Hardware stack levels required when called: 1
   347 ;; This function calls:
   348 ;;		Nothing
   349 ;; This function is called by:
   350 ;;		_main
   351 ;; This function uses a non-reentrant model
   352 ;;
   353                           
   354                           
   355                           ;psect for function _init
   356  006C                     _init:
   357  006C                     l643:	
   358                           ;incstack = 0
   359                           ; Regs used in _init: [wreg+status,2]
   360                           
   361                           
   362                           ;main.c: 38:     PORTA = 0b00000000;
   363  006C  1283               	bcf	3,5	;RP0=0, select bank0
   364  006D  1303               	bcf	3,6	;RP1=0, select bank0
   365  006E  0185               	clrf	5	;volatile
   366                           
   367                           ;main.c: 39:     PORTB = 0b00000000;
   368  006F  0186               	clrf	6	;volatile
   369                           
   370                           ;main.c: 40:     PORTC = 0b00000000;
   371  0070  0187               	clrf	7	;volatile
   372                           
   373                           ;main.c: 41:     TRISD = 0b00000000;
   374  0071  1683               	bsf	3,5	;RP0=1, select bank1
   375  0072  1303               	bcf	3,6	;RP1=0, select bank1
   376  0073  0188               	clrf	8	;volatile
   377                           
   378                           ;main.c: 42:     PORTE = 0b00000000;
   379  0074  1283               	bcf	3,5	;RP0=0, select bank0
   380  0075  1303               	bcf	3,6	;RP1=0, select bank0
   381  0076  0189               	clrf	9	;volatile
   382                           
   383                           ;main.c: 44:     TRISA = 0b00000000;
   384  0077  1683               	bsf	3,5	;RP0=1, select bank1
   385  0078  1303               	bcf	3,6	;RP1=0, select bank1
   386  0079  0185               	clrf	5	;volatile
   387  007A                     l645:
   388                           
   389                           ;main.c: 45:     TRISB = 0b00000001;
   390  007A  3001               	movlw	1
   391  007B  0086               	movwf	6	;volatile
   392  007C                     l647:
   393                           
   394                           ;main.c: 46:     TRISC = 0b00000000;
   395  007C  0187               	clrf	7	;volatile
   396  007D                     l649:
   397                           
   398                           ;main.c: 47:     PORTD = 0b00000000;
   399  007D  1283               	bcf	3,5	;RP0=0, select bank0
   400  007E  1303               	bcf	3,6	;RP1=0, select bank0
   401  007F  0188               	clrf	8	;volatile
   402  0080                     l651:
   403                           
   404                           ;main.c: 48:     TRISE = 0b00000000;
   405  0080  1683               	bsf	3,5	;RP0=1, select bank1
   406  0081  1303               	bcf	3,6	;RP1=0, select bank1
   407  0082  0189               	clrf	9	;volatile
   408                           
   409                           ;main.c: 51:     OPTION_REG = 0b10000001;
   410  0083  3081               	movlw	129
   411  0084  0081               	movwf	1	;volatile
   412                           
   413                           ;main.c: 62:     INTCON = 0b00110000;
   414  0085  3030               	movlw	48
   415  0086  008B               	movwf	11	;volatile
   416                           
   417                           ;main.c: 73:     TMR0 = 256 - 250;
   418  0087  3006               	movlw	6
   419  0088  1283               	bcf	3,5	;RP0=0, select bank0
   420  0089  1303               	bcf	3,6	;RP1=0, select bank0
   421  008A  0081               	movwf	1	;volatile
   422  008B                     l653:
   423                           
   424                           ;main.c: 74:     count0 = 0;
   425  008B  01F0               	clrf	_count0
   426  008C  01F1               	clrf	_count0+1
   427  008D                     l42:
   428  008D  0008               	return
   429  008E                     __end_of_init:
   430                           
   431                           	psect	text2
   432  0015                     __ptext2:	
   433 ;; *************** function _myIsr *****************
   434 ;; Defined at:
   435 ;;		line 16 in file "main.c"
   436 ;; Parameters:    Size  Location     Type
   437 ;;		None
   438 ;; Auto vars:     Size  Location     Type
   439 ;;		None
   440 ;; Return value:  Size  Location     Type
   441 ;;                  1    wreg      void 
   442 ;; Registers used:
   443 ;;		wreg, status,0
   444 ;; Tracked objects:
   445 ;;		On entry : 0/0
   446 ;;		On exit  : 0/0
   447 ;;		Unchanged: 0/0
   448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   449 ;;      Params:         0       0       0       0       0
   450 ;;      Locals:         0       0       0       0       0
   451 ;;      Temps:          2       0       0       0       0
   452 ;;      Totals:         2       0       0       0       0
   453 ;;Total ram usage:        2 bytes
   454 ;; Hardware stack levels used: 1
   455 ;; This function calls:
   456 ;;		Nothing
   457 ;; This function is called by:
   458 ;;		Interrupt level 1
   459 ;; This function uses a non-reentrant model
   460 ;;
   461                           
   462                           
   463                           ;psect for function _myIsr
   464  0015                     _myIsr:
   465  0015                     i1l655:
   466                           
   467                           ;main.c: 19:     if(INTCONbits.INTE && INTCONbits.INTF)
   468  0015  1E0B               	btfss	11,4	;volatile
   469  0016  2818               	goto	u1_21
   470  0017  2819               	goto	u1_20
   471  0018                     u1_21:
   472  0018  282D               	goto	i1l663
   473  0019                     u1_20:
   474  0019                     i1l657:
   475  0019  1C8B               	btfss	11,1	;volatile
   476  001A  281C               	goto	u2_21
   477  001B  281D               	goto	u2_20
   478  001C                     u2_21:
   479  001C  282D               	goto	i1l663
   480  001D                     u2_20:
   481  001D                     i1l659:
   482                           
   483                           ;main.c: 20:     {;main.c: 21:         INTCONbits.INTF = 0;
   484  001D  108B               	bcf	11,1	;volatile
   485  001E                     i1l661:
   486                           
   487                           ;main.c: 22:         PORTBbits.RB1 = !PORTBbits.RB1;
   488  001E  1003               	clrc
   489  001F  1283               	bcf	3,5	;RP0=0, select bank0
   490  0020  1303               	bcf	3,6	;RP1=0, select bank0
   491  0021  1C86               	btfss	6,1	;volatile
   492  0022  1403               	setc
   493  0023  1803               	btfsc	3,0
   494  0024  2826               	goto	u3_21
   495  0025  282A               	goto	u3_20
   496  0026                     u3_21:
   497  0026  1283               	bcf	3,5	;RP0=0, select bank0
   498  0027  1303               	bcf	3,6	;RP1=0, select bank0
   499  0028  1486               	bsf	6,1	;volatile
   500  0029  282D               	goto	u4_24
   501  002A                     u3_20:
   502  002A  1283               	bcf	3,5	;RP0=0, select bank0
   503  002B  1303               	bcf	3,6	;RP1=0, select bank0
   504  002C  1086               	bcf	6,1	;volatile
   505  002D                     u4_24:
   506  002D                     i1l663:
   507                           
   508                           ;main.c: 26:     if(INTCONbits.TMR0IE && INTCONbits.TMR0IF)
   509  002D  1E8B               	btfss	11,5	;volatile
   510  002E  2830               	goto	u5_21
   511  002F  2831               	goto	u5_20
   512  0030                     u5_21:
   513  0030  2840               	goto	i1l39
   514  0031                     u5_20:
   515  0031                     i1l665:
   516  0031  1D0B               	btfss	11,2	;volatile
   517  0032  2834               	goto	u6_21
   518  0033  2835               	goto	u6_20
   519  0034                     u6_21:
   520  0034  2840               	goto	i1l39
   521  0035                     u6_20:
   522  0035                     i1l667:
   523                           
   524                           ;main.c: 27:     {;main.c: 28:          TMR0 = 256 - 250;
   525  0035  3006               	movlw	6
   526  0036  1283               	bcf	3,5	;RP0=0, select bank0
   527  0037  1303               	bcf	3,6	;RP1=0, select bank0
   528  0038  0081               	movwf	1	;volatile
   529                           
   530                           ;main.c: 29:          count0++;
   531  0039  3001               	movlw	1
   532  003A  07F0               	addwf	_count0,f
   533  003B  1803               	skipnc
   534  003C  0AF1               	incf	_count0+1,f
   535  003D  3000               	movlw	0
   536  003E  07F1               	addwf	_count0+1,f
   537  003F                     i1l669:
   538                           
   539                           ;main.c: 30:          INTCONbits.TMR0IF = 0;
   540  003F  110B               	bcf	11,2	;volatile
   541  0040                     i1l39:
   542  0040  0873               	movf	??_myIsr+1,w
   543  0041  008A               	movwf	10
   544  0042  0E72               	swapf	??_myIsr,w
   545  0043  0083               	movwf	3
   546  0044  0EFE               	swapf	btemp,f
   547  0045  0E7E               	swapf	btemp,w
   548  0046  0009               	retfie
   549  0047                     __end_of_myIsr:
   550  007E                     btemp	set	126	;btemp
   551  007E                     wtemp0	set	126
   552                           
   553                           	psect	intentry
   554  0004                     __pintentry:	
   555                           ;incstack = 0
   556                           ; Regs used in _myIsr: [wreg+status,0]
   557                           
   558  0004                     interrupt_function:
   559  007E                     saved_w	set	btemp
   560  0004  00FE               	movwf	btemp
   561  0005  0E03               	swapf	3,w
   562  0006  00F2               	movwf	??_myIsr
   563  0007  080A               	movf	10,w
   564  0008  00F3               	movwf	??_myIsr+1
   565  0009  120A  118A  2815   	ljmp	_myIsr
   566                           
   567                           	psect	config
   568                           
   569                           ;Config register CONFIG @ 0x2007
   570                           ;	Oscillator Selection bits
   571                           ;	FOSC = HS, HS oscillator
   572                           ;	Watchdog Timer Enable bit
   573                           ;	WDTE = OFF, WDT disabled
   574                           ;	Power-up Timer Enable bit
   575                           ;	PWRTE = ON, PWRT enabled
   576                           ;	Brown-out Reset Enable bit
   577                           ;	BOREN = ON, BOR enabled
   578                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   579                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
   580                           ;	Data EEPROM Memory Code Protection bit
   581                           ;	CPD = OFF, Data EEPROM code protection off
   582                           ;	Flash Program Memory Write Enable bits
   583                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   584                           ;	In-Circuit Debugger Mode bit
   585                           ;	DEBUG = 0x1, unprogrammed default
   586                           ;	Flash Program Memory Code Protection bit
   587                           ;	CP = OFF, Code protection off
   588  2007                     	org	8199
   589  2007  3FF2               	dw	16370

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2       4
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _myIsr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _myIsr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _myIsr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myIsr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myIsr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                               _init
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _myIsr                                                2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init

 _myIsr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      2       4       1       28.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       4       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       4      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Jan 26 19:49:48 2022

                     l42 008D                       u70 0057                       u71 0056  
                     u80 0063                       u81 005F                       u94 0066  
                    l651 0080                      l643 006C                      l653 008B  
                    l645 007A                      l647 007C                      l671 0047  
                    l649 007D                      l681 0066                      l673 0048  
                    l675 004D                      l677 004E                      l679 0057  
                   i1l39 0040                     _TMR0 0001                     u1_20 0019  
                   u1_21 0018                     u2_20 001D                     u2_21 001C  
                   u3_20 002A                     u3_21 0026                     u4_24 002D  
                   u5_20 0031                     u5_21 0030                     u6_20 0035  
                   u6_21 0034                     _main 0047                     _init 006C  
                   btemp 007E                     start 000C                    ?_main 0072  
                  ?_init 0072                    i1l661 001E                    i1l663 002D  
                  i1l655 0015                    i1l665 0031                    i1l657 0019  
                  i1l667 0035                    i1l659 001D                    i1l669 003F  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  _TRISE 0089                    _myIsr 0015                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 006C             __end_of_init 008E                   ??_main 0074  
                 ??_init 0074                   ?_myIsr 0072                   _INTCON 000B  
                 _count0 0070                   saved_w 007E  __end_of__initialization 0011  
         __pcstackCOMMON 0072            __end_of_myIsr 0047                  ??_myIsr 0072  
             __pmaintext 0047               __pintentry 0004                  __ptext1 006C  
                __ptext2 0015     end_of_initialization 0011                _PORTBbits 0006  
    start_initialization 000F              __pbssCOMMON 0070                ___latbits 0002  
         __size_of_myIsr 0032        interrupt_function 0004            __size_of_main 0025  
          __size_of_init 0022               _INTCONbits 000B                 intlevel1 0000  
             _OPTION_REG 0081  
