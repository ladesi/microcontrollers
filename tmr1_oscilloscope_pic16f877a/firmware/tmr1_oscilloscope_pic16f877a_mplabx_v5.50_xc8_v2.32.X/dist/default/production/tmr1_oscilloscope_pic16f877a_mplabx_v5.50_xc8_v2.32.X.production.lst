

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Jan 27 19:11:24 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.20
    15                           ; Generated 12/02/2020 GMT
    16                           ; 
    17                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  0091                     	;# 
    93  0092                     	;# 
    94  0093                     	;# 
    95  0094                     	;# 
    96  0098                     	;# 
    97  0099                     	;# 
    98  009C                     	;# 
    99  009D                     	;# 
   100  009E                     	;# 
   101  009F                     	;# 
   102  010C                     	;# 
   103  010D                     	;# 
   104  010E                     	;# 
   105  010F                     	;# 
   106  018C                     	;# 
   107  018D                     	;# 
   108  0000                     	;# 
   109  0001                     	;# 
   110  0002                     	;# 
   111  0003                     	;# 
   112  0004                     	;# 
   113  0005                     	;# 
   114  0006                     	;# 
   115  0007                     	;# 
   116  0008                     	;# 
   117  0009                     	;# 
   118  000A                     	;# 
   119  000B                     	;# 
   120  000C                     	;# 
   121  000D                     	;# 
   122  000E                     	;# 
   123  000E                     	;# 
   124  000F                     	;# 
   125  0010                     	;# 
   126  0011                     	;# 
   127  0012                     	;# 
   128  0013                     	;# 
   129  0014                     	;# 
   130  0015                     	;# 
   131  0015                     	;# 
   132  0016                     	;# 
   133  0017                     	;# 
   134  0018                     	;# 
   135  0019                     	;# 
   136  001A                     	;# 
   137  001B                     	;# 
   138  001B                     	;# 
   139  001C                     	;# 
   140  001D                     	;# 
   141  001E                     	;# 
   142  001F                     	;# 
   143  0081                     	;# 
   144  0085                     	;# 
   145  0086                     	;# 
   146  0087                     	;# 
   147  0088                     	;# 
   148  0089                     	;# 
   149  008C                     	;# 
   150  008D                     	;# 
   151  008E                     	;# 
   152  0091                     	;# 
   153  0092                     	;# 
   154  0093                     	;# 
   155  0094                     	;# 
   156  0098                     	;# 
   157  0099                     	;# 
   158  009C                     	;# 
   159  009D                     	;# 
   160  009E                     	;# 
   161  009F                     	;# 
   162  010C                     	;# 
   163  010D                     	;# 
   164  010E                     	;# 
   165  010F                     	;# 
   166  018C                     	;# 
   167  018D                     	;# 
   168  000E                     _TMR1	set	14
   169  0010                     _T1CON	set	16
   170  000B                     _INTCON	set	11
   171  0008                     _PORTD	set	8
   172  0009                     _PORTE	set	9
   173  0007                     _PORTC	set	7
   174  0006                     _PORTB	set	6
   175  0005                     _PORTA	set	5
   176  000C                     _PIR1bits	set	12
   177  0001                     _TMR0	set	1
   178  0006                     _PORTBbits	set	6
   179  000B                     _INTCONbits	set	11
   180  009C                     _CMCON	set	156
   181  0081                     _OPTION_REG	set	129
   182  0089                     _TRISE	set	137
   183  0087                     _TRISC	set	135
   184  0086                     _TRISB	set	134
   185  0085                     _TRISA	set	133
   186  0088                     _TRISD	set	136
   187  008C                     _PIE1bits	set	140
   188                           
   189                           	psect	cinit
   190  000F                     start_initialization:	
   191                           ; #config settings
   192                           
   193  000F                     __initialization:
   194                           
   195                           ; Clear objects allocated to COMMON
   196  000F  01F0               	clrf	__pbssCOMMON& (0+127)
   197  0010  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   198  0011  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   199  0012  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   200  0013                     end_of_initialization:	
   201                           ;End of C runtime variable initialization code
   202                           
   203  0013                     __end_of__initialization:
   204  0013  0183               	clrf	3
   205  0014  120A  118A  2860   	ljmp	_main	;jump to C main() function
   206                           
   207                           	psect	bssCOMMON
   208  0070                     __pbssCOMMON:
   209  0070                     _count1:
   210  0070                     	ds	2
   211  0072                     _count0:
   212  0072                     	ds	2
   213                           
   214                           	psect	cstackCOMMON
   215  0074                     __pcstackCOMMON:
   216  0074                     ?_myIsr:
   217  0074                     ??_myIsr:	
   218                           ; 1 bytes @ 0x0
   219                           
   220  0074                     ?_init:	
   221                           ; 1 bytes @ 0x0
   222                           
   223  0074                     ?_main:	
   224                           ; 1 bytes @ 0x0
   225                           
   226                           
   227                           ; 1 bytes @ 0x0
   228  0074                     	ds	2
   229  0076                     ??_init:
   230  0076                     ??_main:	
   231                           ; 1 bytes @ 0x2
   232                           
   233                           
   234                           	psect	maintext
   235  0060                     __pmaintext:	
   236                           ; 1 bytes @ 0x2
   237 ;;
   238 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   239 ;;
   240 ;; *************** function _main *****************
   241 ;; Defined at:
   242 ;;		line 105 in file "main.c"
   243 ;; Parameters:    Size  Location     Type
   244 ;;		None
   245 ;; Auto vars:     Size  Location     Type
   246 ;;		None
   247 ;; Return value:  Size  Location     Type
   248 ;;                  1    wreg      void 
   249 ;; Registers used:
   250 ;;		wreg, status,2, status,0, pclath, cstack
   251 ;; Tracked objects:
   252 ;;		On entry : B00/0
   253 ;;		On exit  : 0/0
   254 ;;		Unchanged: 0/0
   255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   256 ;;      Params:         0       0       0       0       0
   257 ;;      Locals:         0       0       0       0       0
   258 ;;      Temps:          0       0       0       0       0
   259 ;;      Totals:         0       0       0       0       0
   260 ;;Total ram usage:        0 bytes
   261 ;; Hardware stack levels required when called: 2
   262 ;; This function calls:
   263 ;;		_init
   264 ;; This function is called by:
   265 ;;		Startup code after reset
   266 ;; This function uses a non-reentrant model
   267 ;;
   268                           
   269                           
   270                           ;psect for function _main
   271  0060                     _main:
   272  0060                     l703:	
   273                           ;incstack = 0
   274                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   275                           
   276                           
   277                           ;main.c: 108:     INTCONbits.GIE = 0;
   278  0060  138B               	bcf	11,7	;volatile
   279  0061                     l705:
   280                           
   281                           ;main.c: 111:     init();
   282  0061  120A  118A  209F  120A  118A  	fcall	_init
   283  0066                     l707:
   284                           
   285                           ;main.c: 114:     INTCONbits.GIE = 1;
   286  0066  178B               	bsf	11,7	;volatile
   287  0067                     l709:
   288                           
   289                           ;main.c: 118:     {;main.c: 119:         if(count0 == 5000)
   290  0067  3088               	movlw	136
   291  0068  0672               	xorwf	_count0,w
   292  0069  3013               	movlw	19
   293  006A  1903               	skipnz
   294  006B  0673               	xorwf	_count0+1,w
   295  006C  1D03               	btfss	3,2
   296  006D  286F               	goto	u91
   297  006E  2870               	goto	u90
   298  006F                     u91:
   299  006F  2881               	goto	l715
   300  0070                     u90:
   301  0070                     l711:
   302                           
   303                           ;main.c: 120:         {;main.c: 121:             PORTBbits.RB6 = !PORTBbits.RB6;
   304  0070  1003               	clrc
   305  0071  1283               	bcf	3,5	;RP0=0, select bank0
   306  0072  1303               	bcf	3,6	;RP1=0, select bank0
   307  0073  1F06               	btfss	6,6	;volatile
   308  0074  1403               	setc
   309  0075  1803               	btfsc	3,0
   310  0076  2878               	goto	u101
   311  0077  287C               	goto	u100
   312  0078                     u101:
   313  0078  1283               	bcf	3,5	;RP0=0, select bank0
   314  0079  1303               	bcf	3,6	;RP1=0, select bank0
   315  007A  1706               	bsf	6,6	;volatile
   316  007B  287F               	goto	u114
   317  007C                     u100:
   318  007C  1283               	bcf	3,5	;RP0=0, select bank0
   319  007D  1303               	bcf	3,6	;RP1=0, select bank0
   320  007E  1306               	bcf	6,6	;volatile
   321  007F                     u114:
   322  007F                     l713:
   323                           
   324                           ;main.c: 122:             count0 = 0;
   325  007F  01F2               	clrf	_count0
   326  0080  01F3               	clrf	_count0+1
   327  0081                     l715:
   328                           
   329                           ;main.c: 124:         if(count1 == 5000)
   330  0081  3088               	movlw	136
   331  0082  0670               	xorwf	_count1,w
   332  0083  3013               	movlw	19
   333  0084  1903               	skipnz
   334  0085  0671               	xorwf	_count1+1,w
   335  0086  1D03               	btfss	3,2
   336  0087  2889               	goto	u121
   337  0088  288A               	goto	u120
   338  0089                     u121:
   339  0089  2867               	goto	l709
   340  008A                     u120:
   341  008A                     l717:
   342                           
   343                           ;main.c: 125:         {;main.c: 126:             PORTBbits.RB7 = !PORTBbits.RB7;
   344  008A  1003               	clrc
   345  008B  1283               	bcf	3,5	;RP0=0, select bank0
   346  008C  1303               	bcf	3,6	;RP1=0, select bank0
   347  008D  1F86               	btfss	6,7	;volatile
   348  008E  1403               	setc
   349  008F  1803               	btfsc	3,0
   350  0090  2892               	goto	u131
   351  0091  2896               	goto	u130
   352  0092                     u131:
   353  0092  1283               	bcf	3,5	;RP0=0, select bank0
   354  0093  1303               	bcf	3,6	;RP1=0, select bank0
   355  0094  1786               	bsf	6,7	;volatile
   356  0095  2899               	goto	u144
   357  0096                     u130:
   358  0096  1283               	bcf	3,5	;RP0=0, select bank0
   359  0097  1303               	bcf	3,6	;RP1=0, select bank0
   360  0098  1386               	bcf	6,7	;volatile
   361  0099                     u144:
   362  0099                     l719:
   363                           
   364                           ;main.c: 127:             count1 = 0;
   365  0099  01F0               	clrf	_count1
   366  009A  01F1               	clrf	_count1+1
   367  009B  2867               	goto	l709
   368  009C  120A  118A  280C   	ljmp	start
   369  009F                     __end_of_main:
   370                           
   371                           	psect	text1
   372  009F                     __ptext1:	
   373 ;; *************** function _init *****************
   374 ;; Defined at:
   375 ;;		line 43 in file "main.c"
   376 ;; Parameters:    Size  Location     Type
   377 ;;		None
   378 ;; Auto vars:     Size  Location     Type
   379 ;;		None
   380 ;; Return value:  Size  Location     Type
   381 ;;                  1    wreg      void 
   382 ;; Registers used:
   383 ;;		wreg, status,2
   384 ;; Tracked objects:
   385 ;;		On entry : 0/0
   386 ;;		On exit  : 0/0
   387 ;;		Unchanged: 0/0
   388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   389 ;;      Params:         0       0       0       0       0
   390 ;;      Locals:         0       0       0       0       0
   391 ;;      Temps:          0       0       0       0       0
   392 ;;      Totals:         0       0       0       0       0
   393 ;;Total ram usage:        0 bytes
   394 ;; Hardware stack levels used: 1
   395 ;; Hardware stack levels required when called: 1
   396 ;; This function calls:
   397 ;;		Nothing
   398 ;; This function is called by:
   399 ;;		_main
   400 ;; This function uses a non-reentrant model
   401 ;;
   402                           
   403                           
   404                           ;psect for function _init
   405  009F                     _init:
   406  009F                     l657:	
   407                           ;incstack = 0
   408                           ; Regs used in _init: [wreg+status,2]
   409                           
   410                           
   411                           ;main.c: 46:     PORTA = 0b00000000;
   412  009F  1283               	bcf	3,5	;RP0=0, select bank0
   413  00A0  1303               	bcf	3,6	;RP1=0, select bank0
   414  00A1  0185               	clrf	5	;volatile
   415                           
   416                           ;main.c: 47:     PORTB = 0b00000000;
   417  00A2  0186               	clrf	6	;volatile
   418                           
   419                           ;main.c: 48:     PORTC = 0b00000000;
   420  00A3  0187               	clrf	7	;volatile
   421                           
   422                           ;main.c: 49:     TRISD = 0b00000000;
   423  00A4  1683               	bsf	3,5	;RP0=1, select bank1
   424  00A5  1303               	bcf	3,6	;RP1=0, select bank1
   425  00A6  0188               	clrf	8	;volatile
   426                           
   427                           ;main.c: 50:     PORTE = 0b00000000;
   428  00A7  1283               	bcf	3,5	;RP0=0, select bank0
   429  00A8  1303               	bcf	3,6	;RP1=0, select bank0
   430  00A9  0189               	clrf	9	;volatile
   431                           
   432                           ;main.c: 52:     TRISA = 0b00000000;
   433  00AA  1683               	bsf	3,5	;RP0=1, select bank1
   434  00AB  1303               	bcf	3,6	;RP1=0, select bank1
   435  00AC  0185               	clrf	5	;volatile
   436  00AD                     l659:
   437                           
   438                           ;main.c: 53:     TRISB = 0b00000001;
   439  00AD  3001               	movlw	1
   440  00AE  0086               	movwf	6	;volatile
   441  00AF                     l661:
   442                           
   443                           ;main.c: 54:     TRISC = 0b00000000;
   444  00AF  0187               	clrf	7	;volatile
   445  00B0                     l663:
   446                           
   447                           ;main.c: 55:     PORTD = 0b00000000;
   448  00B0  1283               	bcf	3,5	;RP0=0, select bank0
   449  00B1  1303               	bcf	3,6	;RP1=0, select bank0
   450  00B2  0188               	clrf	8	;volatile
   451  00B3                     l665:
   452                           
   453                           ;main.c: 56:     TRISE = 0b00000000;
   454  00B3  1683               	bsf	3,5	;RP0=1, select bank1
   455  00B4  1303               	bcf	3,6	;RP1=0, select bank1
   456  00B5  0189               	clrf	9	;volatile
   457                           
   458                           ;main.c: 59:     OPTION_REG = 0b10000001;
   459  00B6  3081               	movlw	129
   460  00B7  0081               	movwf	1	;volatile
   461                           
   462                           ;main.c: 70:     INTCON = 0b01110000;
   463  00B8  3070               	movlw	112
   464  00B9  008B               	movwf	11	;volatile
   465                           
   466                           ;main.c: 81:     TMR0 = 256 - 250;
   467  00BA  3006               	movlw	6
   468  00BB  1283               	bcf	3,5	;RP0=0, select bank0
   469  00BC  1303               	bcf	3,6	;RP1=0, select bank0
   470  00BD  0081               	movwf	1	;volatile
   471  00BE                     l667:
   472                           
   473                           ;main.c: 82:     count0 = 0;
   474  00BE  01F2               	clrf	_count0
   475  00BF  01F3               	clrf	_count0+1
   476  00C0                     l669:
   477                           
   478                           ;main.c: 85:     T1CON = 0b00000001;
   479  00C0  3001               	movlw	1
   480  00C1  0090               	movwf	16	;volatile
   481  00C2                     l671:
   482                           
   483                           ;main.c: 96:     TMR1 = 65536 - 1000;
   484  00C2  30FC               	movlw	252
   485  00C3  008F               	movwf	15	;volatile
   486  00C4  3018               	movlw	24
   487  00C5  008E               	movwf	14	;volatile
   488                           
   489                           ;main.c: 97:     count1 = 0;
   490  00C6  01F0               	clrf	_count1
   491  00C7  01F1               	clrf	_count1+1
   492  00C8                     l673:
   493                           
   494                           ;main.c: 99:     PIE1bits.TMR1IE = 1;
   495  00C8  1683               	bsf	3,5	;RP0=1, select bank1
   496  00C9  1303               	bcf	3,6	;RP1=0, select bank1
   497  00CA  140C               	bsf	12,0	;volatile
   498  00CB                     l675:
   499                           
   500                           ;main.c: 102:     CMCON = 0x07;
   501  00CB  3007               	movlw	7
   502  00CC  009C               	movwf	28	;volatile
   503  00CD                     l55:
   504  00CD  0008               	return
   505  00CE                     __end_of_init:
   506                           
   507                           	psect	text2
   508  0017                     __ptext2:	
   509 ;; *************** function _myIsr *****************
   510 ;; Defined at:
   511 ;;		line 16 in file "main.c"
   512 ;; Parameters:    Size  Location     Type
   513 ;;		None
   514 ;; Auto vars:     Size  Location     Type
   515 ;;		None
   516 ;; Return value:  Size  Location     Type
   517 ;;                  1    wreg      void 
   518 ;; Registers used:
   519 ;;		wreg, status,0
   520 ;; Tracked objects:
   521 ;;		On entry : 0/0
   522 ;;		On exit  : 0/0
   523 ;;		Unchanged: 0/0
   524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   525 ;;      Params:         0       0       0       0       0
   526 ;;      Locals:         0       0       0       0       0
   527 ;;      Temps:          2       0       0       0       0
   528 ;;      Totals:         2       0       0       0       0
   529 ;;Total ram usage:        2 bytes
   530 ;; Hardware stack levels used: 1
   531 ;; This function calls:
   532 ;;		Nothing
   533 ;; This function is called by:
   534 ;;		Interrupt level 1
   535 ;; This function uses a non-reentrant model
   536 ;;
   537                           
   538                           
   539                           ;psect for function _myIsr
   540  0017                     _myIsr:
   541  0017                     i1l677:
   542                           
   543                           ;main.c: 19:     if(INTCONbits.INTE && INTCONbits.INTF)
   544  0017  1E0B               	btfss	11,4	;volatile
   545  0018  281A               	goto	u1_21
   546  0019  281B               	goto	u1_20
   547  001A                     u1_21:
   548  001A  282F               	goto	i1l685
   549  001B                     u1_20:
   550  001B                     i1l679:
   551  001B  1C8B               	btfss	11,1	;volatile
   552  001C  281E               	goto	u2_21
   553  001D  281F               	goto	u2_20
   554  001E                     u2_21:
   555  001E  282F               	goto	i1l685
   556  001F                     u2_20:
   557  001F                     i1l681:
   558                           
   559                           ;main.c: 20:     {;main.c: 21:         INTCONbits.INTF = 0;
   560  001F  108B               	bcf	11,1	;volatile
   561  0020                     i1l683:
   562                           
   563                           ;main.c: 22:         PORTBbits.RB1 = !PORTBbits.RB1;
   564  0020  1003               	clrc
   565  0021  1283               	bcf	3,5	;RP0=0, select bank0
   566  0022  1303               	bcf	3,6	;RP1=0, select bank0
   567  0023  1C86               	btfss	6,1	;volatile
   568  0024  1403               	setc
   569  0025  1803               	btfsc	3,0
   570  0026  2828               	goto	u3_21
   571  0027  282C               	goto	u3_20
   572  0028                     u3_21:
   573  0028  1283               	bcf	3,5	;RP0=0, select bank0
   574  0029  1303               	bcf	3,6	;RP1=0, select bank0
   575  002A  1486               	bsf	6,1	;volatile
   576  002B  282F               	goto	u4_24
   577  002C                     u3_20:
   578  002C  1283               	bcf	3,5	;RP0=0, select bank0
   579  002D  1303               	bcf	3,6	;RP1=0, select bank0
   580  002E  1086               	bcf	6,1	;volatile
   581  002F                     u4_24:
   582  002F                     i1l685:
   583                           
   584                           ;main.c: 26:     if(INTCONbits.TMR0IE && INTCONbits.TMR0IF)
   585  002F  1E8B               	btfss	11,5	;volatile
   586  0030  2832               	goto	u5_21
   587  0031  2833               	goto	u5_20
   588  0032                     u5_21:
   589  0032  2842               	goto	i1l693
   590  0033                     u5_20:
   591  0033                     i1l687:
   592  0033  1D0B               	btfss	11,2	;volatile
   593  0034  2836               	goto	u6_21
   594  0035  2837               	goto	u6_20
   595  0036                     u6_21:
   596  0036  2842               	goto	i1l693
   597  0037                     u6_20:
   598  0037                     i1l689:
   599                           
   600                           ;main.c: 27:     {;main.c: 28:          TMR0 = 256 - 250;
   601  0037  3006               	movlw	6
   602  0038  1283               	bcf	3,5	;RP0=0, select bank0
   603  0039  1303               	bcf	3,6	;RP1=0, select bank0
   604  003A  0081               	movwf	1	;volatile
   605                           
   606                           ;main.c: 29:          count0++;
   607  003B  3001               	movlw	1
   608  003C  07F2               	addwf	_count0,f
   609  003D  1803               	skipnc
   610  003E  0AF3               	incf	_count0+1,f
   611  003F  3000               	movlw	0
   612  0040  07F3               	addwf	_count0+1,f
   613  0041                     i1l691:
   614                           
   615                           ;main.c: 30:          INTCONbits.TMR0IF = 0;
   616  0041  110B               	bcf	11,2	;volatile
   617  0042                     i1l693:
   618                           
   619                           ;main.c: 34:     if(PIE1bits.TMR1IE && PIR1bits.TMR1IF)
   620  0042  1683               	bsf	3,5	;RP0=1, select bank1
   621  0043  1303               	bcf	3,6	;RP1=0, select bank1
   622  0044  1C0C               	btfss	12,0	;volatile
   623  0045  2847               	goto	u7_21
   624  0046  2848               	goto	u7_20
   625  0047                     u7_21:
   626  0047  2859               	goto	i1l52
   627  0048                     u7_20:
   628  0048                     i1l695:
   629  0048  1283               	bcf	3,5	;RP0=0, select bank0
   630  0049  1303               	bcf	3,6	;RP1=0, select bank0
   631  004A  1C0C               	btfss	12,0	;volatile
   632  004B  284D               	goto	u8_21
   633  004C  284E               	goto	u8_20
   634  004D                     u8_21:
   635  004D  2859               	goto	i1l52
   636  004E                     u8_20:
   637  004E                     i1l697:
   638                           
   639                           ;main.c: 35:     {;main.c: 36:         TMR1 = 65536 - 1000;
   640  004E  30FC               	movlw	252
   641  004F  008F               	movwf	15	;volatile
   642  0050  3018               	movlw	24
   643  0051  008E               	movwf	14	;volatile
   644  0052                     i1l699:
   645                           
   646                           ;main.c: 37:         count1++;
   647  0052  3001               	movlw	1
   648  0053  07F0               	addwf	_count1,f
   649  0054  1803               	skipnc
   650  0055  0AF1               	incf	_count1+1,f
   651  0056  3000               	movlw	0
   652  0057  07F1               	addwf	_count1+1,f
   653  0058                     i1l701:
   654                           
   655                           ;main.c: 38:         PIR1bits.TMR1IF = 0;
   656  0058  100C               	bcf	12,0	;volatile
   657  0059                     i1l52:
   658  0059  0875               	movf	??_myIsr+1,w
   659  005A  008A               	movwf	10
   660  005B  0E74               	swapf	??_myIsr,w
   661  005C  0083               	movwf	3
   662  005D  0EFE               	swapf	btemp,f
   663  005E  0E7E               	swapf	btemp,w
   664  005F  0009               	retfie
   665  0060                     __end_of_myIsr:
   666  007E                     btemp	set	126	;btemp
   667  007E                     wtemp0	set	126
   668                           
   669                           	psect	intentry
   670  0004                     __pintentry:	
   671                           ;incstack = 0
   672                           ; Regs used in _myIsr: [wreg+status,0]
   673                           
   674  0004                     interrupt_function:
   675  007E                     saved_w	set	btemp
   676  0004  00FE               	movwf	btemp
   677  0005  0E03               	swapf	3,w
   678  0006  00F4               	movwf	??_myIsr
   679  0007  080A               	movf	10,w
   680  0008  00F5               	movwf	??_myIsr+1
   681  0009  120A  118A  2817   	ljmp	_myIsr
   682                           
   683                           	psect	config
   684                           
   685                           ;Config register CONFIG @ 0x2007
   686                           ;	Oscillator Selection bits
   687                           ;	FOSC = HS, HS oscillator
   688                           ;	Watchdog Timer Enable bit
   689                           ;	WDTE = OFF, WDT disabled
   690                           ;	Power-up Timer Enable bit
   691                           ;	PWRTE = ON, PWRT enabled
   692                           ;	Brown-out Reset Enable bit
   693                           ;	BOREN = ON, BOR enabled
   694                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   695                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
   696                           ;	Data EEPROM Memory Code Protection bit
   697                           ;	CPD = OFF, Data EEPROM code protection off
   698                           ;	Flash Program Memory Write Enable bits
   699                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   700                           ;	In-Circuit Debugger Mode bit
   701                           ;	DEBUG = 0x1, unprogrammed default
   702                           ;	Flash Program Memory Code Protection bit
   703                           ;	CP = OFF, Code protection off
   704  2007                     	org	8199
   705  2007  3FF2               	dw	16370

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2       6
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _myIsr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _myIsr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _myIsr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myIsr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myIsr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                               _init
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _myIsr                                                2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init

 _myIsr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      2       6       1       42.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       6       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       6      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Jan 27 19:11:24 2022

                     l55 00CD                       u90 0070                       u91 006F  
                    l711 0070                      l703 0060                      l713 007F  
                    l705 0061                      l715 0081                      l707 0066  
                    l661 00AF                      l717 008A                      l709 0067  
                    l671 00C2                      l663 00B0                      l719 0099  
                    l673 00C8                      l665 00B3                      l657 009F  
                    l675 00CB                      l667 00BE                      l659 00AD  
                    l669 00C0                      u100 007C                      u101 0078  
                    u120 008A                      u121 0089                      u130 0096  
                    u114 007F                      u131 0092                      u144 0099  
                   i1l52 0059                     _TMR0 0001                     _TMR1 000E  
                   u1_20 001B                     u1_21 001A                     u2_20 001F  
                   u2_21 001E                     u3_20 002C                     u3_21 0028  
                   u4_24 002F                     u5_20 0033                     u5_21 0032  
                   u6_20 0037                     u6_21 0036                     u7_20 0048  
                   u7_21 0047                     u8_20 004E                     u8_21 004D  
                   _main 0060                     _init 009F                     btemp 007E  
                   start 000C                    ?_main 0074                    ?_init 0074  
                  _CMCON 009C                    _T1CON 0010                    i1l701 0058  
                  i1l681 001F                    i1l691 0041                    i1l683 0020  
                  i1l693 0042                    i1l685 002F                    i1l677 0017  
                  i1l695 0048                    i1l687 0033                    i1l679 001B  
                  i1l697 004E                    i1l689 0037                    i1l699 0052  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  _TRISE 0089                    _myIsr 0017                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 009F             __end_of_init 00CE                   ??_main 0076  
                 ??_init 0076                   ?_myIsr 0074                   _INTCON 000B  
                 _count0 0072                   _count1 0070                   saved_w 007E  
__end_of__initialization 0013           __pcstackCOMMON 0074            __end_of_myIsr 0060  
                ??_myIsr 0074               __pmaintext 0060               __pintentry 0004  
                __ptext1 009F                  __ptext2 0017     end_of_initialization 0013  
              _PORTBbits 0006      start_initialization 000F              __pbssCOMMON 0070  
              ___latbits 0002           __size_of_myIsr 0049        interrupt_function 0004  
               _PIE1bits 008C                 _PIR1bits 000C            __size_of_main 003F  
          __size_of_init 002F               _INTCONbits 000B                 intlevel1 0000  
             _OPTION_REG 0081  
