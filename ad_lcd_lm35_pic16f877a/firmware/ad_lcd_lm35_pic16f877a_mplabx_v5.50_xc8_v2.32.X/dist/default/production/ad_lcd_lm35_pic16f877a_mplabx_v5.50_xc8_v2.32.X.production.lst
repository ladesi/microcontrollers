

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Jan 27 21:02:00 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text21,local,class=CODE,merge=1,delta=2
    32                           	psect	text22,local,class=CODE,merge=1,delta=2
    33                           	psect	text23,local,class=CODE,merge=1,delta=2
    34                           	psect	intentry,global,class=CODE,delta=2
    35                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    36                           	dabs	1,0x7E,2
    37  0000                     
    38                           ; Version 2.20
    39                           ; Generated 12/02/2020 GMT
    40                           ; 
    41                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC16F877A Definitions
    70                           ; 
    71                           ; SFR Addresses
    72  0000                     	;# 
    73  0001                     	;# 
    74  0002                     	;# 
    75  0003                     	;# 
    76  0004                     	;# 
    77  0005                     	;# 
    78  0006                     	;# 
    79  0007                     	;# 
    80  0008                     	;# 
    81  0009                     	;# 
    82  000A                     	;# 
    83  000B                     	;# 
    84  000C                     	;# 
    85  000D                     	;# 
    86  000E                     	;# 
    87  000E                     	;# 
    88  000F                     	;# 
    89  0010                     	;# 
    90  0011                     	;# 
    91  0012                     	;# 
    92  0013                     	;# 
    93  0014                     	;# 
    94  0015                     	;# 
    95  0015                     	;# 
    96  0016                     	;# 
    97  0017                     	;# 
    98  0018                     	;# 
    99  0019                     	;# 
   100  001A                     	;# 
   101  001B                     	;# 
   102  001B                     	;# 
   103  001C                     	;# 
   104  001D                     	;# 
   105  001E                     	;# 
   106  001F                     	;# 
   107  0081                     	;# 
   108  0085                     	;# 
   109  0086                     	;# 
   110  0087                     	;# 
   111  0088                     	;# 
   112  0089                     	;# 
   113  008C                     	;# 
   114  008D                     	;# 
   115  008E                     	;# 
   116  0091                     	;# 
   117  0092                     	;# 
   118  0093                     	;# 
   119  0094                     	;# 
   120  0098                     	;# 
   121  0099                     	;# 
   122  009C                     	;# 
   123  009D                     	;# 
   124  009E                     	;# 
   125  009F                     	;# 
   126  010C                     	;# 
   127  010D                     	;# 
   128  010E                     	;# 
   129  010F                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  0000                     	;# 
   133  0001                     	;# 
   134  0002                     	;# 
   135  0003                     	;# 
   136  0004                     	;# 
   137  0005                     	;# 
   138  0006                     	;# 
   139  0007                     	;# 
   140  0008                     	;# 
   141  0009                     	;# 
   142  000A                     	;# 
   143  000B                     	;# 
   144  000C                     	;# 
   145  000D                     	;# 
   146  000E                     	;# 
   147  000E                     	;# 
   148  000F                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0014                     	;# 
   154  0015                     	;# 
   155  0015                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001B                     	;# 
   162  001B                     	;# 
   163  001C                     	;# 
   164  001D                     	;# 
   165  001E                     	;# 
   166  001F                     	;# 
   167  0081                     	;# 
   168  0085                     	;# 
   169  0086                     	;# 
   170  0087                     	;# 
   171  0088                     	;# 
   172  0089                     	;# 
   173  008C                     	;# 
   174  008D                     	;# 
   175  008E                     	;# 
   176  0091                     	;# 
   177  0092                     	;# 
   178  0093                     	;# 
   179  0094                     	;# 
   180  0098                     	;# 
   181  0099                     	;# 
   182  009C                     	;# 
   183  009D                     	;# 
   184  009E                     	;# 
   185  009F                     	;# 
   186  010C                     	;# 
   187  010D                     	;# 
   188  010E                     	;# 
   189  010F                     	;# 
   190  018C                     	;# 
   191  018D                     	;# 
   192  0000                     	;# 
   193  0001                     	;# 
   194  0002                     	;# 
   195  0003                     	;# 
   196  0004                     	;# 
   197  0005                     	;# 
   198  0006                     	;# 
   199  0007                     	;# 
   200  0008                     	;# 
   201  0009                     	;# 
   202  000A                     	;# 
   203  000B                     	;# 
   204  000C                     	;# 
   205  000D                     	;# 
   206  000E                     	;# 
   207  000E                     	;# 
   208  000F                     	;# 
   209  0010                     	;# 
   210  0011                     	;# 
   211  0012                     	;# 
   212  0013                     	;# 
   213  0014                     	;# 
   214  0015                     	;# 
   215  0015                     	;# 
   216  0016                     	;# 
   217  0017                     	;# 
   218  0018                     	;# 
   219  0019                     	;# 
   220  001A                     	;# 
   221  001B                     	;# 
   222  001B                     	;# 
   223  001C                     	;# 
   224  001D                     	;# 
   225  001E                     	;# 
   226  001F                     	;# 
   227  0081                     	;# 
   228  0085                     	;# 
   229  0086                     	;# 
   230  0087                     	;# 
   231  0088                     	;# 
   232  0089                     	;# 
   233  008C                     	;# 
   234  008D                     	;# 
   235  008E                     	;# 
   236  0091                     	;# 
   237  0092                     	;# 
   238  0093                     	;# 
   239  0094                     	;# 
   240  0098                     	;# 
   241  0099                     	;# 
   242  009C                     	;# 
   243  009D                     	;# 
   244  009E                     	;# 
   245  009F                     	;# 
   246  010C                     	;# 
   247  010D                     	;# 
   248  010E                     	;# 
   249  010F                     	;# 
   250  018C                     	;# 
   251  018D                     	;# 
   252  001F                     _ADCON0	set	31
   253  000B                     _INTCON	set	11
   254  0009                     _PORTE	set	9
   255  0007                     _PORTC	set	7
   256  0006                     _PORTB	set	6
   257  0005                     _PORTA	set	5
   258  001E                     _ADRESH	set	30
   259  001F                     _ADCON0bits	set	31
   260  0006                     _PORTBbits	set	6
   261  000B                     _INTCONbits	set	11
   262  0008                     _PORTD	set	8
   263  0009                     _PORTEbits	set	9
   264  009F                     _ADCON1	set	159
   265  009C                     _CMCON	set	156
   266  0081                     _OPTION_REG	set	129
   267  0089                     _TRISE	set	137
   268  0087                     _TRISC	set	135
   269  0086                     _TRISB	set	134
   270  0085                     _TRISA	set	133
   271  0088                     _TRISD	set	136
   272  009E                     _ADRESL	set	158
   273                           
   274                           	psect	strings
   275  0300                     __pstrings:
   276  0300                     stringtab:
   277  0300                     __stringtab:
   278                           
   279                           ;	String table - string pointers are 1 byte each
   280  0300  1BFF               	btfsc	btemp+1,7
   281  0301  2B0A               	ljmp	stringcode
   282  0302  1383               	bcf	3,7
   283  0303  187F               	btfsc	btemp+1,0
   284  0304  1783               	bsf	3,7
   285  0305  0800               	movf	0,w
   286  0306  0A84               	incf	4,f
   287  0307  1903               	skipnz
   288  0308  0AFF               	incf	btemp+1,f
   289  0309  0008               	return
   290  030A                     stringcode:
   291  030A                     stringdir:
   292  030A  3003               	movlw	high stringdir
   293  030B  008A               	movwf	10
   294  030C  0804               	movf	4,w
   295  030D  0A84               	incf	4,f
   296  030E  0782               	addwf	2,f
   297  030F                     __stringbase:
   298  030F  3400               	retlw	0
   299  0310                     __end_of__stringtab:
   300  0310                     STR_1:
   301  0310  3441               	retlw	65	;'A'
   302  0311  342F               	retlw	47	;'/'
   303  0312  3444               	retlw	68	;'D'
   304  0313  3420               	retlw	32	;' '
   305  0314  3443               	retlw	67	;'C'
   306  0315  344F               	retlw	79	;'O'
   307  0316  344E               	retlw	78	;'N'
   308  0317  3456               	retlw	86	;'V'
   309  0318  3445               	retlw	69	;'E'
   310  0319  3452               	retlw	82	;'R'
   311  031A  3453               	retlw	83	;'S'
   312  031B  3449               	retlw	73	;'I'
   313  031C  344F               	retlw	79	;'O'
   314  031D  344E               	retlw	78	;'N'
   315  031E  3400               	retlw	0
   316                           
   317                           	psect	cinit
   318  000F                     start_initialization:	
   319                           ; #config settings
   320                           
   321  000F                     __initialization:
   322                           
   323                           ; Clear objects allocated to COMMON
   324  000F  01FA               	clrf	__pbssCOMMON& (0+127)
   325  0010  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   326                           
   327                           ; Clear objects allocated to BANK0
   328  0011  1283               	bcf	3,5	;RP0=0, select bank0
   329  0012  1303               	bcf	3,6	;RP1=0, select bank0
   330  0013  01B2               	clrf	__pbssBANK0& (0+127)
   331  0014  01B3               	clrf	(__pbssBANK0+1)& (0+127)
   332  0015  01B4               	clrf	(__pbssBANK0+2)& (0+127)
   333  0016  01B5               	clrf	(__pbssBANK0+3)& (0+127)
   334  0017  01B6               	clrf	(__pbssBANK0+4)& (0+127)
   335  0018  01B7               	clrf	(__pbssBANK0+5)& (0+127)
   336  0019  01B8               	clrf	(__pbssBANK0+6)& (0+127)
   337  001A  01B9               	clrf	(__pbssBANK0+7)& (0+127)
   338  001B  01BA               	clrf	(__pbssBANK0+8)& (0+127)
   339  001C                     end_of_initialization:	
   340                           ;End of C runtime variable initialization code
   341                           
   342  001C                     __end_of__initialization:
   343  001C  0183               	clrf	3
   344  001D  120A  118A  2892   	ljmp	_main	;jump to C main() function
   345                           
   346                           	psect	bssCOMMON
   347  007A                     __pbssCOMMON:
   348  007A                     _ad_value:
   349  007A                     	ds	2
   350                           
   351                           	psect	bssBANK0
   352  0032                     __pbssBANK0:
   353  0032                     _var7:
   354  0032                     	ds	1
   355  0033                     _var6:
   356  0033                     	ds	1
   357  0034                     _var5:
   358  0034                     	ds	1
   359  0035                     _var4:
   360  0035                     	ds	1
   361  0036                     _ad_char_val:
   362  0036                     	ds	5
   363                           
   364                           	psect	cstackCOMMON
   365  0070                     __pcstackCOMMON:
   366  0070                     ?_lcd_clear:
   367  0070                     ?_lcd_delay_1us:	
   368                           ; 1 bytes @ 0x0
   369                           
   370  0070                     ?_lcd_delay_40us:	
   371                           ; 1 bytes @ 0x0
   372                           
   373  0070                     ?_lcd_delay_2ms:	
   374                           ; 1 bytes @ 0x0
   375                           
   376  0070                     ?_lcd_delay_40ms:	
   377                           ; 1 bytes @ 0x0
   378                           
   379  0070                     ?_lcd_en_pulse:	
   380                           ; 1 bytes @ 0x0
   381                           
   382  0070                     ?_lcd_send_nibble:	
   383                           ; 1 bytes @ 0x0
   384                           
   385  0070                     ?_lcd_byte_4bits:	
   386                           ; 1 bytes @ 0x0
   387                           
   388  0070                     ?_lcd_byte_8bits:	
   389                           ; 1 bytes @ 0x0
   390                           
   391  0070                     ?_lcd_cmd:	
   392                           ; 1 bytes @ 0x0
   393                           
   394  0070                     ?_lcd_char:	
   395                           ; 1 bytes @ 0x0
   396                           
   397  0070                     ?_lcd_init_8bits:	
   398                           ; 1 bytes @ 0x0
   399                           
   400  0070                     ?_lcd_init_4bits:	
   401                           ; 1 bytes @ 0x0
   402                           
   403  0070                     ?_lcd_init:	
   404                           ; 1 bytes @ 0x0
   405                           
   406  0070                     ?_myIsr:	
   407                           ; 1 bytes @ 0x0
   408                           
   409  0070                     ??_myIsr:	
   410                           ; 1 bytes @ 0x0
   411                           
   412  0070                     ?_amost1:	
   413                           ; 1 bytes @ 0x0
   414                           
   415  0070                     ?_init:	
   416                           ; 1 bytes @ 0x0
   417                           
   418  0070                     ?_main:	
   419                           ; 1 bytes @ 0x0
   420                           
   421                           
   422                           ; 1 bytes @ 0x0
   423  0070                     	ds	2
   424  0072                     ??_lcd_delay_1us:
   425  0072                     ??_lcd_delay_40us:	
   426                           ; 1 bytes @ 0x2
   427                           
   428  0072                     ??_lcd_delay_2ms:	
   429                           ; 1 bytes @ 0x2
   430                           
   431  0072                     ??_lcd_delay_40ms:	
   432                           ; 1 bytes @ 0x2
   433                           
   434  0072                     ??_lcd_en_pulse:	
   435                           ; 1 bytes @ 0x2
   436                           
   437  0072                     ??_lcd_send_nibble:	
   438                           ; 1 bytes @ 0x2
   439                           
   440  0072                     ??_lcd_byte_8bits:	
   441                           ; 1 bytes @ 0x2
   442                           
   443  0072                     ??_amost1:	
   444                           ; 1 bytes @ 0x2
   445                           
   446  0072                     ??_init:	
   447                           ; 1 bytes @ 0x2
   448                           
   449  0072                     ?___lwdiv:	
   450                           ; 1 bytes @ 0x2
   451                           
   452  0072                     ?___lwmod:	
   453                           ; 2 bytes @ 0x2
   454                           
   455  0072                     lcd_send_nibble@data:	
   456                           ; 2 bytes @ 0x2
   457                           
   458  0072                     lcd_byte_8bits@data:	
   459                           ; 1 bytes @ 0x2
   460                           
   461  0072                     ___lwdiv@divisor:	
   462                           ; 1 bytes @ 0x2
   463                           
   464  0072                     ___lwmod@divisor:	
   465                           ; 2 bytes @ 0x2
   466                           
   467                           
   468                           ; 2 bytes @ 0x2
   469  0072                     	ds	1
   470  0073                     ??_lcd_byte_4bits:
   471  0073                     amost1@value:	
   472                           ; 1 bytes @ 0x3
   473                           
   474                           
   475                           ; 1 bytes @ 0x3
   476  0073                     	ds	1
   477  0074                     ___lwdiv@dividend:
   478  0074                     ___lwmod@dividend:	
   479                           ; 2 bytes @ 0x4
   480                           
   481                           
   482                           ; 2 bytes @ 0x4
   483  0074                     	ds	1
   484  0075                     lcd_byte_4bits@data:
   485                           
   486                           ; 1 bytes @ 0x5
   487  0075                     	ds	1
   488  0076                     ??___lwdiv:
   489  0076                     ??___lwmod:	
   490                           ; 1 bytes @ 0x6
   491                           
   492  0076                     lcd_byte_4bits@nibble:	
   493                           ; 1 bytes @ 0x6
   494                           
   495                           
   496                           ; 1 bytes @ 0x6
   497  0076                     	ds	1
   498  0077                     ??_lcd_cmd:
   499  0077                     ??_lcd_char:	
   500                           ; 1 bytes @ 0x7
   501                           
   502  0077                     lcd_cmd@data:	
   503                           ; 1 bytes @ 0x7
   504                           
   505  0077                     lcd_char@data:	
   506                           ; 1 bytes @ 0x7
   507                           
   508  0077                     ___lwmod@counter:	
   509                           ; 1 bytes @ 0x7
   510                           
   511  0077                     ___lwdiv@quotient:	
   512                           ; 1 bytes @ 0x7
   513                           
   514                           
   515                           ; 2 bytes @ 0x7
   516  0077                     	ds	1
   517  0078                     ??_lcd_clear:
   518  0078                     ??_lcd_init_8bits:	
   519                           ; 1 bytes @ 0x8
   520                           
   521  0078                     ??_lcd_init_4bits:	
   522                           ; 1 bytes @ 0x8
   523                           
   524  0078                     ??_lcd_init:	
   525                           ; 1 bytes @ 0x8
   526                           
   527  0078                     ?_lcd_goto:	
   528                           ; 1 bytes @ 0x8
   529                           
   530  0078                     lcd_puts@x:	
   531                           ; 1 bytes @ 0x8
   532                           
   533  0078                     lcd_goto@col:	
   534                           ; 1 bytes @ 0x8
   535                           
   536                           
   537                           ; 1 bytes @ 0x8
   538  0078                     	ds	1
   539  0079                     lcd_puts@cnt:
   540  0079                     lcd_goto@lin:	
   541                           ; 1 bytes @ 0x9
   542                           
   543  0079                     ___lwdiv@counter:	
   544                           ; 1 bytes @ 0x9
   545                           
   546                           
   547                           ; 1 bytes @ 0x9
   548  0079                     	ds	1
   549                           
   550                           	psect	cstackBANK0
   551  0020                     __pcstackBANK0:
   552  0020                     ?_utoa:
   553  0020                     ?_lcd_puts:	
   554                           ; 1 bytes @ 0x0
   555                           
   556  0020                     ??_lcd_goto:	
   557                           ; 1 bytes @ 0x0
   558                           
   559  0020                     lcd_puts@vector:	
   560                           ; 1 bytes @ 0x0
   561                           
   562  0020                     utoa@val:	
   563                           ; 2 bytes @ 0x0
   564                           
   565                           
   566                           ; 2 bytes @ 0x0
   567  0020                     	ds	2
   568  0022                     lcd_puts@LENGHT:
   569  0022                     utoa@base:	
   570                           ; 1 bytes @ 0x2
   571                           
   572                           
   573                           ; 2 bytes @ 0x2
   574  0022                     	ds	1
   575  0023                     ??_lcd_puts:
   576                           
   577                           ; 1 bytes @ 0x3
   578  0023                     	ds	1
   579  0024                     ??_utoa:
   580                           
   581                           ; 1 bytes @ 0x4
   582  0024                     	ds	1
   583  0025                     utoa@v:
   584                           
   585                           ; 2 bytes @ 0x5
   586  0025                     	ds	2
   587  0027                     utoa@c:
   588                           
   589                           ; 1 bytes @ 0x7
   590  0027                     	ds	1
   591  0028                     utoa@buf:
   592                           
   593                           ; 1 bytes @ 0x8
   594  0028                     	ds	1
   595  0029                     ?_itoa:
   596  0029                     itoa@val:	
   597                           ; 1 bytes @ 0x9
   598                           
   599                           
   600                           ; 2 bytes @ 0x9
   601  0029                     	ds	2
   602  002B                     itoa@base:
   603                           
   604                           ; 2 bytes @ 0xB
   605  002B                     	ds	2
   606  002D                     ??_itoa:
   607                           
   608                           ; 1 bytes @ 0xD
   609  002D                     	ds	1
   610  002E                     itoa@buf:
   611                           
   612                           ; 1 bytes @ 0xE
   613  002E                     	ds	1
   614  002F                     ??_main:
   615                           
   616                           ; 1 bytes @ 0xF
   617  002F                     	ds	3
   618                           
   619                           	psect	maintext
   620  0092                     __pmaintext:	
   621 ;;
   622 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   623 ;;
   624 ;; *************** function _main *****************
   625 ;; Defined at:
   626 ;;		line 115 in file "main.c"
   627 ;; Parameters:    Size  Location     Type
   628 ;;		None
   629 ;; Auto vars:     Size  Location     Type
   630 ;;		None
   631 ;; Return value:  Size  Location     Type
   632 ;;                  1    wreg      void 
   633 ;; Registers used:
   634 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   635 ;; Tracked objects:
   636 ;;		On entry : B00/0
   637 ;;		On exit  : 0/0
   638 ;;		Unchanged: 0/0
   639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   640 ;;      Params:         0       0       0       0       0
   641 ;;      Locals:         0       0       0       0       0
   642 ;;      Temps:          0       3       0       0       0
   643 ;;      Totals:         0       3       0       0       0
   644 ;;Total ram usage:        3 bytes
   645 ;; Hardware stack levels required when called: 9
   646 ;; This function calls:
   647 ;;		_amost1
   648 ;;		_init
   649 ;;		_itoa
   650 ;;		_lcd_goto
   651 ;;		_lcd_init
   652 ;;		_lcd_puts
   653 ;; This function is called by:
   654 ;;		Startup code after reset
   655 ;; This function uses a non-reentrant model
   656 ;;
   657                           
   658                           
   659                           ;psect for function _main
   660  0092                     _main:
   661  0092                     l1469:	
   662                           ;incstack = 0
   663 ;; hardware stack exceeded
   664                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   665                           
   666                           
   667                           ;main.c: 118:     INTCONbits.GIE = 0;
   668  0092  138B               	bcf	11,7	;volatile
   669  0093                     l1471:
   670                           
   671                           ;main.c: 121:     init();
   672  0093  120A  118A  229D  120A  118A  	fcall	_init
   673  0098                     l1473:
   674                           
   675                           ;main.c: 124:     INTCONbits.GIE = 1;
   676  0098  178B               	bsf	11,7	;volatile
   677                           
   678                           ;main.c: 127:     lcd_init();
   679  0099  120A  118A  23D6  120A  118A  	fcall	_lcd_init
   680  009E                     l1475:
   681                           
   682                           ;main.c: 130:     lcd_goto(1,1);
   683  009E  01F8               	clrf	lcd_goto@col
   684  009F  0AF8               	incf	lcd_goto@col,f
   685  00A0  3001               	movlw	1
   686  00A1  120A  118A  21CB  120A  118A  	fcall	_lcd_goto
   687  00A6                     l1477:
   688                           
   689                           ;main.c: 131:     lcd_puts("A/D CONVERSION",14);
   690  00A6  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   691  00A7  1283               	bcf	3,5	;RP0=0, select bank0
   692  00A8  1303               	bcf	3,6	;RP1=0, select bank0
   693  00A9  00A0               	movwf	lcd_puts@vector
   694  00AA  3080               	movlw	128
   695  00AB  00A1               	movwf	lcd_puts@vector+1
   696  00AC  300E               	movlw	14
   697  00AD  00AF               	movwf	??_main
   698  00AE  082F               	movf	??_main,w
   699  00AF  00A2               	movwf	lcd_puts@LENGHT
   700  00B0  120A  118A  2240  120A  118A  	fcall	_lcd_puts
   701  00B5                     l1479:
   702                           
   703                           ;main.c: 135:     {;main.c: 137:         amost1(&ad_value);
   704  00B5  307A               	movlw	(low (_ad_value| 0))& (0+255)
   705  00B6  120A  118A  235D  120A  118A  	fcall	_amost1
   706  00BB                     l1481:
   707                           
   708                           ;main.c: 139:         ad_value = ad_value/2;
   709  00BB  087B               	movf	_ad_value+1,w	;volatile
   710  00BC  1283               	bcf	3,5	;RP0=0, select bank0
   711  00BD  1303               	bcf	3,6	;RP1=0, select bank0
   712  00BE  00B0               	movwf	??_main+1
   713  00BF  087A               	movf	_ad_value,w	;volatile
   714  00C0  00AF               	movwf	??_main
   715  00C1  1003               	clrc
   716  00C2  0CB0               	rrf	??_main+1,f
   717  00C3  0CAF               	rrf	??_main,f
   718  00C4  082F               	movf	??_main,w
   719  00C5  00FA               	movwf	_ad_value	;volatile
   720  00C6  0830               	movf	??_main+1,w
   721  00C7  00FB               	movwf	_ad_value+1	;volatile
   722  00C8                     l1483:
   723                           
   724                           ;main.c: 141:         itoa(ad_char_val, ad_value, 10);
   725  00C8  087B               	movf	_ad_value+1,w	;volatile
   726  00C9  00AA               	movwf	itoa@val+1
   727  00CA  087A               	movf	_ad_value,w	;volatile
   728  00CB  00A9               	movwf	itoa@val
   729  00CC  300A               	movlw	10
   730  00CD  00AB               	movwf	itoa@base
   731  00CE  3000               	movlw	0
   732  00CF  00AC               	movwf	itoa@base+1
   733  00D0  3036               	movlw	(low (_ad_char_val| 0))& (0+255)
   734  00D1  120A  118A  22C4  120A  118A  	fcall	_itoa
   735  00D6                     l1485:
   736                           
   737                           ;main.c: 143:         lcd_goto(2,1);
   738  00D6  01F8               	clrf	lcd_goto@col
   739  00D7  0AF8               	incf	lcd_goto@col,f
   740  00D8  3002               	movlw	2
   741  00D9  120A  118A  21CB  120A  118A  	fcall	_lcd_goto
   742  00DE                     l1487:
   743                           
   744                           ;main.c: 144:         lcd_puts(ad_char_val,3);
   745  00DE  3036               	movlw	(low (_ad_char_val| 0))& (0+255)
   746  00DF  1283               	bcf	3,5	;RP0=0, select bank0
   747  00E0  1303               	bcf	3,6	;RP1=0, select bank0
   748  00E1  00A0               	movwf	lcd_puts@vector
   749  00E2  3000               	movlw	0
   750  00E3  00A1               	movwf	lcd_puts@vector+1
   751  00E4  3003               	movlw	3
   752  00E5  00AF               	movwf	??_main
   753  00E6  082F               	movf	??_main,w
   754  00E7  00A2               	movwf	lcd_puts@LENGHT
   755  00E8  120A  118A  2240  120A  118A  	fcall	_lcd_puts
   756  00ED                     l1489:
   757                           
   758                           ;main.c: 146:         _delay((unsigned long)((1000)*(20000000/4000.0)));
   759  00ED  301A               	movlw	26
   760  00EE  1283               	bcf	3,5	;RP0=0, select bank0
   761  00EF  1303               	bcf	3,6	;RP1=0, select bank0
   762  00F0  00B1               	movwf	??_main+2
   763  00F1  305E               	movlw	94
   764  00F2  00B0               	movwf	??_main+1
   765  00F3  306D               	movlw	109
   766  00F4  00AF               	movwf	??_main
   767  00F5                     u677:
   768  00F5  0BAF               	decfsz	??_main,f
   769  00F6  28F5               	goto	u677
   770  00F7  0BB0               	decfsz	??_main+1,f
   771  00F8  28F5               	goto	u677
   772  00F9  0BB1               	decfsz	??_main+2,f
   773  00FA  28F5               	goto	u677
   774  00FB  28FC               	nop2
   775  00FC  28B5               	goto	l1479
   776  00FD  120A  118A  280C   	ljmp	start
   777  0100                     __end_of_main:
   778                           
   779                           	psect	text1
   780  0240                     __ptext1:	
   781 ;; *************** function _lcd_puts *****************
   782 ;; Defined at:
   783 ;;		line 131 in file "lcd.c"
   784 ;; Parameters:    Size  Location     Type
   785 ;;  vector          2    0[BANK0 ] PTR unsigned char 
   786 ;;		 -> ad_char_val(5), STR_1(15), 
   787 ;;  LENGHT          1    2[BANK0 ] unsigned char 
   788 ;; Auto vars:     Size  Location     Type
   789 ;;  cnt             1    9[COMMON] unsigned char 
   790 ;;  x               1    8[COMMON] unsigned char 
   791 ;; Return value:  Size  Location     Type
   792 ;;                  1    wreg      void 
   793 ;; Registers used:
   794 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   795 ;; Tracked objects:
   796 ;;		On entry : 0/0
   797 ;;		On exit  : 0/0
   798 ;;		Unchanged: 0/0
   799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   800 ;;      Params:         0       3       0       0       0
   801 ;;      Locals:         2       0       0       0       0
   802 ;;      Temps:          0       4       0       0       0
   803 ;;      Totals:         2       7       0       0       0
   804 ;;Total ram usage:        9 bytes
   805 ;; Hardware stack levels used: 1
   806 ;; Hardware stack levels required when called: 6
   807 ;; This function calls:
   808 ;;		_lcd_char
   809 ;; This function is called by:
   810 ;;		_main
   811 ;; This function uses a non-reentrant model
   812 ;;
   813                           
   814                           
   815                           ;psect for function _lcd_puts
   816  0240                     _lcd_puts:
   817  0240                     l1419:	
   818                           ;incstack = 0
   819                           ; Regs used in _lcd_puts: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   820                           
   821                           
   822                           ;lcd.c: 131: void lcd_puts(unsigned char *vector, unsigned char LENGHT);lcd.c: 132: {;lc
      +                          d.c: 133:  unsigned char cnt;;lcd.c: 134:  unsigned char x;;lcd.c: 136:  PORTEbits.RE0 =
      +                           1;
   823  0240  1283               	bcf	3,5	;RP0=0, select bank0
   824  0241  1303               	bcf	3,6	;RP1=0, select bank0
   825  0242  1409               	bsf	9,0	;volatile
   826  0243                     l1421:
   827                           
   828                           ;lcd.c: 138:  for (cnt=0; cnt<LENGHT; cnt++)
   829  0243  01F9               	clrf	lcd_puts@cnt
   830  0244  2A6B               	goto	l1429
   831  0245                     l1423:
   832                           
   833                           ;lcd.c: 139:  {;lcd.c: 140:         x = *(vector+cnt);
   834  0245  0879               	movf	lcd_puts@cnt,w
   835  0246  0720               	addwf	lcd_puts@vector,w
   836  0247  00A4               	movwf	??_lcd_puts+1
   837  0248  0821               	movf	lcd_puts@vector+1,w
   838  0249  00A3               	movwf	??_lcd_puts
   839  024A  1803               	skipnc
   840  024B  0AA3               	incf	??_lcd_puts,f
   841  024C  1FF9               	btfss	lcd_puts@cnt,7
   842  024D  2A4F               	goto	u640
   843  024E  03A3               	decf	??_lcd_puts,f
   844  024F                     u640:
   845  024F  1283               	bcf	3,5	;RP0=0, select bank0
   846  0250  1303               	bcf	3,6	;RP1=0, select bank0
   847  0251  0823               	movf	??_lcd_puts,w
   848  0252  00A5               	movwf	??_lcd_puts+2
   849  0253  0825               	movf	??_lcd_puts+2,w
   850  0254  00FF               	movwf	btemp+1
   851  0255  0824               	movf	??_lcd_puts+1,w
   852  0256  0084               	movwf	4
   853  0257  120A  118A  2300  120A  118A  	fcall	stringtab
   854  025C  00A6               	movwf	??_lcd_puts+3
   855  025D  0826               	movf	??_lcd_puts+3,w
   856  025E  00F8               	movwf	lcd_puts@x
   857  025F                     l1425:
   858                           
   859                           ;lcd.c: 141:         lcd_char(x);
   860  025F  0878               	movf	lcd_puts@x,w
   861  0260  120A  118A  2387  120A  118A  	fcall	_lcd_char
   862  0265                     l1427:
   863                           
   864                           ;lcd.c: 142:  }
   865  0265  3001               	movlw	1
   866  0266  1283               	bcf	3,5	;RP0=0, select bank0
   867  0267  1303               	bcf	3,6	;RP1=0, select bank0
   868  0268  00A3               	movwf	??_lcd_puts
   869  0269  0823               	movf	??_lcd_puts,w
   870  026A  07F9               	addwf	lcd_puts@cnt,f
   871  026B                     l1429:
   872  026B  0822               	movf	lcd_puts@LENGHT,w
   873  026C  0279               	subwf	lcd_puts@cnt,w
   874  026D  1C03               	skipc
   875  026E  2A70               	goto	u651
   876  026F  2A71               	goto	u650
   877  0270                     u651:
   878  0270  2A45               	goto	l1423
   879  0271                     u650:
   880  0271                     l68:
   881  0271  0008               	return
   882  0272                     __end_of_lcd_puts:
   883                           
   884                           	psect	text2
   885  0387                     __ptext2:	
   886 ;; *************** function _lcd_char *****************
   887 ;; Defined at:
   888 ;;		line 119 in file "lcd.c"
   889 ;; Parameters:    Size  Location     Type
   890 ;;  data            1    wreg     unsigned char 
   891 ;; Auto vars:     Size  Location     Type
   892 ;;  data            1    7[COMMON] unsigned char 
   893 ;; Return value:  Size  Location     Type
   894 ;;                  1    wreg      void 
   895 ;; Registers used:
   896 ;;		wreg, status,2, status,0, pclath, cstack
   897 ;; Tracked objects:
   898 ;;		On entry : 0/0
   899 ;;		On exit  : 0/0
   900 ;;		Unchanged: 0/0
   901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   902 ;;      Params:         0       0       0       0       0
   903 ;;      Locals:         1       0       0       0       0
   904 ;;      Temps:          0       0       0       0       0
   905 ;;      Totals:         1       0       0       0       0
   906 ;;Total ram usage:        1 bytes
   907 ;; Hardware stack levels used: 1
   908 ;; Hardware stack levels required when called: 5
   909 ;; This function calls:
   910 ;;		_lcd_byte_4bits
   911 ;;		_lcd_byte_8bits
   912 ;;		_lcd_delay_40us
   913 ;; This function is called by:
   914 ;;		_lcd_puts
   915 ;; This function uses a non-reentrant model
   916 ;;
   917                           
   918                           
   919                           ;psect for function _lcd_char
   920  0387                     _lcd_char:
   921                           
   922                           ;incstack = 0
   923                           ; Regs used in _lcd_char: [wreg+status,2+status,0+pclath+cstack]
   924                           ;lcd_char@data stored from wreg
   925  0387  00F7               	movwf	lcd_char@data
   926  0388                     l1379:
   927                           
   928                           ;lcd.c: 123:     if (8 == 8)
   929  0388  1283               	bcf	3,5	;RP0=0, select bank0
   930  0389  1303               	bcf	3,6	;RP1=0, select bank0
   931  038A  1409               	bsf	9,0	;volatile
   932  038B                     l1381:
   933                           
   934                           ;lcd.c: 124:         lcd_byte_8bits(data);
   935  038B  0877               	movf	lcd_char@data,w
   936  038C  120A  118A  23C1  120A  118A  	fcall	_lcd_byte_8bits
   937  0391                     l61:
   938                           
   939                           ;lcd.c: 128:     lcd_delay_40us();
   940  0391  120A  118A  23DC  120A  118A  	fcall	_lcd_delay_40us
   941  0396                     l62:
   942  0396  0008               	return
   943  0397                     __end_of_lcd_char:
   944                           
   945                           	psect	text3
   946  03D6                     __ptext3:	
   947 ;; *************** function _lcd_init *****************
   948 ;; Defined at:
   949 ;;		line 184 in file "lcd.c"
   950 ;; Parameters:    Size  Location     Type
   951 ;;		None
   952 ;; Auto vars:     Size  Location     Type
   953 ;;		None
   954 ;; Return value:  Size  Location     Type
   955 ;;                  1    wreg      void 
   956 ;; Registers used:
   957 ;;		wreg, status,2, status,0, pclath, cstack
   958 ;; Tracked objects:
   959 ;;		On entry : 0/0
   960 ;;		On exit  : 0/0
   961 ;;		Unchanged: 0/0
   962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   963 ;;      Params:         0       0       0       0       0
   964 ;;      Locals:         0       0       0       0       0
   965 ;;      Temps:          0       0       0       0       0
   966 ;;      Totals:         0       0       0       0       0
   967 ;;Total ram usage:        0 bytes
   968 ;; Hardware stack levels used: 1
   969 ;; Hardware stack levels required when called: 8
   970 ;; This function calls:
   971 ;;		_lcd_init_4bits
   972 ;;		_lcd_init_8bits
   973 ;; This function is called by:
   974 ;;		_main
   975 ;; This function uses a non-reentrant model
   976 ;;
   977                           
   978                           
   979                           ;psect for function _lcd_init
   980  03D6                     _lcd_init:
   981  03D6                     l1431:	
   982                           ;incstack = 0
   983 ;; hardware stack exceeded
   984                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
   985                           
   986                           
   987                           ;lcd.c: 187:         lcd_init_8bits();
   988  03D6  120A  118A  218D  120A  118A  	fcall	_lcd_init_8bits
   989  03DB                     l79:
   990  03DB  0008               	return
   991  03DC                     __end_of_lcd_init:
   992                           
   993                           	psect	text4
   994  018D                     __ptext4:	
   995 ;; *************** function _lcd_init_8bits *****************
   996 ;; Defined at:
   997 ;;		line 145 in file "lcd.c"
   998 ;; Parameters:    Size  Location     Type
   999 ;;		None
  1000 ;; Auto vars:     Size  Location     Type
  1001 ;;		None
  1002 ;; Return value:  Size  Location     Type
  1003 ;;                  1    wreg      void 
  1004 ;; Registers used:
  1005 ;;		wreg, status,2, status,0, pclath, cstack
  1006 ;; Tracked objects:
  1007 ;;		On entry : 0/0
  1008 ;;		On exit  : 0/0
  1009 ;;		Unchanged: 0/0
  1010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1011 ;;      Params:         0       0       0       0       0
  1012 ;;      Locals:         0       0       0       0       0
  1013 ;;      Temps:          0       0       0       0       0
  1014 ;;      Totals:         0       0       0       0       0
  1015 ;;Total ram usage:        0 bytes
  1016 ;; Hardware stack levels used: 1
  1017 ;; Hardware stack levels required when called: 7
  1018 ;; This function calls:
  1019 ;;		_lcd_clear
  1020 ;;		_lcd_cmd
  1021 ;;		_lcd_delay_2ms
  1022 ;;		_lcd_delay_40ms
  1023 ;; This function is called by:
  1024 ;;		_lcd_init
  1025 ;; This function uses a non-reentrant model
  1026 ;;
  1027                           
  1028                           
  1029                           ;psect for function _lcd_init_8bits
  1030  018D                     _lcd_init_8bits:
  1031  018D                     l1385:	
  1032                           ;incstack = 0
  1033 ;; hardware stack exceeded
  1034                           ; Regs used in _lcd_init_8bits: [wreg+status,2+status,0+pclath+cstack]
  1035                           
  1036                           
  1037                           ;lcd.c: 148:     lcd_delay_40ms();
  1038  018D  120A  118A  23A7  120A  118A  	fcall	_lcd_delay_40ms
  1039                           
  1040                           ;lcd.c: 150:  lcd_cmd(0x30);
  1041  0192  3030               	movlw	48
  1042  0193  120A  118A  2397  120A  118A  	fcall	_lcd_cmd
  1043                           
  1044                           ;lcd.c: 151:     lcd_delay_2ms();
  1045  0198  120A  118A  23CC  120A  118A  	fcall	_lcd_delay_2ms
  1046                           
  1047                           ;lcd.c: 152:  lcd_cmd(0x30);
  1048  019D  3030               	movlw	48
  1049  019E  120A  118A  2397  120A  118A  	fcall	_lcd_cmd
  1050                           
  1051                           ;lcd.c: 153:     lcd_delay_2ms();
  1052  01A3  120A  118A  23CC  120A  118A  	fcall	_lcd_delay_2ms
  1053                           
  1054                           ;lcd.c: 154:  lcd_cmd(0x30);
  1055  01A8  3030               	movlw	48
  1056  01A9  120A  118A  2397  120A  118A  	fcall	_lcd_cmd
  1057                           
  1058                           ;lcd.c: 155:     lcd_delay_2ms();
  1059  01AE  120A  118A  23CC  120A  118A  	fcall	_lcd_delay_2ms
  1060                           
  1061                           ;lcd.c: 157:  lcd_cmd(0x38);
  1062  01B3  3038               	movlw	56
  1063  01B4  120A  118A  2397  120A  118A  	fcall	_lcd_cmd
  1064                           
  1065                           ;lcd.c: 158:  lcd_cmd(0x06);
  1066  01B9  3006               	movlw	6
  1067  01BA  120A  118A  2397  120A  118A  	fcall	_lcd_cmd
  1068                           
  1069                           ;lcd.c: 159:  lcd_cmd(0x0E);
  1070  01BF  300E               	movlw	14
  1071  01C0  120A  118A  2397  120A  118A  	fcall	_lcd_cmd
  1072                           
  1073                           ;lcd.c: 160:     lcd_clear();
  1074  01C5  120A  118A  23B5  120A  118A  	fcall	_lcd_clear
  1075  01CA                     l71:
  1076  01CA  0008               	return
  1077  01CB                     __end_of_lcd_init_8bits:
  1078                           
  1079                           	psect	text5
  1080  0100                     __ptext5:	
  1081 ;; *************** function _lcd_init_4bits *****************
  1082 ;; Defined at:
  1083 ;;		line 163 in file "lcd.c"
  1084 ;; Parameters:    Size  Location     Type
  1085 ;;		None
  1086 ;; Auto vars:     Size  Location     Type
  1087 ;;		None
  1088 ;; Return value:  Size  Location     Type
  1089 ;;                  1    wreg      void 
  1090 ;; Registers used:
  1091 ;;		wreg, status,2, status,0, pclath, cstack
  1092 ;; Tracked objects:
  1093 ;;		On entry : 0/0
  1094 ;;		On exit  : 0/0
  1095 ;;		Unchanged: 0/0
  1096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1097 ;;      Params:         0       0       0       0       0
  1098 ;;      Locals:         0       0       0       0       0
  1099 ;;      Temps:          0       0       0       0       0
  1100 ;;      Totals:         0       0       0       0       0
  1101 ;;Total ram usage:        0 bytes
  1102 ;; Hardware stack levels used: 1
  1103 ;; Hardware stack levels required when called: 7
  1104 ;; This function calls:
  1105 ;;		_lcd_clear
  1106 ;;		_lcd_cmd
  1107 ;;		_lcd_delay_2ms
  1108 ;;		_lcd_delay_40ms
  1109 ;;		_lcd_send_nibble
  1110 ;; This function is called by:
  1111 ;;		_lcd_init
  1112 ;; This function uses a non-reentrant model
  1113 ;;
  1114                           
  1115                           
  1116                           ;psect for function _lcd_init_4bits
  1117  0100                     _lcd_init_4bits:
  1118  0100                     l1387:	
  1119                           ;incstack = 0
  1120 ;; hardware stack exceeded
  1121                           ; Regs used in _lcd_init_4bits: [wreg+status,2+status,0+pclath+cstack]
  1122                           
  1123                           
  1124                           ;lcd.c: 166:     lcd_delay_40ms();
  1125  0100  120A  118A  23A7  120A  118A  	fcall	_lcd_delay_40ms
  1126                           
  1127                           ;lcd.c: 168:     lcd_send_nibble(0x03);
  1128  0105  3003               	movlw	3
  1129  0106  120A  118A  2272  120A  118A  	fcall	_lcd_send_nibble
  1130                           
  1131                           ;lcd.c: 169:     lcd_delay_2ms();
  1132  010B  120A  118A  23CC  120A  118A  	fcall	_lcd_delay_2ms
  1133                           
  1134                           ;lcd.c: 170:     lcd_send_nibble(0x03);
  1135  0110  3003               	movlw	3
  1136  0111  120A  118A  2272  120A  118A  	fcall	_lcd_send_nibble
  1137                           
  1138                           ;lcd.c: 171:     lcd_delay_2ms();
  1139  0116  120A  118A  23CC  120A  118A  	fcall	_lcd_delay_2ms
  1140                           
  1141                           ;lcd.c: 172:     lcd_send_nibble(0x03);
  1142  011B  3003               	movlw	3
  1143  011C  120A  118A  2272  120A  118A  	fcall	_lcd_send_nibble
  1144                           
  1145                           ;lcd.c: 173:     lcd_delay_2ms();
  1146  0121  120A  118A  23CC  120A  118A  	fcall	_lcd_delay_2ms
  1147                           
  1148                           ;lcd.c: 175:     lcd_send_nibble(0x02);
  1149  0126  3002               	movlw	2
  1150  0127  120A  118A  2272  120A  118A  	fcall	_lcd_send_nibble
  1151                           
  1152                           ;lcd.c: 176:     lcd_delay_2ms();
  1153  012C  120A  118A  23CC  120A  118A  	fcall	_lcd_delay_2ms
  1154                           
  1155                           ;lcd.c: 178:  lcd_cmd(0x28);
  1156  0131  3028               	movlw	40
  1157  0132  120A  118A  2397  120A  118A  	fcall	_lcd_cmd
  1158                           
  1159                           ;lcd.c: 179:  lcd_cmd(0x06);
  1160  0137  3006               	movlw	6
  1161  0138  120A  118A  2397  120A  118A  	fcall	_lcd_cmd
  1162                           
  1163                           ;lcd.c: 180:  lcd_cmd(0x0E);
  1164  013D  300E               	movlw	14
  1165  013E  120A  118A  2397  120A  118A  	fcall	_lcd_cmd
  1166                           
  1167                           ;lcd.c: 181:     lcd_clear();
  1168  0143  120A  118A  23B5  120A  118A  	fcall	_lcd_clear
  1169  0148                     l74:
  1170  0148  0008               	return
  1171  0149                     __end_of_lcd_init_4bits:
  1172                           
  1173                           	psect	text6
  1174  03A7                     __ptext6:	
  1175 ;; *************** function _lcd_delay_40ms *****************
  1176 ;; Defined at:
  1177 ;;		line 62 in file "lcd.c"
  1178 ;; Parameters:    Size  Location     Type
  1179 ;;		None
  1180 ;; Auto vars:     Size  Location     Type
  1181 ;;		None
  1182 ;; Return value:  Size  Location     Type
  1183 ;;                  1    wreg      void 
  1184 ;; Registers used:
  1185 ;;		wreg
  1186 ;; Tracked objects:
  1187 ;;		On entry : 0/0
  1188 ;;		On exit  : 0/0
  1189 ;;		Unchanged: 0/0
  1190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1191 ;;      Params:         0       0       0       0       0
  1192 ;;      Locals:         0       0       0       0       0
  1193 ;;      Temps:          3       0       0       0       0
  1194 ;;      Totals:         3       0       0       0       0
  1195 ;;Total ram usage:        3 bytes
  1196 ;; Hardware stack levels used: 1
  1197 ;; Hardware stack levels required when called: 1
  1198 ;; This function calls:
  1199 ;;		Nothing
  1200 ;; This function is called by:
  1201 ;;		_lcd_init_8bits
  1202 ;;		_lcd_init_4bits
  1203 ;; This function uses a non-reentrant model
  1204 ;;
  1205                           
  1206                           
  1207                           ;psect for function _lcd_delay_40ms
  1208  03A7                     _lcd_delay_40ms:
  1209  03A7                     l1117:	
  1210                           ;incstack = 0
  1211                           ; Regs used in _lcd_delay_40ms: [wreg]
  1212                           
  1213  03A7  3002               	movlw	2
  1214  03A8  00F4               	movwf	??_lcd_delay_40ms+2
  1215  03A9  3004               	movlw	4
  1216  03AA  00F3               	movwf	??_lcd_delay_40ms+1
  1217  03AB  30BA               	movlw	186
  1218  03AC  00F2               	movwf	??_lcd_delay_40ms
  1219  03AD                     u687:
  1220  03AD  0BF2               	decfsz	??_lcd_delay_40ms,f
  1221  03AE  2BAD               	goto	u687
  1222  03AF  0BF3               	decfsz	??_lcd_delay_40ms+1,f
  1223  03B0  2BAD               	goto	u687
  1224  03B1  0BF4               	decfsz	??_lcd_delay_40ms+2,f
  1225  03B2  2BAD               	goto	u687
  1226  03B3  0000               	nop
  1227  03B4                     l32:
  1228  03B4  0008               	return
  1229  03B5                     __end_of_lcd_delay_40ms:
  1230                           
  1231                           	psect	text7
  1232  03B5                     __ptext7:	
  1233 ;; *************** function _lcd_clear *****************
  1234 ;; Defined at:
  1235 ;;		line 192 in file "lcd.c"
  1236 ;; Parameters:    Size  Location     Type
  1237 ;;		None
  1238 ;; Auto vars:     Size  Location     Type
  1239 ;;		None
  1240 ;; Return value:  Size  Location     Type
  1241 ;;                  1    wreg      void 
  1242 ;; Registers used:
  1243 ;;		wreg, status,2, status,0, pclath, cstack
  1244 ;; Tracked objects:
  1245 ;;		On entry : 0/0
  1246 ;;		On exit  : 0/0
  1247 ;;		Unchanged: 0/0
  1248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1249 ;;      Params:         0       0       0       0       0
  1250 ;;      Locals:         0       0       0       0       0
  1251 ;;      Temps:          0       0       0       0       0
  1252 ;;      Totals:         0       0       0       0       0
  1253 ;;Total ram usage:        0 bytes
  1254 ;; Hardware stack levels used: 1
  1255 ;; Hardware stack levels required when called: 6
  1256 ;; This function calls:
  1257 ;;		_lcd_cmd
  1258 ;;		_lcd_delay_2ms
  1259 ;; This function is called by:
  1260 ;;		_lcd_init_8bits
  1261 ;;		_lcd_init_4bits
  1262 ;;		_lcd_shutdown
  1263 ;; This function uses a non-reentrant model
  1264 ;;
  1265                           
  1266                           
  1267                           ;psect for function _lcd_clear
  1268  03B5                     _lcd_clear:
  1269  03B5                     l1377:	
  1270                           ;incstack = 0
  1271 ;; hardware stack exceeded
  1272                           ; Regs used in _lcd_clear: [wreg+status,2+status,0+pclath+cstack]
  1273                           
  1274                           
  1275                           ;lcd.c: 194:     lcd_cmd(0x01);
  1276  03B5  3001               	movlw	1
  1277  03B6  120A  118A  2397  120A  118A  	fcall	_lcd_cmd
  1278                           
  1279                           ;lcd.c: 195:     lcd_delay_2ms();
  1280  03BB  120A  118A  23CC  120A  118A  	fcall	_lcd_delay_2ms
  1281  03C0                     l82:
  1282  03C0  0008               	return
  1283  03C1                     __end_of_lcd_clear:
  1284                           
  1285                           	psect	text8
  1286  03CC                     __ptext8:	
  1287 ;; *************** function _lcd_delay_2ms *****************
  1288 ;; Defined at:
  1289 ;;		line 61 in file "lcd.c"
  1290 ;; Parameters:    Size  Location     Type
  1291 ;;		None
  1292 ;; Auto vars:     Size  Location     Type
  1293 ;;		None
  1294 ;; Return value:  Size  Location     Type
  1295 ;;                  1    wreg      void 
  1296 ;; Registers used:
  1297 ;;		wreg
  1298 ;; Tracked objects:
  1299 ;;		On entry : 0/0
  1300 ;;		On exit  : 0/0
  1301 ;;		Unchanged: 0/0
  1302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1303 ;;      Params:         0       0       0       0       0
  1304 ;;      Locals:         0       0       0       0       0
  1305 ;;      Temps:          2       0       0       0       0
  1306 ;;      Totals:         2       0       0       0       0
  1307 ;;Total ram usage:        2 bytes
  1308 ;; Hardware stack levels used: 1
  1309 ;; Hardware stack levels required when called: 1
  1310 ;; This function calls:
  1311 ;;		Nothing
  1312 ;; This function is called by:
  1313 ;;		_lcd_init_8bits
  1314 ;;		_lcd_init_4bits
  1315 ;;		_lcd_clear
  1316 ;; This function uses a non-reentrant model
  1317 ;;
  1318                           
  1319                           
  1320                           ;psect for function _lcd_delay_2ms
  1321  03CC                     _lcd_delay_2ms:
  1322  03CC                     l1109:	
  1323                           ;incstack = 0
  1324                           ; Regs used in _lcd_delay_2ms: [wreg]
  1325                           
  1326  03CC  300D               	movlw	13
  1327  03CD  00F3               	movwf	??_lcd_delay_2ms+1
  1328  03CE  30FB               	movlw	251
  1329  03CF  00F2               	movwf	??_lcd_delay_2ms
  1330  03D0                     u697:
  1331  03D0  0BF2               	decfsz	??_lcd_delay_2ms,f
  1332  03D1  2BD0               	goto	u697
  1333  03D2  0BF3               	decfsz	??_lcd_delay_2ms+1,f
  1334  03D3  2BD0               	goto	u697
  1335  03D4  2BD5               	nop2
  1336  03D5                     l29:
  1337  03D5  0008               	return
  1338  03D6                     __end_of_lcd_delay_2ms:
  1339                           
  1340                           	psect	text9
  1341  01CB                     __ptext9:	
  1342 ;; *************** function _lcd_goto *****************
  1343 ;; Defined at:
  1344 ;;		line 204 in file "lcd.c"
  1345 ;; Parameters:    Size  Location     Type
  1346 ;;  lin             1    wreg     unsigned char 
  1347 ;;  col             1    8[COMMON] unsigned char 
  1348 ;; Auto vars:     Size  Location     Type
  1349 ;;  lin             1    9[COMMON] unsigned char 
  1350 ;; Return value:  Size  Location     Type
  1351 ;;                  1    wreg      void 
  1352 ;; Registers used:
  1353 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1354 ;; Tracked objects:
  1355 ;;		On entry : 0/0
  1356 ;;		On exit  : 0/0
  1357 ;;		Unchanged: 0/0
  1358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1359 ;;      Params:         1       0       0       0       0
  1360 ;;      Locals:         1       0       0       0       0
  1361 ;;      Temps:          0       2       0       0       0
  1362 ;;      Totals:         2       2       0       0       0
  1363 ;;Total ram usage:        4 bytes
  1364 ;; Hardware stack levels used: 1
  1365 ;; Hardware stack levels required when called: 6
  1366 ;; This function calls:
  1367 ;;		_lcd_cmd
  1368 ;; This function is called by:
  1369 ;;		_main
  1370 ;; This function uses a non-reentrant model
  1371 ;;
  1372                           
  1373                           
  1374                           ;psect for function _lcd_goto
  1375  01CB                     _lcd_goto:
  1376                           
  1377                           ;incstack = 0
  1378                           ; Regs used in _lcd_goto: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1379                           ;lcd_goto@lin stored from wreg
  1380  01CB  00F9               	movwf	lcd_goto@lin
  1381  01CC                     l1435:
  1382                           
  1383                           ;lcd.c: 204: void lcd_goto(unsigned char lin, unsigned char col);lcd.c: 205: {;lcd.c: 20
      +                          6:     switch(lin)
  1384  01CC  29ED               	goto	l1447
  1385  01CD                     l1437:
  1386                           
  1387                           ;lcd.c: 209:         {;lcd.c: 210:             lcd_cmd(0x80+col);
  1388  01CD  0878               	movf	lcd_goto@col,w
  1389  01CE  3E80               	addlw	128
  1390  01CF  120A  118A  2397  120A  118A  	fcall	_lcd_cmd
  1391                           
  1392                           ;lcd.c: 211:             break;
  1393  01D4  2A05               	goto	l94
  1394  01D5                     l1439:
  1395                           
  1396                           ;lcd.c: 214:         {;lcd.c: 215:             lcd_cmd(0xc0+col);
  1397  01D5  0878               	movf	lcd_goto@col,w
  1398  01D6  3EC0               	addlw	192
  1399  01D7  120A  118A  2397  120A  118A  	fcall	_lcd_cmd
  1400                           
  1401                           ;lcd.c: 216:             break;
  1402  01DC  2A05               	goto	l94
  1403  01DD                     l1441:
  1404                           
  1405                           ;lcd.c: 219:         {;lcd.c: 220:             lcd_cmd(0x90+col);
  1406  01DD  0878               	movf	lcd_goto@col,w
  1407  01DE  3E90               	addlw	144
  1408  01DF  120A  118A  2397  120A  118A  	fcall	_lcd_cmd
  1409                           
  1410                           ;lcd.c: 221:             break;
  1411  01E4  2A05               	goto	l94
  1412  01E5                     l1443:
  1413                           
  1414                           ;lcd.c: 224:         {;lcd.c: 225:             lcd_cmd(0xd0+col);
  1415  01E5  0878               	movf	lcd_goto@col,w
  1416  01E6  3ED0               	addlw	208
  1417  01E7  120A  118A  2397  120A  118A  	fcall	_lcd_cmd
  1418                           
  1419                           ;lcd.c: 226:             break;
  1420  01EC  2A05               	goto	l94
  1421  01ED                     l1447:
  1422  01ED  0879               	movf	lcd_goto@lin,w
  1423  01EE  1283               	bcf	3,5	;RP0=0, select bank0
  1424  01EF  1303               	bcf	3,6	;RP1=0, select bank0
  1425  01F0  00A0               	movwf	??_lcd_goto
  1426  01F1  01A1               	clrf	??_lcd_goto+1
  1427                           
  1428                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1429                           ; Switch size 1, requested type "simple"
  1430                           ; Number of cases is 1, Range of values is 0 to 0
  1431                           ; switch strategies available:
  1432                           ; Name         Instructions Cycles
  1433                           ; simple_byte            4     3 (average)
  1434                           ; direct_byte           11     8 (fixed)
  1435                           ; jumptable            260     6 (fixed)
  1436                           ;	Chosen strategy is simple_byte
  1437  01F2  0821               	movf	??_lcd_goto+1,w
  1438  01F3  3A00               	xorlw	0	; case 0
  1439  01F4  1903               	skipnz
  1440  01F5  29F7               	goto	l1511
  1441  01F6  2A05               	goto	l94
  1442  01F7                     l1511:
  1443                           
  1444                           ; Switch size 1, requested type "simple"
  1445                           ; Number of cases is 4, Range of values is 1 to 4
  1446                           ; switch strategies available:
  1447                           ; Name         Instructions Cycles
  1448                           ; simple_byte           13     7 (average)
  1449                           ; direct_byte           23    11 (fixed)
  1450                           ; jumptable            263     9 (fixed)
  1451                           ;	Chosen strategy is simple_byte
  1452  01F7  0820               	movf	??_lcd_goto,w
  1453  01F8  3A01               	xorlw	1	; case 1
  1454  01F9  1903               	skipnz
  1455  01FA  29CD               	goto	l1437
  1456  01FB  3A03               	xorlw	3	; case 2
  1457  01FC  1903               	skipnz
  1458  01FD  29D5               	goto	l1439
  1459  01FE  3A01               	xorlw	1	; case 3
  1460  01FF  1903               	skipnz
  1461  0200  29DD               	goto	l1441
  1462  0201  3A07               	xorlw	7	; case 4
  1463  0202  1903               	skipnz
  1464  0203  29E5               	goto	l1443
  1465  0204  2A05               	goto	l94
  1466  0205                     l94:
  1467  0205  0008               	return
  1468  0206                     __end_of_lcd_goto:
  1469                           
  1470                           	psect	text10
  1471  0397                     __ptext10:	
  1472 ;; *************** function _lcd_cmd *****************
  1473 ;; Defined at:
  1474 ;;		line 107 in file "lcd.c"
  1475 ;; Parameters:    Size  Location     Type
  1476 ;;  data            1    wreg     unsigned char 
  1477 ;; Auto vars:     Size  Location     Type
  1478 ;;  data            1    7[COMMON] unsigned char 
  1479 ;; Return value:  Size  Location     Type
  1480 ;;                  1    wreg      void 
  1481 ;; Registers used:
  1482 ;;		wreg, status,2, status,0, pclath, cstack
  1483 ;; Tracked objects:
  1484 ;;		On entry : 0/0
  1485 ;;		On exit  : 0/0
  1486 ;;		Unchanged: 0/0
  1487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1488 ;;      Params:         0       0       0       0       0
  1489 ;;      Locals:         1       0       0       0       0
  1490 ;;      Temps:          0       0       0       0       0
  1491 ;;      Totals:         1       0       0       0       0
  1492 ;;Total ram usage:        1 bytes
  1493 ;; Hardware stack levels used: 1
  1494 ;; Hardware stack levels required when called: 5
  1495 ;; This function calls:
  1496 ;;		_lcd_byte_4bits
  1497 ;;		_lcd_byte_8bits
  1498 ;;		_lcd_delay_40us
  1499 ;; This function is called by:
  1500 ;;		_lcd_init_8bits
  1501 ;;		_lcd_init_4bits
  1502 ;;		_lcd_clear
  1503 ;;		_lcd_goto
  1504 ;;		_lcd_shutdown
  1505 ;; This function uses a non-reentrant model
  1506 ;;
  1507                           
  1508                           
  1509                           ;psect for function _lcd_cmd
  1510  0397                     _lcd_cmd:
  1511                           
  1512                           ;incstack = 0
  1513                           ; Regs used in _lcd_cmd: [wreg+status,2+status,0+pclath+cstack]
  1514                           ;lcd_cmd@data stored from wreg
  1515  0397  00F7               	movwf	lcd_cmd@data
  1516  0398                     l1371:
  1517                           
  1518                           ;lcd.c: 111:     if (8 == 8)
  1519  0398  1283               	bcf	3,5	;RP0=0, select bank0
  1520  0399  1303               	bcf	3,6	;RP1=0, select bank0
  1521  039A  1009               	bcf	9,0	;volatile
  1522  039B                     l1373:
  1523                           
  1524                           ;lcd.c: 112:         lcd_byte_8bits(data);
  1525  039B  0877               	movf	lcd_cmd@data,w
  1526  039C  120A  118A  23C1  120A  118A  	fcall	_lcd_byte_8bits
  1527  03A1                     l56:
  1528                           
  1529                           ;lcd.c: 116:     lcd_delay_40us();
  1530  03A1  120A  118A  23DC  120A  118A  	fcall	_lcd_delay_40us
  1531  03A6                     l57:
  1532  03A6  0008               	return
  1533  03A7                     __end_of_lcd_cmd:
  1534                           
  1535                           	psect	text11
  1536  03DC                     __ptext11:	
  1537 ;; *************** function _lcd_delay_40us *****************
  1538 ;; Defined at:
  1539 ;;		line 60 in file "lcd.c"
  1540 ;; Parameters:    Size  Location     Type
  1541 ;;		None
  1542 ;; Auto vars:     Size  Location     Type
  1543 ;;		None
  1544 ;; Return value:  Size  Location     Type
  1545 ;;                  1    wreg      void 
  1546 ;; Registers used:
  1547 ;;		wreg
  1548 ;; Tracked objects:
  1549 ;;		On entry : 0/0
  1550 ;;		On exit  : 0/0
  1551 ;;		Unchanged: 0/0
  1552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1553 ;;      Params:         0       0       0       0       0
  1554 ;;      Locals:         0       0       0       0       0
  1555 ;;      Temps:          1       0       0       0       0
  1556 ;;      Totals:         1       0       0       0       0
  1557 ;;Total ram usage:        1 bytes
  1558 ;; Hardware stack levels used: 1
  1559 ;; Hardware stack levels required when called: 1
  1560 ;; This function calls:
  1561 ;;		Nothing
  1562 ;; This function is called by:
  1563 ;;		_lcd_cmd
  1564 ;;		_lcd_char
  1565 ;; This function uses a non-reentrant model
  1566 ;;
  1567                           
  1568                           
  1569                           ;psect for function _lcd_delay_40us
  1570  03DC                     _lcd_delay_40us:
  1571  03DC                     l1357:	
  1572                           ;incstack = 0
  1573                           ; Regs used in _lcd_delay_40us: [wreg]
  1574                           
  1575  03DC  3042               	movlw	66
  1576  03DD  00F2               	movwf	??_lcd_delay_40us
  1577  03DE                     u707:
  1578  03DE  0BF2               	decfsz	??_lcd_delay_40us,f
  1579  03DF  2BDE               	goto	u707
  1580  03E0  0000               	nop
  1581  03E1                     l26:
  1582  03E1  0008               	return
  1583  03E2                     __end_of_lcd_delay_40us:
  1584                           
  1585                           	psect	text12
  1586  03C1                     __ptext12:	
  1587 ;; *************** function _lcd_byte_8bits *****************
  1588 ;; Defined at:
  1589 ;;		line 101 in file "lcd.c"
  1590 ;; Parameters:    Size  Location     Type
  1591 ;;  data            1    wreg     unsigned char 
  1592 ;; Auto vars:     Size  Location     Type
  1593 ;;  data            1    2[COMMON] unsigned char 
  1594 ;; Return value:  Size  Location     Type
  1595 ;;                  1    wreg      void 
  1596 ;; Registers used:
  1597 ;;		wreg, status,2, status,0, pclath, cstack
  1598 ;; Tracked objects:
  1599 ;;		On entry : 0/0
  1600 ;;		On exit  : 0/0
  1601 ;;		Unchanged: 0/0
  1602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1603 ;;      Params:         0       0       0       0       0
  1604 ;;      Locals:         1       0       0       0       0
  1605 ;;      Temps:          0       0       0       0       0
  1606 ;;      Totals:         1       0       0       0       0
  1607 ;;Total ram usage:        1 bytes
  1608 ;; Hardware stack levels used: 1
  1609 ;; Hardware stack levels required when called: 3
  1610 ;; This function calls:
  1611 ;;		_lcd_en_pulse
  1612 ;; This function is called by:
  1613 ;;		_lcd_cmd
  1614 ;;		_lcd_char
  1615 ;; This function uses a non-reentrant model
  1616 ;;
  1617                           
  1618                           
  1619                           ;psect for function _lcd_byte_8bits
  1620  03C1                     _lcd_byte_8bits:
  1621                           
  1622                           ;incstack = 0
  1623                           ; Regs used in _lcd_byte_8bits: [wreg+status,2+status,0+pclath+cstack]
  1624                           ;lcd_byte_8bits@data stored from wreg
  1625  03C1  00F2               	movwf	lcd_byte_8bits@data
  1626  03C2                     l1367:
  1627                           
  1628                           ;lcd.c: 101: void lcd_byte_8bits(unsigned char data);lcd.c: 102: {;lcd.c: 103:  PORTD = 
      +                          data;
  1629  03C2  0872               	movf	lcd_byte_8bits@data,w
  1630  03C3  1283               	bcf	3,5	;RP0=0, select bank0
  1631  03C4  1303               	bcf	3,6	;RP1=0, select bank0
  1632  03C5  0088               	movwf	8	;volatile
  1633  03C6                     l1369:
  1634                           
  1635                           ;lcd.c: 104:     lcd_en_pulse();
  1636  03C6  120A  118A  2376  120A  118A  	fcall	_lcd_en_pulse
  1637  03CB                     l52:
  1638  03CB  0008               	return
  1639  03CC                     __end_of_lcd_byte_8bits:
  1640                           
  1641                           	psect	text13
  1642  031F                     __ptext13:	
  1643 ;; *************** function _lcd_byte_4bits *****************
  1644 ;; Defined at:
  1645 ;;		line 88 in file "lcd.c"
  1646 ;; Parameters:    Size  Location     Type
  1647 ;;  data            1    wreg     unsigned char 
  1648 ;; Auto vars:     Size  Location     Type
  1649 ;;  data            1    5[COMMON] unsigned char 
  1650 ;;  nibble          1    6[COMMON] unsigned char 
  1651 ;; Return value:  Size  Location     Type
  1652 ;;                  1    wreg      void 
  1653 ;; Registers used:
  1654 ;;		wreg, status,2, status,0, pclath, cstack
  1655 ;; Tracked objects:
  1656 ;;		On entry : 0/0
  1657 ;;		On exit  : 0/0
  1658 ;;		Unchanged: 0/0
  1659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1660 ;;      Params:         0       0       0       0       0
  1661 ;;      Locals:         2       0       0       0       0
  1662 ;;      Temps:          2       0       0       0       0
  1663 ;;      Totals:         4       0       0       0       0
  1664 ;;Total ram usage:        4 bytes
  1665 ;; Hardware stack levels used: 1
  1666 ;; Hardware stack levels required when called: 4
  1667 ;; This function calls:
  1668 ;;		_lcd_send_nibble
  1669 ;; This function is called by:
  1670 ;;		_lcd_cmd
  1671 ;;		_lcd_char
  1672 ;; This function uses a non-reentrant model
  1673 ;;
  1674                           
  1675                           
  1676                           ;psect for function _lcd_byte_4bits
  1677  031F                     _lcd_byte_4bits:
  1678                           
  1679                           ;incstack = 0
  1680                           ; Regs used in _lcd_byte_4bits: [wreg+status,2+status,0+pclath+cstack]
  1681                           ;lcd_byte_4bits@data stored from wreg
  1682  031F  00F5               	movwf	lcd_byte_4bits@data
  1683  0320                     l1359:
  1684                           
  1685                           ;lcd.c: 88: void lcd_byte_4bits(unsigned char data);lcd.c: 89: {;lcd.c: 90:     unsigned
      +                           char nibble;;lcd.c: 93:     nibble = (data >> 4);
  1686  0320  0875               	movf	lcd_byte_4bits@data,w
  1687  0321  00F3               	movwf	??_lcd_byte_4bits
  1688  0322  3004               	movlw	4
  1689  0323                     u605:
  1690  0323  1003               	clrc
  1691  0324  0CF3               	rrf	??_lcd_byte_4bits,f
  1692  0325  3EFF               	addlw	-1
  1693  0326  1D03               	skipz
  1694  0327  2B23               	goto	u605
  1695  0328  0873               	movf	??_lcd_byte_4bits,w
  1696  0329  00F4               	movwf	??_lcd_byte_4bits+1
  1697  032A  0874               	movf	??_lcd_byte_4bits+1,w
  1698  032B  00F6               	movwf	lcd_byte_4bits@nibble
  1699  032C                     l1361:
  1700                           
  1701                           ;lcd.c: 94:     lcd_send_nibble(nibble);
  1702  032C  0876               	movf	lcd_byte_4bits@nibble,w
  1703  032D  120A  118A  2272  120A  118A  	fcall	_lcd_send_nibble
  1704  0332                     l1363:
  1705                           
  1706                           ;lcd.c: 97:     nibble = (data & 0x0F);
  1707  0332  0875               	movf	lcd_byte_4bits@data,w
  1708  0333  390F               	andlw	15
  1709  0334  00F3               	movwf	??_lcd_byte_4bits
  1710  0335  0873               	movf	??_lcd_byte_4bits,w
  1711  0336  00F6               	movwf	lcd_byte_4bits@nibble
  1712  0337                     l1365:
  1713                           
  1714                           ;lcd.c: 98:     lcd_send_nibble(nibble);
  1715  0337  0876               	movf	lcd_byte_4bits@nibble,w
  1716  0338  120A  118A  2272  120A  118A  	fcall	_lcd_send_nibble
  1717  033D                     l49:
  1718  033D  0008               	return
  1719  033E                     __end_of_lcd_byte_4bits:
  1720                           
  1721                           	psect	text14
  1722  0272                     __ptext14:	
  1723 ;; *************** function _lcd_send_nibble *****************
  1724 ;; Defined at:
  1725 ;;		line 72 in file "lcd.c"
  1726 ;; Parameters:    Size  Location     Type
  1727 ;;  data            1    wreg     unsigned char 
  1728 ;; Auto vars:     Size  Location     Type
  1729 ;;  data            1    2[COMMON] unsigned char 
  1730 ;; Return value:  Size  Location     Type
  1731 ;;                  1    wreg      void 
  1732 ;; Registers used:
  1733 ;;		wreg, status,2, status,0, pclath, cstack
  1734 ;; Tracked objects:
  1735 ;;		On entry : 0/0
  1736 ;;		On exit  : 0/0
  1737 ;;		Unchanged: 0/0
  1738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1739 ;;      Params:         0       0       0       0       0
  1740 ;;      Locals:         1       0       0       0       0
  1741 ;;      Temps:          0       0       0       0       0
  1742 ;;      Totals:         1       0       0       0       0
  1743 ;;Total ram usage:        1 bytes
  1744 ;; Hardware stack levels used: 1
  1745 ;; Hardware stack levels required when called: 3
  1746 ;; This function calls:
  1747 ;;		_lcd_en_pulse
  1748 ;; This function is called by:
  1749 ;;		_lcd_byte_4bits
  1750 ;;		_lcd_init_4bits
  1751 ;; This function uses a non-reentrant model
  1752 ;;
  1753                           
  1754                           
  1755                           ;psect for function _lcd_send_nibble
  1756  0272                     _lcd_send_nibble:
  1757                           
  1758                           ;incstack = 0
  1759                           ; Regs used in _lcd_send_nibble: [wreg+status,2+status,0+pclath+cstack]
  1760                           ;lcd_send_nibble@data stored from wreg
  1761  0272  00F2               	movwf	lcd_send_nibble@data
  1762  0273                     l1331:
  1763                           
  1764                           ;lcd.c: 72: void lcd_send_nibble(unsigned char data);lcd.c: 73: {;lcd.c: 76:     if (dat
      +                          a&0x01) var4 = 1;
  1765  0273  1C72               	btfss	lcd_send_nibble@data,0
  1766  0274  2A76               	goto	u561
  1767  0275  2A77               	goto	u560
  1768  0276                     u561:
  1769  0276  2A7C               	goto	l1335
  1770  0277                     u560:
  1771  0277                     l1333:
  1772  0277  1283               	bcf	3,5	;RP0=0, select bank0
  1773  0278  1303               	bcf	3,6	;RP1=0, select bank0
  1774  0279  01B5               	clrf	_var4
  1775  027A  0AB5               	incf	_var4,f
  1776  027B  2A7F               	goto	l1337
  1777  027C                     l1335:
  1778  027C  1283               	bcf	3,5	;RP0=0, select bank0
  1779  027D  1303               	bcf	3,6	;RP1=0, select bank0
  1780  027E  01B5               	clrf	_var4
  1781  027F                     l1337:
  1782                           
  1783                           ;lcd.c: 78:  if (data&0x02) var5 = 1;
  1784  027F  1CF2               	btfss	lcd_send_nibble@data,1
  1785  0280  2A82               	goto	u571
  1786  0281  2A83               	goto	u570
  1787  0282                     u571:
  1788  0282  2A86               	goto	l1341
  1789  0283                     u570:
  1790  0283                     l1339:
  1791  0283  01B4               	clrf	_var5
  1792  0284  0AB4               	incf	_var5,f
  1793  0285  2A87               	goto	l1343
  1794  0286                     l1341:
  1795  0286  01B4               	clrf	_var5
  1796  0287                     l1343:
  1797                           
  1798                           ;lcd.c: 80:  if (data&0x04) var6 = 1;
  1799  0287  1D72               	btfss	lcd_send_nibble@data,2
  1800  0288  2A8A               	goto	u581
  1801  0289  2A8B               	goto	u580
  1802  028A                     u581:
  1803  028A  2A8E               	goto	l1347
  1804  028B                     u580:
  1805  028B                     l1345:
  1806  028B  01B3               	clrf	_var6
  1807  028C  0AB3               	incf	_var6,f
  1808  028D  2A8F               	goto	l1349
  1809  028E                     l1347:
  1810  028E  01B3               	clrf	_var6
  1811  028F                     l1349:
  1812                           
  1813                           ;lcd.c: 82:  if (data&0x08) var7 = 1;
  1814  028F  1DF2               	btfss	lcd_send_nibble@data,3
  1815  0290  2A92               	goto	u591
  1816  0291  2A93               	goto	u590
  1817  0292                     u591:
  1818  0292  2A96               	goto	l1353
  1819  0293                     u590:
  1820  0293                     l1351:
  1821  0293  01B2               	clrf	_var7
  1822  0294  0AB2               	incf	_var7,f
  1823  0295  2A97               	goto	l1355
  1824  0296                     l1353:
  1825  0296  01B2               	clrf	_var7
  1826  0297                     l1355:
  1827                           
  1828                           ;lcd.c: 85:     lcd_en_pulse();
  1829  0297  120A  118A  2376  120A  118A  	fcall	_lcd_en_pulse
  1830  029C                     l46:
  1831  029C  0008               	return
  1832  029D                     __end_of_lcd_send_nibble:
  1833                           
  1834                           	psect	text15
  1835  0376                     __ptext15:	
  1836 ;; *************** function _lcd_en_pulse *****************
  1837 ;; Defined at:
  1838 ;;		line 64 in file "lcd.c"
  1839 ;; Parameters:    Size  Location     Type
  1840 ;;		None
  1841 ;; Auto vars:     Size  Location     Type
  1842 ;;		None
  1843 ;; Return value:  Size  Location     Type
  1844 ;;                  1    wreg      void 
  1845 ;; Registers used:
  1846 ;;		status,2, status,0, pclath, cstack
  1847 ;; Tracked objects:
  1848 ;;		On entry : 0/0
  1849 ;;		On exit  : 0/0
  1850 ;;		Unchanged: 0/0
  1851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1852 ;;      Params:         0       0       0       0       0
  1853 ;;      Locals:         0       0       0       0       0
  1854 ;;      Temps:          0       0       0       0       0
  1855 ;;      Totals:         0       0       0       0       0
  1856 ;;Total ram usage:        0 bytes
  1857 ;; Hardware stack levels used: 1
  1858 ;; Hardware stack levels required when called: 2
  1859 ;; This function calls:
  1860 ;;		_lcd_delay_1us
  1861 ;; This function is called by:
  1862 ;;		_lcd_send_nibble
  1863 ;;		_lcd_byte_8bits
  1864 ;; This function uses a non-reentrant model
  1865 ;;
  1866                           
  1867                           
  1868                           ;psect for function _lcd_en_pulse
  1869  0376                     _lcd_en_pulse:
  1870  0376                     l1325:	
  1871                           ;incstack = 0
  1872                           ; Regs used in _lcd_en_pulse: [status,2+status,0+pclath+cstack]
  1873                           
  1874                           
  1875                           ;lcd.c: 66:     PORTEbits.RE1 = 1;
  1876  0376  1283               	bcf	3,5	;RP0=0, select bank0
  1877  0377  1303               	bcf	3,6	;RP1=0, select bank0
  1878  0378  1489               	bsf	9,1	;volatile
  1879  0379                     l1327:
  1880                           
  1881                           ;lcd.c: 67:     lcd_delay_1us();
  1882  0379  120A  118A  23E2  120A  118A  	fcall	_lcd_delay_1us
  1883  037E                     l1329:
  1884                           
  1885                           ;lcd.c: 68:     PORTEbits.RE1 = 0;
  1886  037E  1283               	bcf	3,5	;RP0=0, select bank0
  1887  037F  1303               	bcf	3,6	;RP1=0, select bank0
  1888  0380  1089               	bcf	9,1	;volatile
  1889                           
  1890                           ;lcd.c: 69:     lcd_delay_1us();
  1891  0381  120A  118A  23E2  120A  118A  	fcall	_lcd_delay_1us
  1892  0386                     l35:
  1893  0386  0008               	return
  1894  0387                     __end_of_lcd_en_pulse:
  1895                           
  1896                           	psect	text16
  1897  03E2                     __ptext16:	
  1898 ;; *************** function _lcd_delay_1us *****************
  1899 ;; Defined at:
  1900 ;;		line 59 in file "lcd.c"
  1901 ;; Parameters:    Size  Location     Type
  1902 ;;		None
  1903 ;; Auto vars:     Size  Location     Type
  1904 ;;		None
  1905 ;; Return value:  Size  Location     Type
  1906 ;;                  1    wreg      void 
  1907 ;; Registers used:
  1908 ;;		None
  1909 ;; Tracked objects:
  1910 ;;		On entry : 0/0
  1911 ;;		On exit  : 0/0
  1912 ;;		Unchanged: 0/0
  1913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1914 ;;      Params:         0       0       0       0       0
  1915 ;;      Locals:         0       0       0       0       0
  1916 ;;      Temps:          0       0       0       0       0
  1917 ;;      Totals:         0       0       0       0       0
  1918 ;;Total ram usage:        0 bytes
  1919 ;; Hardware stack levels used: 1
  1920 ;; Hardware stack levels required when called: 1
  1921 ;; This function calls:
  1922 ;;		Nothing
  1923 ;; This function is called by:
  1924 ;;		_lcd_en_pulse
  1925 ;; This function uses a non-reentrant model
  1926 ;;
  1927                           
  1928                           
  1929                           ;psect for function _lcd_delay_1us
  1930  03E2                     _lcd_delay_1us:
  1931  03E2                     l1323:	
  1932                           ;incstack = 0
  1933                           ; Regs used in _lcd_delay_1us: []
  1934                           
  1935  03E2  2BE3               	nop2	;2 cycle nop
  1936  03E3  2BE4               	nop2	;2 cycle nop
  1937  03E4  0000               	nop
  1938  03E5                     l23:
  1939  03E5  0008               	return
  1940  03E6                     __end_of_lcd_delay_1us:
  1941                           
  1942                           	psect	text17
  1943  02C4                     __ptext17:	
  1944 ;; *************** function _itoa *****************
  1945 ;; Defined at:
  1946 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\itoa.c"
  1947 ;; Parameters:    Size  Location     Type
  1948 ;;  buf             1    wreg     PTR unsigned char 
  1949 ;;		 -> ad_char_val(5), 
  1950 ;;  val             2    9[BANK0 ] int 
  1951 ;;  base            2   11[BANK0 ] int 
  1952 ;; Auto vars:     Size  Location     Type
  1953 ;;  buf             1   14[BANK0 ] PTR unsigned char 
  1954 ;;		 -> ad_char_val(5), 
  1955 ;;  cp              1    0        PTR unsigned char 
  1956 ;;		 -> ad_char_val(5), 
  1957 ;; Return value:  Size  Location     Type
  1958 ;;                  1    wreg      PTR unsigned char 
  1959 ;; Registers used:
  1960 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1961 ;; Tracked objects:
  1962 ;;		On entry : 0/0
  1963 ;;		On exit  : 0/0
  1964 ;;		Unchanged: 0/0
  1965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1966 ;;      Params:         0       4       0       0       0
  1967 ;;      Locals:         0       1       0       0       0
  1968 ;;      Temps:          0       1       0       0       0
  1969 ;;      Totals:         0       6       0       0       0
  1970 ;;Total ram usage:        6 bytes
  1971 ;; Hardware stack levels used: 1
  1972 ;; Hardware stack levels required when called: 3
  1973 ;; This function calls:
  1974 ;;		_utoa
  1975 ;; This function is called by:
  1976 ;;		_main
  1977 ;; This function uses a non-reentrant model
  1978 ;;
  1979                           
  1980                           
  1981                           ;psect for function _itoa
  1982  02C4                     _itoa:
  1983                           
  1984                           ;incstack = 0
  1985                           ; Regs used in _itoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1986                           ;itoa@buf stored from wreg
  1987  02C4  1283               	bcf	3,5	;RP0=0, select bank0
  1988  02C5  1303               	bcf	3,6	;RP1=0, select bank0
  1989  02C6  00AE               	movwf	itoa@buf
  1990  02C7                     l1453:
  1991  02C7                     l1455:
  1992  02C7  1FAA               	btfss	itoa@val+1,7
  1993  02C8  2ACA               	goto	u661
  1994  02C9  2ACB               	goto	u660
  1995  02CA                     u661:
  1996  02CA  2ADB               	goto	l1463
  1997  02CB                     u660:
  1998  02CB                     l1457:
  1999  02CB  302D               	movlw	45
  2000  02CC  00AD               	movwf	??_itoa
  2001  02CD  082E               	movf	itoa@buf,w
  2002  02CE  0084               	movwf	4
  2003  02CF  082D               	movf	??_itoa,w
  2004  02D0  1383               	bcf	3,7	;select IRP bank0
  2005  02D1  0080               	movwf	0
  2006  02D2                     l1459:
  2007  02D2  3001               	movlw	1
  2008  02D3  00AD               	movwf	??_itoa
  2009  02D4  082D               	movf	??_itoa,w
  2010  02D5  07AE               	addwf	itoa@buf,f
  2011  02D6                     l1461:
  2012  02D6  09A9               	comf	itoa@val,f
  2013  02D7  09AA               	comf	itoa@val+1,f
  2014  02D8  0AA9               	incf	itoa@val,f
  2015  02D9  1903               	skipnz
  2016  02DA  0AAA               	incf	itoa@val+1,f
  2017  02DB                     l1463:
  2018  02DB  082A               	movf	itoa@val+1,w
  2019  02DC  00A1               	movwf	utoa@val+1
  2020  02DD  0829               	movf	itoa@val,w
  2021  02DE  00A0               	movwf	utoa@val
  2022  02DF  082C               	movf	itoa@base+1,w
  2023  02E0  00A3               	movwf	utoa@base+1
  2024  02E1  082B               	movf	itoa@base,w
  2025  02E2  00A2               	movwf	utoa@base
  2026  02E3  082E               	movf	itoa@buf,w
  2027  02E4  120A  118A  2020  120A  118A  	fcall	_utoa
  2028  02E9                     l717:
  2029  02E9  0008               	return
  2030  02EA                     __end_of_itoa:
  2031                           
  2032                           	psect	text18
  2033  0020                     __ptext18:	
  2034 ;; *************** function _utoa *****************
  2035 ;; Defined at:
  2036 ;;		line 17 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\itoa.c"
  2037 ;; Parameters:    Size  Location     Type
  2038 ;;  buf             1    wreg     PTR unsigned char 
  2039 ;;		 -> ad_char_val(5), 
  2040 ;;  val             2    0[BANK0 ] unsigned int 
  2041 ;;  base            2    2[BANK0 ] int 
  2042 ;; Auto vars:     Size  Location     Type
  2043 ;;  buf             1    8[BANK0 ] PTR unsigned char 
  2044 ;;		 -> ad_char_val(5), 
  2045 ;;  v               2    5[BANK0 ] unsigned int 
  2046 ;;  c               1    7[BANK0 ] unsigned char 
  2047 ;; Return value:  Size  Location     Type
  2048 ;;                  1    wreg      PTR unsigned char 
  2049 ;; Registers used:
  2050 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2051 ;; Tracked objects:
  2052 ;;		On entry : 0/0
  2053 ;;		On exit  : 0/0
  2054 ;;		Unchanged: 0/0
  2055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2056 ;;      Params:         0       4       0       0       0
  2057 ;;      Locals:         0       4       0       0       0
  2058 ;;      Temps:          0       1       0       0       0
  2059 ;;      Totals:         0       9       0       0       0
  2060 ;;Total ram usage:        9 bytes
  2061 ;; Hardware stack levels used: 1
  2062 ;; Hardware stack levels required when called: 2
  2063 ;; This function calls:
  2064 ;;		___lwdiv
  2065 ;;		___lwmod
  2066 ;; This function is called by:
  2067 ;;		_itoa
  2068 ;; This function uses a non-reentrant model
  2069 ;;
  2070                           
  2071                           
  2072                           ;psect for function _utoa
  2073  0020                     _utoa:
  2074                           
  2075                           ;incstack = 0
  2076                           ; Regs used in _utoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2077                           ;utoa@buf stored from wreg
  2078  0020  1283               	bcf	3,5	;RP0=0, select bank0
  2079  0021  1303               	bcf	3,6	;RP1=0, select bank0
  2080  0022  00A8               	movwf	utoa@buf
  2081  0023                     l1389:
  2082  0023  0821               	movf	utoa@val+1,w
  2083  0024  00A6               	movwf	utoa@v+1
  2084  0025  0820               	movf	utoa@val,w
  2085  0026  00A5               	movwf	utoa@v
  2086  0027                     l1391:
  2087  0027  0823               	movf	utoa@base+1,w
  2088  0028  00F3               	movwf	___lwdiv@divisor+1
  2089  0029  0822               	movf	utoa@base,w
  2090  002A  00F2               	movwf	___lwdiv@divisor
  2091  002B  0826               	movf	utoa@v+1,w
  2092  002C  00F5               	movwf	___lwdiv@dividend+1
  2093  002D  0825               	movf	utoa@v,w
  2094  002E  00F4               	movwf	___lwdiv@dividend
  2095  002F  120A  118A  2149  120A  118A  	fcall	___lwdiv
  2096  0034  0873               	movf	?___lwdiv+1,w
  2097  0035  1283               	bcf	3,5	;RP0=0, select bank0
  2098  0036  1303               	bcf	3,6	;RP1=0, select bank0
  2099  0037  00A6               	movwf	utoa@v+1
  2100  0038  0872               	movf	?___lwdiv,w
  2101  0039  00A5               	movwf	utoa@v
  2102  003A                     l1393:
  2103  003A  3001               	movlw	1
  2104  003B  00A4               	movwf	??_utoa
  2105  003C  0824               	movf	??_utoa,w
  2106  003D  07A8               	addwf	utoa@buf,f
  2107  003E                     l1395:
  2108  003E  0825               	movf	utoa@v,w
  2109  003F  0426               	iorwf	utoa@v+1,w
  2110  0040  1D03               	btfss	3,2
  2111  0041  2843               	goto	u611
  2112  0042  2844               	goto	u610
  2113  0043                     u611:
  2114  0043  2827               	goto	l1391
  2115  0044                     u610:
  2116  0044                     l1397:
  2117  0044  0828               	movf	utoa@buf,w
  2118  0045  0084               	movwf	4
  2119  0046  1383               	bcf	3,7	;select IRP bank0
  2120  0047  0180               	clrf	0
  2121  0048                     l1399:
  2122  0048  3001               	movlw	1
  2123  0049  02A8               	subwf	utoa@buf,f
  2124  004A                     l1401:
  2125  004A  0823               	movf	utoa@base+1,w
  2126  004B  00F3               	movwf	___lwmod@divisor+1
  2127  004C  0822               	movf	utoa@base,w
  2128  004D  00F2               	movwf	___lwmod@divisor
  2129  004E  0821               	movf	utoa@val+1,w
  2130  004F  00F5               	movwf	___lwmod@dividend+1
  2131  0050  0820               	movf	utoa@val,w
  2132  0051  00F4               	movwf	___lwmod@dividend
  2133  0052  120A  118A  2206  120A  118A  	fcall	___lwmod
  2134  0057  0872               	movf	?___lwmod,w
  2135  0058  1283               	bcf	3,5	;RP0=0, select bank0
  2136  0059  1303               	bcf	3,6	;RP1=0, select bank0
  2137  005A  00A4               	movwf	??_utoa
  2138  005B  0824               	movf	??_utoa,w
  2139  005C  00A7               	movwf	utoa@c
  2140  005D                     l1403:
  2141  005D  0823               	movf	utoa@base+1,w
  2142  005E  00F3               	movwf	___lwdiv@divisor+1
  2143  005F  0822               	movf	utoa@base,w
  2144  0060  00F2               	movwf	___lwdiv@divisor
  2145  0061  0821               	movf	utoa@val+1,w
  2146  0062  00F5               	movwf	___lwdiv@dividend+1
  2147  0063  0820               	movf	utoa@val,w
  2148  0064  00F4               	movwf	___lwdiv@dividend
  2149  0065  120A  118A  2149  120A  118A  	fcall	___lwdiv
  2150  006A  0873               	movf	?___lwdiv+1,w
  2151  006B  1283               	bcf	3,5	;RP0=0, select bank0
  2152  006C  1303               	bcf	3,6	;RP1=0, select bank0
  2153  006D  00A1               	movwf	utoa@val+1
  2154  006E  0872               	movf	?___lwdiv,w
  2155  006F  00A0               	movwf	utoa@val
  2156  0070                     l1405:
  2157  0070  300A               	movlw	10
  2158  0071  0227               	subwf	utoa@c,w
  2159  0072  1C03               	skipc
  2160  0073  2875               	goto	u621
  2161  0074  2876               	goto	u620
  2162  0075                     u621:
  2163  0075  287A               	goto	l723
  2164  0076                     u620:
  2165  0076                     l1407:
  2166  0076  3007               	movlw	7
  2167  0077  00A4               	movwf	??_utoa
  2168  0078  0824               	movf	??_utoa,w
  2169  0079  07A7               	addwf	utoa@c,f
  2170  007A                     l723:
  2171  007A  3030               	movlw	48
  2172  007B  00A4               	movwf	??_utoa
  2173  007C  0824               	movf	??_utoa,w
  2174  007D  07A7               	addwf	utoa@c,f
  2175  007E                     l1409:
  2176  007E  0827               	movf	utoa@c,w
  2177  007F  00A4               	movwf	??_utoa
  2178  0080  0828               	movf	utoa@buf,w
  2179  0081  0084               	movwf	4
  2180  0082  0824               	movf	??_utoa,w
  2181  0083  1383               	bcf	3,7	;select IRP bank0
  2182  0084  0080               	movwf	0
  2183  0085                     l1411:
  2184  0085  3001               	movlw	1
  2185  0086  02A8               	subwf	utoa@buf,f
  2186  0087                     l1413:
  2187  0087  0820               	movf	utoa@val,w
  2188  0088  0421               	iorwf	utoa@val+1,w
  2189  0089  1D03               	btfss	3,2
  2190  008A  288C               	goto	u631
  2191  008B  288D               	goto	u630
  2192  008C                     u631:
  2193  008C  284A               	goto	l1401
  2194  008D                     u630:
  2195  008D                     l1415:
  2196                           
  2197                           ;	Return value of _utoa is never used
  2198  008D  3001               	movlw	1
  2199  008E  00A4               	movwf	??_utoa
  2200  008F  0824               	movf	??_utoa,w
  2201  0090  07A8               	addwf	utoa@buf,f
  2202  0091                     l725:
  2203  0091  0008               	return
  2204  0092                     __end_of_utoa:
  2205                           
  2206                           	psect	text19
  2207  0206                     __ptext19:	
  2208 ;; *************** function ___lwmod *****************
  2209 ;; Defined at:
  2210 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
  2211 ;; Parameters:    Size  Location     Type
  2212 ;;  divisor         2    2[COMMON] unsigned int 
  2213 ;;  dividend        2    4[COMMON] unsigned int 
  2214 ;; Auto vars:     Size  Location     Type
  2215 ;;  counter         1    7[COMMON] unsigned char 
  2216 ;; Return value:  Size  Location     Type
  2217 ;;                  2    2[COMMON] unsigned int 
  2218 ;; Registers used:
  2219 ;;		wreg, status,2, status,0
  2220 ;; Tracked objects:
  2221 ;;		On entry : 0/0
  2222 ;;		On exit  : 0/0
  2223 ;;		Unchanged: 0/0
  2224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2225 ;;      Params:         4       0       0       0       0
  2226 ;;      Locals:         1       0       0       0       0
  2227 ;;      Temps:          1       0       0       0       0
  2228 ;;      Totals:         6       0       0       0       0
  2229 ;;Total ram usage:        6 bytes
  2230 ;; Hardware stack levels used: 1
  2231 ;; Hardware stack levels required when called: 1
  2232 ;; This function calls:
  2233 ;;		Nothing
  2234 ;; This function is called by:
  2235 ;;		_utoa
  2236 ;; This function uses a non-reentrant model
  2237 ;;
  2238                           
  2239                           
  2240                           ;psect for function ___lwmod
  2241  0206                     ___lwmod:
  2242  0206                     l1147:	
  2243                           ;incstack = 0
  2244                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2245                           
  2246  0206  0872               	movf	___lwmod@divisor,w
  2247  0207  0473               	iorwf	___lwmod@divisor+1,w
  2248  0208  1903               	btfsc	3,2
  2249  0209  2A0B               	goto	u431
  2250  020A  2A0C               	goto	u430
  2251  020B                     u431:
  2252  020B  2A3B               	goto	l1165
  2253  020C                     u430:
  2254  020C                     l1149:
  2255  020C  01F7               	clrf	___lwmod@counter
  2256  020D  0AF7               	incf	___lwmod@counter,f
  2257  020E  2A1A               	goto	l1155
  2258  020F                     l1151:
  2259  020F  3001               	movlw	1
  2260  0210                     u445:
  2261  0210  1003               	clrc
  2262  0211  0DF2               	rlf	___lwmod@divisor,f
  2263  0212  0DF3               	rlf	___lwmod@divisor+1,f
  2264  0213  3EFF               	addlw	-1
  2265  0214  1D03               	skipz
  2266  0215  2A10               	goto	u445
  2267  0216                     l1153:
  2268  0216  3001               	movlw	1
  2269  0217  00F6               	movwf	??___lwmod
  2270  0218  0876               	movf	??___lwmod,w
  2271  0219  07F7               	addwf	___lwmod@counter,f
  2272  021A                     l1155:
  2273  021A  1FF3               	btfss	___lwmod@divisor+1,7
  2274  021B  2A1D               	goto	u451
  2275  021C  2A1E               	goto	u450
  2276  021D                     u451:
  2277  021D  2A0F               	goto	l1151
  2278  021E                     u450:
  2279  021E                     l1157:
  2280  021E  0873               	movf	___lwmod@divisor+1,w
  2281  021F  0275               	subwf	___lwmod@dividend+1,w
  2282  0220  1D03               	skipz
  2283  0221  2A24               	goto	u465
  2284  0222  0872               	movf	___lwmod@divisor,w
  2285  0223  0274               	subwf	___lwmod@dividend,w
  2286  0224                     u465:
  2287  0224  1C03               	skipc
  2288  0225  2A27               	goto	u461
  2289  0226  2A28               	goto	u460
  2290  0227                     u461:
  2291  0227  2A2E               	goto	l1161
  2292  0228                     u460:
  2293  0228                     l1159:
  2294  0228  0872               	movf	___lwmod@divisor,w
  2295  0229  02F4               	subwf	___lwmod@dividend,f
  2296  022A  0873               	movf	___lwmod@divisor+1,w
  2297  022B  1C03               	skipc
  2298  022C  03F5               	decf	___lwmod@dividend+1,f
  2299  022D  02F5               	subwf	___lwmod@dividend+1,f
  2300  022E                     l1161:
  2301  022E  3001               	movlw	1
  2302  022F                     u475:
  2303  022F  1003               	clrc
  2304  0230  0CF3               	rrf	___lwmod@divisor+1,f
  2305  0231  0CF2               	rrf	___lwmod@divisor,f
  2306  0232  3EFF               	addlw	-1
  2307  0233  1D03               	skipz
  2308  0234  2A2F               	goto	u475
  2309  0235                     l1163:
  2310  0235  3001               	movlw	1
  2311  0236  02F7               	subwf	___lwmod@counter,f
  2312  0237  1D03               	btfss	3,2
  2313  0238  2A3A               	goto	u481
  2314  0239  2A3B               	goto	u480
  2315  023A                     u481:
  2316  023A  2A1E               	goto	l1157
  2317  023B                     u480:
  2318  023B                     l1165:
  2319  023B  0875               	movf	___lwmod@dividend+1,w
  2320  023C  00F3               	movwf	?___lwmod+1
  2321  023D  0874               	movf	___lwmod@dividend,w
  2322  023E  00F2               	movwf	?___lwmod
  2323  023F                     l545:
  2324  023F  0008               	return
  2325  0240                     __end_of___lwmod:
  2326                           
  2327                           	psect	text20
  2328  0149                     __ptext20:	
  2329 ;; *************** function ___lwdiv *****************
  2330 ;; Defined at:
  2331 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  2332 ;; Parameters:    Size  Location     Type
  2333 ;;  divisor         2    2[COMMON] unsigned int 
  2334 ;;  dividend        2    4[COMMON] unsigned int 
  2335 ;; Auto vars:     Size  Location     Type
  2336 ;;  quotient        2    7[COMMON] unsigned int 
  2337 ;;  counter         1    9[COMMON] unsigned char 
  2338 ;; Return value:  Size  Location     Type
  2339 ;;                  2    2[COMMON] unsigned int 
  2340 ;; Registers used:
  2341 ;;		wreg, status,2, status,0
  2342 ;; Tracked objects:
  2343 ;;		On entry : 0/0
  2344 ;;		On exit  : 0/0
  2345 ;;		Unchanged: 0/0
  2346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2347 ;;      Params:         4       0       0       0       0
  2348 ;;      Locals:         3       0       0       0       0
  2349 ;;      Temps:          1       0       0       0       0
  2350 ;;      Totals:         8       0       0       0       0
  2351 ;;Total ram usage:        8 bytes
  2352 ;; Hardware stack levels used: 1
  2353 ;; Hardware stack levels required when called: 1
  2354 ;; This function calls:
  2355 ;;		Nothing
  2356 ;; This function is called by:
  2357 ;;		_utoa
  2358 ;; This function uses a non-reentrant model
  2359 ;;
  2360                           
  2361                           
  2362                           ;psect for function ___lwdiv
  2363  0149                     ___lwdiv:
  2364  0149                     l1121:	
  2365                           ;incstack = 0
  2366                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2367                           
  2368  0149  01F7               	clrf	___lwdiv@quotient
  2369  014A  01F8               	clrf	___lwdiv@quotient+1
  2370  014B                     l1123:
  2371  014B  0872               	movf	___lwdiv@divisor,w
  2372  014C  0473               	iorwf	___lwdiv@divisor+1,w
  2373  014D  1903               	btfsc	3,2
  2374  014E  2950               	goto	u361
  2375  014F  2951               	goto	u360
  2376  0150                     u361:
  2377  0150  2988               	goto	l1143
  2378  0151                     u360:
  2379  0151                     l1125:
  2380  0151  01F9               	clrf	___lwdiv@counter
  2381  0152  0AF9               	incf	___lwdiv@counter,f
  2382  0153  295F               	goto	l1131
  2383  0154                     l1127:
  2384  0154  3001               	movlw	1
  2385  0155                     u375:
  2386  0155  1003               	clrc
  2387  0156  0DF2               	rlf	___lwdiv@divisor,f
  2388  0157  0DF3               	rlf	___lwdiv@divisor+1,f
  2389  0158  3EFF               	addlw	-1
  2390  0159  1D03               	skipz
  2391  015A  2955               	goto	u375
  2392  015B                     l1129:
  2393  015B  3001               	movlw	1
  2394  015C  00F6               	movwf	??___lwdiv
  2395  015D  0876               	movf	??___lwdiv,w
  2396  015E  07F9               	addwf	___lwdiv@counter,f
  2397  015F                     l1131:
  2398  015F  1FF3               	btfss	___lwdiv@divisor+1,7
  2399  0160  2962               	goto	u381
  2400  0161  2963               	goto	u380
  2401  0162                     u381:
  2402  0162  2954               	goto	l1127
  2403  0163                     u380:
  2404  0163                     l1133:
  2405  0163  3001               	movlw	1
  2406  0164                     u395:
  2407  0164  1003               	clrc
  2408  0165  0DF7               	rlf	___lwdiv@quotient,f
  2409  0166  0DF8               	rlf	___lwdiv@quotient+1,f
  2410  0167  3EFF               	addlw	-1
  2411  0168  1D03               	skipz
  2412  0169  2964               	goto	u395
  2413  016A  0873               	movf	___lwdiv@divisor+1,w
  2414  016B  0275               	subwf	___lwdiv@dividend+1,w
  2415  016C  1D03               	skipz
  2416  016D  2970               	goto	u405
  2417  016E  0872               	movf	___lwdiv@divisor,w
  2418  016F  0274               	subwf	___lwdiv@dividend,w
  2419  0170                     u405:
  2420  0170  1C03               	skipc
  2421  0171  2973               	goto	u401
  2422  0172  2974               	goto	u400
  2423  0173                     u401:
  2424  0173  297B               	goto	l1139
  2425  0174                     u400:
  2426  0174                     l1135:
  2427  0174  0872               	movf	___lwdiv@divisor,w
  2428  0175  02F4               	subwf	___lwdiv@dividend,f
  2429  0176  0873               	movf	___lwdiv@divisor+1,w
  2430  0177  1C03               	skipc
  2431  0178  03F5               	decf	___lwdiv@dividend+1,f
  2432  0179  02F5               	subwf	___lwdiv@dividend+1,f
  2433  017A                     l1137:
  2434  017A  1477               	bsf	___lwdiv@quotient,0
  2435  017B                     l1139:
  2436  017B  3001               	movlw	1
  2437  017C                     u415:
  2438  017C  1003               	clrc
  2439  017D  0CF3               	rrf	___lwdiv@divisor+1,f
  2440  017E  0CF2               	rrf	___lwdiv@divisor,f
  2441  017F  3EFF               	addlw	-1
  2442  0180  1D03               	skipz
  2443  0181  297C               	goto	u415
  2444  0182                     l1141:
  2445  0182  3001               	movlw	1
  2446  0183  02F9               	subwf	___lwdiv@counter,f
  2447  0184  1D03               	btfss	3,2
  2448  0185  2987               	goto	u421
  2449  0186  2988               	goto	u420
  2450  0187                     u421:
  2451  0187  2963               	goto	l1133
  2452  0188                     u420:
  2453  0188                     l1143:
  2454  0188  0878               	movf	___lwdiv@quotient+1,w
  2455  0189  00F3               	movwf	?___lwdiv+1
  2456  018A  0877               	movf	___lwdiv@quotient,w
  2457  018B  00F2               	movwf	?___lwdiv
  2458  018C                     l535:
  2459  018C  0008               	return
  2460  018D                     __end_of___lwdiv:
  2461                           
  2462                           	psect	text21
  2463  029D                     __ptext21:	
  2464 ;; *************** function _init *****************
  2465 ;; Defined at:
  2466 ;;		line 49 in file "main.c"
  2467 ;; Parameters:    Size  Location     Type
  2468 ;;		None
  2469 ;; Auto vars:     Size  Location     Type
  2470 ;;		None
  2471 ;; Return value:  Size  Location     Type
  2472 ;;                  1    wreg      void 
  2473 ;; Registers used:
  2474 ;;		wreg, status,2
  2475 ;; Tracked objects:
  2476 ;;		On entry : 0/0
  2477 ;;		On exit  : 0/0
  2478 ;;		Unchanged: 0/0
  2479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2480 ;;      Params:         0       0       0       0       0
  2481 ;;      Locals:         0       0       0       0       0
  2482 ;;      Temps:          0       0       0       0       0
  2483 ;;      Totals:         0       0       0       0       0
  2484 ;;Total ram usage:        0 bytes
  2485 ;; Hardware stack levels used: 1
  2486 ;; Hardware stack levels required when called: 1
  2487 ;; This function calls:
  2488 ;;		Nothing
  2489 ;; This function is called by:
  2490 ;;		_main
  2491 ;; This function uses a non-reentrant model
  2492 ;;
  2493                           
  2494                           
  2495                           ;psect for function _init
  2496  029D                     _init:
  2497  029D                     l1249:	
  2498                           ;incstack = 0
  2499                           ; Regs used in _init: [wreg+status,2]
  2500                           
  2501                           
  2502                           ;main.c: 52:     PORTA = 0b00000000;
  2503  029D  1283               	bcf	3,5	;RP0=0, select bank0
  2504  029E  1303               	bcf	3,6	;RP1=0, select bank0
  2505  029F  0185               	clrf	5	;volatile
  2506                           
  2507                           ;main.c: 53:     PORTB = 0b00000000;
  2508  02A0  0186               	clrf	6	;volatile
  2509                           
  2510                           ;main.c: 54:     PORTC = 0b00000000;
  2511  02A1  0187               	clrf	7	;volatile
  2512                           
  2513                           ;main.c: 55:     TRISD = 0b00000000;
  2514  02A2  1683               	bsf	3,5	;RP0=1, select bank1
  2515  02A3  1303               	bcf	3,6	;RP1=0, select bank1
  2516  02A4  0188               	clrf	8	;volatile
  2517                           
  2518                           ;main.c: 56:     PORTE = 0b00000000;
  2519  02A5  1283               	bcf	3,5	;RP0=0, select bank0
  2520  02A6  1303               	bcf	3,6	;RP1=0, select bank0
  2521  02A7  0189               	clrf	9	;volatile
  2522  02A8                     l1251:
  2523                           
  2524                           ;main.c: 58:     TRISA = 0b00000001;
  2525  02A8  3001               	movlw	1
  2526  02A9  1683               	bsf	3,5	;RP0=1, select bank1
  2527  02AA  1303               	bcf	3,6	;RP1=0, select bank1
  2528  02AB  0085               	movwf	5	;volatile
  2529  02AC                     l1253:
  2530                           
  2531                           ;main.c: 59:     TRISB = 0b00000001;
  2532  02AC  3001               	movlw	1
  2533  02AD  0086               	movwf	6	;volatile
  2534                           
  2535                           ;main.c: 60:     TRISC = 0b00000000;
  2536  02AE  0187               	clrf	7	;volatile
  2537                           
  2538                           ;main.c: 61:     PORTD = 0b00000000;
  2539  02AF  1283               	bcf	3,5	;RP0=0, select bank0
  2540  02B0  1303               	bcf	3,6	;RP1=0, select bank0
  2541  02B1  0188               	clrf	8	;volatile
  2542                           
  2543                           ;main.c: 62:     TRISE = 0b00000000;
  2544  02B2  1683               	bsf	3,5	;RP0=1, select bank1
  2545  02B3  1303               	bcf	3,6	;RP1=0, select bank1
  2546  02B4  0189               	clrf	9	;volatile
  2547  02B5                     l1255:
  2548                           
  2549                           ;main.c: 65:     OPTION_REG = 0b10000001;
  2550  02B5  3081               	movlw	129
  2551  02B6  0081               	movwf	1	;volatile
  2552  02B7                     l1257:
  2553                           
  2554                           ;main.c: 76:     INTCON = 0b00010000;
  2555  02B7  3010               	movlw	16
  2556  02B8  008B               	movwf	11	;volatile
  2557  02B9                     l1259:
  2558                           
  2559                           ;main.c: 89:     CMCON = 0x07;
  2560  02B9  3007               	movlw	7
  2561  02BA  009C               	movwf	28	;volatile
  2562  02BB                     l1261:
  2563                           
  2564                           ;main.c: 92:     ADCON0 = 0b10000001;
  2565  02BB  3081               	movlw	129
  2566  02BC  1283               	bcf	3,5	;RP0=0, select bank0
  2567  02BD  1303               	bcf	3,6	;RP1=0, select bank0
  2568  02BE  009F               	movwf	31	;volatile
  2569  02BF                     l1263:
  2570                           
  2571                           ;main.c: 102:     ADCON1 = 0b10001110;
  2572  02BF  308E               	movlw	142
  2573  02C0  1683               	bsf	3,5	;RP0=1, select bank1
  2574  02C1  1303               	bcf	3,6	;RP1=0, select bank1
  2575  02C2  009F               	movwf	31	;volatile
  2576  02C3                     l169:
  2577  02C3  0008               	return
  2578  02C4                     __end_of_init:
  2579                           
  2580                           	psect	text22
  2581  035D                     __ptext22:	
  2582 ;; *************** function _amost1 *****************
  2583 ;; Defined at:
  2584 ;;		line 29 in file "main.c"
  2585 ;; Parameters:    Size  Location     Type
  2586 ;;  value           1    wreg     PTR unsigned int 
  2587 ;;		 -> ad_value(2), 
  2588 ;; Auto vars:     Size  Location     Type
  2589 ;;  value           1    3[COMMON] PTR unsigned int 
  2590 ;;		 -> ad_value(2), 
  2591 ;; Return value:  Size  Location     Type
  2592 ;;                  1    wreg      void 
  2593 ;; Registers used:
  2594 ;;		wreg, fsr0l, fsr0h
  2595 ;; Tracked objects:
  2596 ;;		On entry : 0/0
  2597 ;;		On exit  : 0/0
  2598 ;;		Unchanged: 0/0
  2599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2600 ;;      Params:         0       0       0       0       0
  2601 ;;      Locals:         1       0       0       0       0
  2602 ;;      Temps:          1       0       0       0       0
  2603 ;;      Totals:         2       0       0       0       0
  2604 ;;Total ram usage:        2 bytes
  2605 ;; Hardware stack levels used: 1
  2606 ;; Hardware stack levels required when called: 1
  2607 ;; This function calls:
  2608 ;;		Nothing
  2609 ;; This function is called by:
  2610 ;;		_main
  2611 ;; This function uses a non-reentrant model
  2612 ;;
  2613                           
  2614                           
  2615                           ;psect for function _amost1
  2616  035D                     _amost1:
  2617                           
  2618                           ;incstack = 0
  2619                           ; Regs used in _amost1: [wregfsr0]
  2620                           ;amost1@value stored from wreg
  2621  035D  00F3               	movwf	amost1@value
  2622  035E                     l1243:
  2623                           
  2624                           ;main.c: 29: void amost1(unsigned int *value);main.c: 30: {;main.c: 31:     _delay((unsi
      +                          gned long)((100)*(20000000/4000000.0)));
  2625  035E  30A6               	movlw	166
  2626  035F  00F2               	movwf	??_amost1
  2627  0360                     u717:
  2628  0360  0BF2               	decfsz	??_amost1,f
  2629  0361  2B60               	goto	u717
  2630  0362  0000               	nop
  2631  0363                     l1245:
  2632                           
  2633                           ;main.c: 32:     ADCON0bits.GO_nDONE = 1;
  2634  0363  1283               	bcf	3,5	;RP0=0, select bank0
  2635  0364  1303               	bcf	3,6	;RP1=0, select bank0
  2636  0365  151F               	bsf	31,2	;volatile
  2637  0366                     l157:	
  2638                           ;main.c: 33:     while(ADCON0bits.GO_nDONE);
  2639                           
  2640  0366  191F               	btfsc	31,2	;volatile
  2641  0367  2B69               	goto	u541
  2642  0368  2B6A               	goto	u540
  2643  0369                     u541:
  2644  0369  2B66               	goto	l157
  2645  036A                     u540:
  2646  036A                     l1247:
  2647                           
  2648                           ;main.c: 34:     *value = (unsigned int)(ADRESH << 8) + (ADRESL);
  2649  036A  0873               	movf	amost1@value,w
  2650  036B  0084               	movwf	4
  2651  036C  1683               	bsf	3,5	;RP0=1, select bank1
  2652  036D  1303               	bcf	3,6	;RP1=0, select bank1
  2653  036E  081E               	movf	30,w	;volatile
  2654  036F  0080               	movwf	0
  2655  0370  0A84               	incf	4,f
  2656  0371  1283               	bcf	3,5	;RP0=0, select bank0
  2657  0372  1303               	bcf	3,6	;RP1=0, select bank0
  2658  0373  081E               	movf	30,w	;volatile
  2659  0374  0080               	movwf	0
  2660  0375                     l160:
  2661  0375  0008               	return
  2662  0376                     __end_of_amost1:
  2663                           
  2664                           	psect	text23
  2665  033E                     __ptext23:	
  2666 ;; *************** function _myIsr *****************
  2667 ;; Defined at:
  2668 ;;		line 18 in file "main.c"
  2669 ;; Parameters:    Size  Location     Type
  2670 ;;		None
  2671 ;; Auto vars:     Size  Location     Type
  2672 ;;		None
  2673 ;; Return value:  Size  Location     Type
  2674 ;;                  1    wreg      void 
  2675 ;; Registers used:
  2676 ;;		status,0
  2677 ;; Tracked objects:
  2678 ;;		On entry : 0/0
  2679 ;;		On exit  : 0/0
  2680 ;;		Unchanged: 0/0
  2681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2682 ;;      Params:         0       0       0       0       0
  2683 ;;      Locals:         0       0       0       0       0
  2684 ;;      Temps:          2       0       0       0       0
  2685 ;;      Totals:         2       0       0       0       0
  2686 ;;Total ram usage:        2 bytes
  2687 ;; Hardware stack levels used: 1
  2688 ;; This function calls:
  2689 ;;		Nothing
  2690 ;; This function is called by:
  2691 ;;		Interrupt level 1
  2692 ;; This function uses a non-reentrant model
  2693 ;;
  2694                           
  2695                           
  2696                           ;psect for function _myIsr
  2697  033E                     _myIsr:
  2698  033E                     i1l1003:
  2699                           
  2700                           ;main.c: 21:     if(INTCONbits.INTE && INTCONbits.INTF)
  2701  033E  1E0B               	btfss	11,4	;volatile
  2702  033F  2B41               	goto	u26_21
  2703  0340  2B42               	goto	u26_20
  2704  0341                     u26_21:
  2705  0341  2B56               	goto	i1l154
  2706  0342                     u26_20:
  2707  0342                     i1l1005:
  2708  0342  1C8B               	btfss	11,1	;volatile
  2709  0343  2B45               	goto	u27_21
  2710  0344  2B46               	goto	u27_20
  2711  0345                     u27_21:
  2712  0345  2B56               	goto	i1l154
  2713  0346                     u27_20:
  2714  0346                     i1l1007:
  2715                           
  2716                           ;main.c: 22:     {;main.c: 23:         INTCONbits.INTF = 0;
  2717  0346  108B               	bcf	11,1	;volatile
  2718  0347                     i1l1009:
  2719                           
  2720                           ;main.c: 24:         PORTBbits.RB1 = ~PORTBbits.RB1;
  2721  0347  1003               	clrc
  2722  0348  1283               	bcf	3,5	;RP0=0, select bank0
  2723  0349  1303               	bcf	3,6	;RP1=0, select bank0
  2724  034A  1C86               	btfss	6,1	;volatile
  2725  034B  1403               	setc
  2726  034C  1803               	btfsc	3,0
  2727  034D  2B4F               	goto	u28_21
  2728  034E  2B53               	goto	u28_20
  2729  034F                     u28_21:
  2730  034F  1283               	bcf	3,5	;RP0=0, select bank0
  2731  0350  1303               	bcf	3,6	;RP1=0, select bank0
  2732  0351  1486               	bsf	6,1	;volatile
  2733  0352  2B56               	goto	u29_24
  2734  0353                     u28_20:
  2735  0353  1283               	bcf	3,5	;RP0=0, select bank0
  2736  0354  1303               	bcf	3,6	;RP1=0, select bank0
  2737  0355  1086               	bcf	6,1	;volatile
  2738  0356                     u29_24:
  2739  0356                     i1l154:
  2740  0356  0871               	movf	??_myIsr+1,w
  2741  0357  008A               	movwf	10
  2742  0358  0E70               	swapf	??_myIsr,w
  2743  0359  0083               	movwf	3
  2744  035A  0EFE               	swapf	btemp,f
  2745  035B  0E7E               	swapf	btemp,w
  2746  035C  0009               	retfie
  2747  035D                     __end_of_myIsr:
  2748  007E                     btemp	set	126	;btemp
  2749  007E                     wtemp0	set	126
  2750                           
  2751                           	psect	intentry
  2752  0004                     __pintentry:	
  2753                           ;incstack = 0
  2754 ;; hardware stack exceeded
  2755                           ; Regs used in _myIsr: [status,0]
  2756                           
  2757  0004                     interrupt_function:
  2758  007E                     saved_w	set	btemp
  2759  0004  00FE               	movwf	btemp
  2760  0005  0E03               	swapf	3,w
  2761  0006  00F0               	movwf	??_myIsr
  2762  0007  080A               	movf	10,w
  2763  0008  00F1               	movwf	??_myIsr+1
  2764  0009  120A  118A  2B3E   	ljmp	_myIsr
  2765                           
  2766                           	psect	config
  2767                           
  2768                           ;Config register CONFIG @ 0x2007
  2769                           ;	Oscillator Selection bits
  2770                           ;	FOSC = HS, HS oscillator
  2771                           ;	Watchdog Timer Enable bit
  2772                           ;	WDTE = OFF, WDT disabled
  2773                           ;	Power-up Timer Enable bit
  2774                           ;	PWRTE = ON, PWRT enabled
  2775                           ;	Brown-out Reset Enable bit
  2776                           ;	BOREN = ON, BOR enabled
  2777                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  2778                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
  2779                           ;	Data EEPROM Memory Code Protection bit
  2780                           ;	CPD = OFF, Data EEPROM code protection off
  2781                           ;	Flash Program Memory Write Enable bits
  2782                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  2783                           ;	In-Circuit Debugger Mode bit
  2784                           ;	DEBUG = 0x1, unprogrammed default
  2785                           ;	Flash Program Memory Code Protection bit
  2786                           ;	CP = OFF, Code protection off
  2787  2007                     	org	8199
  2788  2007  3FF2               	dw	16370

Data Sizes:
    Strings     15
    Constant    0
    Data        0
    BSS         11
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     18      27
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(1) Largest target is 5
		 -> ad_char_val(BANK0[5]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 5
		 -> ad_char_val(BANK0[5]), 

    itoa@buf	PTR unsigned char  size(1) Largest target is 5
		 -> ad_char_val(BANK0[5]), 

    itoa@cp	PTR unsigned char  size(1) Largest target is 5
		 -> ad_char_val(BANK0[5]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 5
		 -> ad_char_val(BANK0[5]), 

    amost1@value	PTR unsigned int  size(1) Largest target is 2
		 -> ad_value(COMMON[2]), 

    lcd_puts@vector	PTR unsigned char  size(2) Largest target is 15
		 -> ad_char_val(BANK0[5]), STR_1(CODE[15]), 


Critical Paths under _main in COMMON

    _main->_lcd_goto
    _main->_lcd_puts
    _lcd_puts->_lcd_char
    _lcd_char->_lcd_byte_4bits
    _lcd_init_8bits->_lcd_cmd
    _lcd_init_4bits->_lcd_cmd
    _lcd_clear->_lcd_cmd
    _lcd_goto->_lcd_cmd
    _lcd_cmd->_lcd_byte_4bits
    _lcd_byte_4bits->_lcd_send_nibble
    _utoa->___lwdiv

Critical Paths under _myIsr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_itoa
    _itoa->_utoa

Critical Paths under _myIsr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _myIsr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myIsr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myIsr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    5002
                                             15 BANK0      3     3      0
                             _amost1
                               _init
                               _itoa
                           _lcd_goto
                           _lcd_init
                           _lcd_puts
 ---------------------------------------------------------------------------------
 (1) _lcd_puts                                             9     6      3     871
                                              8 COMMON     2     2      0
                                              0 BANK0      7     4      3
                           _lcd_char
 ---------------------------------------------------------------------------------
 (2) _lcd_char                                             1     1      0     347
                                              7 COMMON     1     1      0
                     _lcd_byte_4bits
                     _lcd_byte_8bits
                     _lcd_delay_40us
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0    1512
                     _lcd_init_4bits
                     _lcd_init_8bits
 ---------------------------------------------------------------------------------
 (2) _lcd_init_8bits                                       0     0      0     694
                          _lcd_clear
                            _lcd_cmd
                      _lcd_delay_2ms
                     _lcd_delay_40ms
 ---------------------------------------------------------------------------------
 (2) _lcd_init_4bits                                       0     0      0     818
                          _lcd_clear
                            _lcd_cmd
                      _lcd_delay_2ms
                     _lcd_delay_40ms
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (3) _lcd_delay_40ms                                       3     3      0       0
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (3) _lcd_clear                                            0     0      0     347
                            _lcd_cmd
                      _lcd_delay_2ms
 ---------------------------------------------------------------------------------
 (3) _lcd_delay_2ms                                        2     2      0       0
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _lcd_goto                                             4     3      1     682
                                              8 COMMON     2     1      1
                                              0 BANK0      2     2      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (3) _lcd_cmd                                              1     1      0     347
                                              7 COMMON     1     1      0
                     _lcd_byte_4bits
                     _lcd_byte_8bits
                     _lcd_delay_40us
 ---------------------------------------------------------------------------------
 (3) _lcd_delay_40us                                       1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _lcd_byte_8bits                                       1     1      0      31
                                              2 COMMON     1     1      0
                       _lcd_en_pulse
 ---------------------------------------------------------------------------------
 (3) _lcd_byte_4bits                                       4     4      0     254
                                              3 COMMON     4     4      0
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (4) _lcd_send_nibble                                      1     1      0     124
                                              2 COMMON     1     1      0
                       _lcd_en_pulse
 ---------------------------------------------------------------------------------
 (4) _lcd_en_pulse                                         0     0      0       0
                      _lcd_delay_1us
 ---------------------------------------------------------------------------------
 (5) _lcd_delay_1us                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _itoa                                                 7     3      4    1882
                                              9 BANK0      6     2      4
                               _utoa
 ---------------------------------------------------------------------------------
 (2) _utoa                                                 9     5      4    1433
                                              0 BANK0      9     5      4
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     311
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     466
                                              2 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _amost1                                               2     2      0      55
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _myIsr                                                2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _amost1
   _init
   _itoa
     _utoa
       ___lwdiv
       ___lwmod
   _lcd_goto
     _lcd_cmd
       _lcd_byte_4bits
         _lcd_send_nibble
           _lcd_en_pulse
             _lcd_delay_1us
       _lcd_byte_8bits
         _lcd_en_pulse
       _lcd_delay_40us
   _lcd_init
     _lcd_init_4bits
       _lcd_clear
         _lcd_cmd
         _lcd_delay_2ms
       _lcd_cmd
       _lcd_delay_2ms
       _lcd_delay_40ms
       _lcd_send_nibble
     _lcd_init_8bits
       _lcd_clear
       _lcd_cmd
       _lcd_delay_2ms
       _lcd_delay_40ms
   _lcd_puts
     _lcd_char
       _lcd_byte_4bits
       _lcd_byte_8bits
       _lcd_delay_40us

 _myIsr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      27       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     12      1B       5       33.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      27      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Jan 27 21:02:00 2022

             lcd_cmd@data 0077              lcd_char@data 0077                         pc 0002  
                      l23 03E5                        l32 03B4                        l26 03E1  
                      l35 0386                        l52 03CB                        l29 03D5  
                      l61 0391                        l46 029C                        l62 0396  
                      l71 01CA                        l56 03A1                        l49 033D  
                      l57 03A6                        l82 03C0                        l74 0148  
                      l68 0271                        l94 0205                        l79 03DB  
                      fsr 0004                       l160 0375                       l157 0366  
                     l169 02C3                       l535 018C                       l545 023F  
                     l723 007A                       l725 0091                       l717 02E9  
                     u400 0174                       u401 0173                       u420 0188  
                     u421 0187                       u405 0170                       u430 020C  
                     u415 017C                       u431 020B                       u360 0151  
                     u361 0150                       u450 021E                       u610 0044  
                     u451 021D                       u611 0043                       u540 036A  
                     u380 0163                       u460 0228                       u620 0076  
                     u541 0369                       u381 0162                       u461 0227  
                     u445 0210                       u621 0075                       u605 0323  
                     u630 008D                       u375 0155                       u631 008C  
                     u480 023B                       u560 0277                       u640 024F  
                     u481 023A                       u465 0224                       u561 0276  
                     u570 0283                       u650 0271                       u395 0164  
                     u475 022F                       u571 0282                       u707 03DE  
                     u651 0270                       u660 02CB                       u580 028B  
                     u717 0360                       u661 02CA                       u581 028A  
                     u590 0293                       u591 0292                       u677 00F5  
                     u687 03AD                       u697 03D0                       fsr0 0004  
                     indf 0000               lcd_goto@col 0078               lcd_goto@lin 0079  
                    l1121 0149                      l1131 015F                      l1123 014B  
                    l1141 0182                      l1133 0163                      l1125 0151  
                    l1109 03CC                      l1117 03A7                      l1135 0174  
                    l1127 0154                      l1143 0188                      l1151 020F  
                    l1137 017A                      l1129 015B                      l1161 022E  
                    l1153 0216                      l1401 004A                      l1243 035E  
                    l1251 02A8                      l1139 017B                      l1163 0235  
                    l1155 021A                      l1147 0206                      l1411 0085  
                    l1403 005D                      l1323 03E2                      l1331 0273  
                    l1245 0363                      l1261 02BB                      l1253 02AC  
                    l1157 021E                      l1149 020C                      l1165 023B  
                    l1413 0087                      l1405 0070                      l1325 0376  
                    l1341 0286                      l1333 0277                      l1421 0243  
                    l1247 036A                      l1263 02BF                      l1255 02B5  
                    l1159 0228                      l1415 008D                      l1407 0076  
                    l1327 0379                      l1351 0293                      l1343 0287  
                    l1335 027C                      l1511 01F7                      l1431 03D6  
                    l1423 0245                      l1257 02B7                      l1249 029D  
                    l1409 007E                      l1329 037E                      l1353 0296  
                    l1345 028B                      l1337 027F                      l1361 032C  
                    l1441 01DD                      l1425 025F                      l1259 02B9  
                    l1355 0297                      l1347 028E                      l1339 0283  
                    l1363 0332                      l1371 0398                      l1443 01E5  
                    l1435 01CC                      l1427 0265                      l1419 0240  
                    l1461 02D6                      l1453 02C7                      l1349 028F  
                    l1365 0337                      l1357 03DC                      l1373 039B  
                    l1437 01CD                      l1381 038B                      l1429 026B  
                    l1391 0027                      l1463 02DB                      l1455 02C7  
                    l1359 0320                      l1367 03C2                      l1439 01D5  
                    l1447 01ED                      l1471 0093                      l1393 003A  
                    l1457 02CB                      l1369 03C6                      l1377 03B5  
                    l1385 018D                      l1481 00BB                      l1473 0098  
                    l1395 003E                      l1459 02D2                      l1387 0100  
                    l1379 0388                      l1483 00C8                      l1475 009E  
                    l1397 0044                      l1389 0023                      l1485 00D6  
                    l1477 00A6                      l1469 0092                      l1399 0048  
                    l1487 00DE                      l1479 00B5                      l1489 00ED  
                    STR_1 0310            ??_lcd_en_pulse 0072          ?_lcd_send_nibble 0070  
                    _main 0092                      _init 029D                      _var4 0035  
                    _var5 0034                      _var6 0033                      _var7 0032  
                    _itoa 02C4                      btemp 007E                      _utoa 0020  
             lcd_puts@cnt 0079                      start 000C           ??_lcd_delay_2ms 0072  
         ??_lcd_delay_1us 0072                     ?_main 0070                     ?_init 0070  
                   ?_itoa 0029                     _CMCON 009C                     ?_utoa 0020  
         __end_of___lwdiv 018D                     i1l154 0356           __end_of___lwmod 0240  
                   u26_20 0342                     u26_21 0341                     u27_20 0346  
                   u27_21 0345                     _PORTA 0005                     _PORTB 0006  
                   _PORTC 0007                     _PORTD 0008                     _PORTE 0009  
                   u28_20 0353                     u28_21 034F                     u29_24 0356  
                   _TRISA 0085                     _TRISB 0086                     _TRISC 0087  
                   _TRISD 0088                     _TRISE 0089           __end_of_lcd_cmd 03A7  
                   _myIsr 033E                     pclath 000A                     utoa@c 0027  
                   utoa@v 0025                     status 0003                     wtemp0 007E  
         __initialization 000F              __end_of_main 0100              __end_of_init 02C4  
            __end_of_itoa 02EA              __end_of_utoa 0092          ??_lcd_delay_40ms 0072  
        ??_lcd_delay_40us 0072                    ??_main 002F                    ??_init 0072  
                  ??_itoa 002D                    ??_utoa 0024                    _ADCON0 001F  
                  _ADCON1 009F                    _ADRESH 001E                    ?_myIsr 0070  
                  _ADRESL 009E                    i1l1003 033E                    i1l1005 0342  
                  i1l1007 0346                    i1l1009 0347                    _INTCON 000B  
        __end_of_lcd_char 0397          __end_of_lcd_init 03DC          __end_of_lcd_goto 0206  
        __end_of_lcd_puts 0272                    _amost1 035D                 ??___lwdiv 0076  
               ??___lwmod 0076          ??_lcd_byte_4bits 0073          ??_lcd_byte_8bits 0072  
    __end_of_lcd_en_pulse 0387                 ??_lcd_cmd 0077          ??_lcd_init_4bits 0078  
        ??_lcd_init_8bits 0078                    saved_w 007E   __end_of__initialization 001C  
          __pcstackCOMMON 0070             __end_of_myIsr 035D        __size_of_lcd_clear 000C  
                 ??_myIsr 0070                __pbssBANK0 0032                __pmaintext 0092  
              __pintentry 0004                   ?_amost1 0070                 ?_lcd_char 0070  
               ?_lcd_init 0070                 ?_lcd_goto 0078                 ?_lcd_puts 0020  
              __stringtab 0300         __end_of_lcd_clear 03C1  __size_of_lcd_send_nibble 002B  
   __size_of_lcd_en_pulse 0011                   ___lwdiv 0149                   ___lwmod 0206  
         __size_of_amost1 0019            lcd_puts@LENGHT 0022     __end_of_lcd_delay_2ms 03D6  
   __end_of_lcd_delay_1us 03E6                   __ptext1 0240                   __ptext2 0387  
                 __ptext3 03D6                   __ptext4 018D                   __ptext5 0100  
                 __ptext6 03A7                   __ptext7 03B5                   __ptext8 03CC  
                 __ptext9 01CB                   _lcd_cmd 0397        lcd_byte_4bits@data 0075  
              ??_lcd_char 0077                ??_lcd_init 0078                ??_lcd_goto 0020  
              ??_lcd_puts 0023      end_of_initialization 001C            lcd_puts@vector 0020  
                 itoa@buf 002E                   itoa@val 0029              _lcd_en_pulse 0376  
      lcd_byte_8bits@data 0072                   utoa@buf 0028                   utoa@val 0020  
               _PORTBbits 0006                 _PORTEbits 0009               _ad_char_val 0036  
          __end_of_amost1 0376         ??_lcd_send_nibble 0072       start_initialization 000F  
 __size_of_lcd_delay_40ms 000E   __size_of_lcd_delay_40us 0006                  ??_amost1 0072  
             __pbssCOMMON 007A                 ___latbits 0002             __pcstackBANK0 0020  
 __size_of_lcd_byte_4bits 001F   __size_of_lcd_byte_8bits 000B   __size_of_lcd_init_4bits 0049  
 __size_of_lcd_init_8bits 003E         __size_of_lcd_char 0010         __size_of_lcd_init 0006  
       __size_of_lcd_goto 003B         __size_of_lcd_puts 0032          ___lwdiv@dividend 0074  
                ?___lwdiv 0072                  ?___lwmod 0072                 _lcd_clear 03B5  
               __pstrings 0300                  ?_lcd_cmd 0070          ___lwdiv@quotient 0077  
          __size_of_myIsr 001F         interrupt_function 0004      lcd_byte_4bits@nibble 0076  
              ?_lcd_clear 0070       lcd_send_nibble@data 0072                _ADCON0bits 001F  
             __stringbase 030F            _lcd_delay_40ms 03A7            _lcd_delay_40us 03DC  
               lcd_puts@x 0078    __size_of_lcd_delay_2ms 000A    __size_of_lcd_delay_1us 0004  
         _lcd_send_nibble 0272          __size_of___lwdiv 0044          __size_of___lwmod 003A  
      __end_of__stringtab 0310                  _ad_value 007A    __end_of_lcd_delay_40ms 03B5  
  __end_of_lcd_delay_40us 03E2          __size_of_lcd_cmd 0010           ___lwdiv@divisor 0072  
         ___lwdiv@counter 0079                  __ptext10 0397                  __ptext11 03DC  
                __ptext20 0149                  __ptext12 03C1                  __ptext21 029D  
                __ptext13 031F                  __ptext22 035D                  __ptext14 0272  
                __ptext23 033E                  __ptext15 0376                  __ptext16 03E2  
                __ptext17 02C4                  __ptext18 0020                  __ptext19 0206  
          _lcd_byte_4bits 031F            _lcd_byte_8bits 03C1                  _lcd_char 0387  
                _lcd_init 03D6                  _lcd_goto 01CB            _lcd_init_4bits 0100  
                _lcd_puts 0240            _lcd_init_8bits 018D             __size_of_main 006E  
           __size_of_init 0027             __size_of_itoa 0026             __size_of_utoa 0072  
             ??_lcd_clear 0078             _lcd_delay_2ms 03CC             _lcd_delay_1us 03E2  
         ?_lcd_delay_40ms 0070           ?_lcd_delay_40us 0070                _INTCONbits 000B  
  __end_of_lcd_byte_4bits 033E    __end_of_lcd_byte_8bits 03CC    __end_of_lcd_init_4bits 0149  
                itoa@base 002B    __end_of_lcd_init_8bits 01CB                  intlevel1 0000  
 __end_of_lcd_send_nibble 029D          ___lwmod@dividend 0074                 stringcode 030A  
             amost1@value 0073            ?_lcd_delay_2ms 0070            ?_lcd_delay_1us 0070  
                utoa@base 0022                _OPTION_REG 0081           ___lwmod@divisor 0072  
         ___lwmod@counter 0077           ?_lcd_byte_4bits 0070           ?_lcd_byte_8bits 0070  
                stringdir 030A                  stringtab 0300           ?_lcd_init_4bits 0070  
         ?_lcd_init_8bits 0070             ?_lcd_en_pulse 0070  
