

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Jan 28 17:24:14 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2
    31                           	psect	text21,local,class=CODE,merge=1,delta=2
    32                           	psect	intentry,global,class=CODE,delta=2
    33                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    34                           	dabs	1,0x7E,2
    35  0000                     
    36                           ; Version 2.20
    37                           ; Generated 12/02/2020 GMT
    38                           ; 
    39                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC16F877A Definitions
    68                           ; 
    69                           ; SFR Addresses
    70  0000                     	;# 
    71  0001                     	;# 
    72  0002                     	;# 
    73  0003                     	;# 
    74  0004                     	;# 
    75  0005                     	;# 
    76  0006                     	;# 
    77  0007                     	;# 
    78  0008                     	;# 
    79  0009                     	;# 
    80  000A                     	;# 
    81  000B                     	;# 
    82  000C                     	;# 
    83  000D                     	;# 
    84  000E                     	;# 
    85  000E                     	;# 
    86  000F                     	;# 
    87  0010                     	;# 
    88  0011                     	;# 
    89  0012                     	;# 
    90  0013                     	;# 
    91  0014                     	;# 
    92  0015                     	;# 
    93  0015                     	;# 
    94  0016                     	;# 
    95  0017                     	;# 
    96  0018                     	;# 
    97  0019                     	;# 
    98  001A                     	;# 
    99  001B                     	;# 
   100  001B                     	;# 
   101  001C                     	;# 
   102  001D                     	;# 
   103  001E                     	;# 
   104  001F                     	;# 
   105  0081                     	;# 
   106  0085                     	;# 
   107  0086                     	;# 
   108  0087                     	;# 
   109  0088                     	;# 
   110  0089                     	;# 
   111  008C                     	;# 
   112  008D                     	;# 
   113  008E                     	;# 
   114  0091                     	;# 
   115  0092                     	;# 
   116  0093                     	;# 
   117  0094                     	;# 
   118  0098                     	;# 
   119  0099                     	;# 
   120  009C                     	;# 
   121  009D                     	;# 
   122  009E                     	;# 
   123  009F                     	;# 
   124  010C                     	;# 
   125  010D                     	;# 
   126  010E                     	;# 
   127  010F                     	;# 
   128  018C                     	;# 
   129  018D                     	;# 
   130  0000                     	;# 
   131  0001                     	;# 
   132  0002                     	;# 
   133  0003                     	;# 
   134  0004                     	;# 
   135  0005                     	;# 
   136  0006                     	;# 
   137  0007                     	;# 
   138  0008                     	;# 
   139  0009                     	;# 
   140  000A                     	;# 
   141  000B                     	;# 
   142  000C                     	;# 
   143  000D                     	;# 
   144  000E                     	;# 
   145  000E                     	;# 
   146  000F                     	;# 
   147  0010                     	;# 
   148  0011                     	;# 
   149  0012                     	;# 
   150  0013                     	;# 
   151  0014                     	;# 
   152  0015                     	;# 
   153  0015                     	;# 
   154  0016                     	;# 
   155  0017                     	;# 
   156  0018                     	;# 
   157  0019                     	;# 
   158  001A                     	;# 
   159  001B                     	;# 
   160  001B                     	;# 
   161  001C                     	;# 
   162  001D                     	;# 
   163  001E                     	;# 
   164  001F                     	;# 
   165  0081                     	;# 
   166  0085                     	;# 
   167  0086                     	;# 
   168  0087                     	;# 
   169  0088                     	;# 
   170  0089                     	;# 
   171  008C                     	;# 
   172  008D                     	;# 
   173  008E                     	;# 
   174  0091                     	;# 
   175  0092                     	;# 
   176  0093                     	;# 
   177  0094                     	;# 
   178  0098                     	;# 
   179  0099                     	;# 
   180  009C                     	;# 
   181  009D                     	;# 
   182  009E                     	;# 
   183  009F                     	;# 
   184  010C                     	;# 
   185  010D                     	;# 
   186  010E                     	;# 
   187  010F                     	;# 
   188  018C                     	;# 
   189  018D                     	;# 
   190  0000                     	;# 
   191  0001                     	;# 
   192  0002                     	;# 
   193  0003                     	;# 
   194  0004                     	;# 
   195  0005                     	;# 
   196  0006                     	;# 
   197  0007                     	;# 
   198  0008                     	;# 
   199  0009                     	;# 
   200  000A                     	;# 
   201  000B                     	;# 
   202  000C                     	;# 
   203  000D                     	;# 
   204  000E                     	;# 
   205  000E                     	;# 
   206  000F                     	;# 
   207  0010                     	;# 
   208  0011                     	;# 
   209  0012                     	;# 
   210  0013                     	;# 
   211  0014                     	;# 
   212  0015                     	;# 
   213  0015                     	;# 
   214  0016                     	;# 
   215  0017                     	;# 
   216  0018                     	;# 
   217  0019                     	;# 
   218  001A                     	;# 
   219  001B                     	;# 
   220  001B                     	;# 
   221  001C                     	;# 
   222  001D                     	;# 
   223  001E                     	;# 
   224  001F                     	;# 
   225  0081                     	;# 
   226  0085                     	;# 
   227  0086                     	;# 
   228  0087                     	;# 
   229  0088                     	;# 
   230  0089                     	;# 
   231  008C                     	;# 
   232  008D                     	;# 
   233  008E                     	;# 
   234  0091                     	;# 
   235  0092                     	;# 
   236  0093                     	;# 
   237  0094                     	;# 
   238  0098                     	;# 
   239  0099                     	;# 
   240  009C                     	;# 
   241  009D                     	;# 
   242  009E                     	;# 
   243  009F                     	;# 
   244  010C                     	;# 
   245  010D                     	;# 
   246  010E                     	;# 
   247  010F                     	;# 
   248  018C                     	;# 
   249  018D                     	;# 
   250  0009                     _PORTEbits	set	9
   251  001F                     _ADCON0	set	31
   252  000B                     _INTCON	set	11
   253  0008                     _PORTD	set	8
   254  0009                     _PORTE	set	9
   255  0007                     _PORTC	set	7
   256  0006                     _PORTB	set	6
   257  0005                     _PORTA	set	5
   258  0007                     _PORTCbits	set	7
   259  001E                     _ADRESH	set	30
   260  001F                     _ADCON0bits	set	31
   261  0006                     _PORTBbits	set	6
   262  000B                     _INTCONbits	set	11
   263  009F                     _ADCON1	set	159
   264  009C                     _CMCON	set	156
   265  0081                     _OPTION_REG	set	129
   266  0089                     _TRISE	set	137
   267  0087                     _TRISC	set	135
   268  0086                     _TRISB	set	134
   269  0085                     _TRISA	set	133
   270  0088                     _TRISD	set	136
   271  009E                     _ADRESL	set	158
   272                           
   273                           	psect	strings
   274  0280                     __pstrings:
   275  0280                     stringtab:
   276  0280                     __stringtab:
   277                           
   278                           ;	String table - string pointers are 1 byte each
   279  0280  1BFF               	btfsc	btemp+1,7
   280  0281  2A8A               	ljmp	stringcode
   281  0282  1383               	bcf	3,7
   282  0283  187F               	btfsc	btemp+1,0
   283  0284  1783               	bsf	3,7
   284  0285  0800               	movf	0,w
   285  0286  0A84               	incf	4,f
   286  0287  1903               	skipnz
   287  0288  0AFF               	incf	btemp+1,f
   288  0289  0008               	return
   289  028A                     stringcode:
   290  028A                     stringdir:
   291  028A  3002               	movlw	high stringdir
   292  028B  008A               	movwf	10
   293  028C  0804               	movf	4,w
   294  028D  0A84               	incf	4,f
   295  028E  0782               	addwf	2,f
   296  028F                     __stringbase:
   297  028F  3400               	retlw	0
   298  0290                     __end_of__stringtab:
   299  0290                     STR_1:
   300  0290  3420               	retlw	32	;' '
   301  0291  3420               	retlw	32	;' '
   302  0292  3420               	retlw	32	;' '
   303  0293  3420               	retlw	32	;' '
   304  0294  344B               	retlw	75	;'K'
   305  0295  3445               	retlw	69	;'E'
   306  0296  3459               	retlw	89	;'Y'
   307  0297  3450               	retlw	80	;'P'
   308  0298  3441               	retlw	65	;'A'
   309  0299  3444               	retlw	68	;'D'
   310  029A  3420               	retlw	32	;' '
   311  029B  3420               	retlw	32	;' '
   312  029C  3420               	retlw	32	;' '
   313  029D  3420               	retlw	32	;' '
   314  029E  3400               	retlw	0
   315                           
   316                           	psect	cinit
   317  000F                     start_initialization:	
   318                           ; #config settings
   319                           
   320  000F                     __initialization:
   321                           
   322                           ; Clear objects allocated to COMMON
   323  000F  01FA               	clrf	__pbssCOMMON& (0+127)
   324  0010  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   325                           
   326                           ; Clear objects allocated to BANK0
   327  0011  1283               	bcf	3,5	;RP0=0, select bank0
   328  0012  1303               	bcf	3,6	;RP1=0, select bank0
   329  0013  01AA               	clrf	__pbssBANK0& (0+127)
   330  0014  01AB               	clrf	(__pbssBANK0+1)& (0+127)
   331  0015  01AC               	clrf	(__pbssBANK0+2)& (0+127)
   332  0016  01AD               	clrf	(__pbssBANK0+3)& (0+127)
   333  0017  01AE               	clrf	(__pbssBANK0+4)& (0+127)
   334  0018  01AF               	clrf	(__pbssBANK0+5)& (0+127)
   335  0019  01B0               	clrf	(__pbssBANK0+6)& (0+127)
   336  001A  01B1               	clrf	(__pbssBANK0+7)& (0+127)
   337  001B  01B2               	clrf	(__pbssBANK0+8)& (0+127)
   338  001C                     end_of_initialization:	
   339                           ;End of C runtime variable initialization code
   340                           
   341  001C                     __end_of__initialization:
   342  001C  0183               	clrf	3
   343  001D  120A  118A  2820   	ljmp	_main	;jump to C main() function
   344                           
   345                           	psect	bssCOMMON
   346  007A                     __pbssCOMMON:
   347  007A                     _ad_value:
   348  007A                     	ds	2
   349                           
   350                           	psect	bssBANK0
   351  002A                     __pbssBANK0:
   352  002A                     _var7:
   353  002A                     	ds	1
   354  002B                     _var6:
   355  002B                     	ds	1
   356  002C                     _var5:
   357  002C                     	ds	1
   358  002D                     _var4:
   359  002D                     	ds	1
   360  002E                     _ad_char_val:
   361  002E                     	ds	5
   362                           
   363                           	psect	cstackCOMMON
   364  0070                     __pcstackCOMMON:
   365  0070                     ?_lcd_init:
   366  0070                     ?_lcd_clear:	
   367                           ; 1 bytes @ 0x0
   368                           
   369  0070                     ?_myIsr:	
   370                           ; 1 bytes @ 0x0
   371                           
   372  0070                     ??_myIsr:	
   373                           ; 1 bytes @ 0x0
   374                           
   375  0070                     ?_amost1:	
   376                           ; 1 bytes @ 0x0
   377                           
   378  0070                     ?_keypad2_scan:	
   379                           ; 1 bytes @ 0x0
   380                           
   381  0070                     ?_init:	
   382                           ; 1 bytes @ 0x0
   383                           
   384  0070                     ?_main:	
   385                           ; 1 bytes @ 0x0
   386                           
   387  0070                     ?_lcd_delay_1us:	
   388                           ; 1 bytes @ 0x0
   389                           
   390  0070                     ?_lcd_delay_40us:	
   391                           ; 1 bytes @ 0x0
   392                           
   393  0070                     ?_lcd_delay_2ms:	
   394                           ; 1 bytes @ 0x0
   395                           
   396  0070                     ?_lcd_delay_40ms:	
   397                           ; 1 bytes @ 0x0
   398                           
   399  0070                     ?_lcd_en_pulse:	
   400                           ; 1 bytes @ 0x0
   401                           
   402  0070                     ?_lcd_send_nibble:	
   403                           ; 1 bytes @ 0x0
   404                           
   405  0070                     ?_lcd_byte_4bits:	
   406                           ; 1 bytes @ 0x0
   407                           
   408  0070                     ?_lcd_byte_8bits:	
   409                           ; 1 bytes @ 0x0
   410                           
   411  0070                     ?_lcd_cmd:	
   412                           ; 1 bytes @ 0x0
   413                           
   414  0070                     ?_lcd_char:	
   415                           ; 1 bytes @ 0x0
   416                           
   417  0070                     ?_lcd_init_8bits:	
   418                           ; 1 bytes @ 0x0
   419                           
   420  0070                     ?_lcd_init_4bits:	
   421                           ; 1 bytes @ 0x0
   422                           
   423                           
   424                           ; 1 bytes @ 0x0
   425  0070                     	ds	2
   426  0072                     ??_amost1:
   427  0072                     ?_keypad1_scan:	
   428                           ; 1 bytes @ 0x2
   429                           
   430  0072                     ??_keypad2_scan:	
   431                           ; 1 bytes @ 0x2
   432                           
   433  0072                     ??_init:	
   434                           ; 1 bytes @ 0x2
   435                           
   436  0072                     ??_lcd_delay_1us:	
   437                           ; 1 bytes @ 0x2
   438                           
   439  0072                     ??_lcd_delay_40us:	
   440                           ; 1 bytes @ 0x2
   441                           
   442  0072                     ??_lcd_delay_2ms:	
   443                           ; 1 bytes @ 0x2
   444                           
   445  0072                     ??_lcd_delay_40ms:	
   446                           ; 1 bytes @ 0x2
   447                           
   448  0072                     ??_lcd_en_pulse:	
   449                           ; 1 bytes @ 0x2
   450                           
   451  0072                     ??_lcd_send_nibble:	
   452                           ; 1 bytes @ 0x2
   453                           
   454  0072                     ??_lcd_byte_8bits:	
   455                           ; 1 bytes @ 0x2
   456                           
   457  0072                     lcd_send_nibble@data:	
   458                           ; 1 bytes @ 0x2
   459                           
   460  0072                     lcd_byte_8bits@data:	
   461                           ; 1 bytes @ 0x2
   462                           
   463  0072                     keypad1_scan@value:	
   464                           ; 1 bytes @ 0x2
   465                           
   466                           
   467                           ; 2 bytes @ 0x2
   468  0072                     	ds	1
   469  0073                     ??_lcd_byte_4bits:
   470  0073                     amost1@value:	
   471                           ; 1 bytes @ 0x3
   472                           
   473                           
   474                           ; 1 bytes @ 0x3
   475  0073                     	ds	1
   476  0074                     ??_keypad1_scan:
   477                           
   478                           ; 1 bytes @ 0x4
   479  0074                     	ds	1
   480  0075                     lcd_byte_4bits@data:
   481                           
   482                           ; 1 bytes @ 0x5
   483  0075                     	ds	1
   484  0076                     lcd_byte_4bits@nibble:
   485                           
   486                           ; 1 bytes @ 0x6
   487  0076                     	ds	1
   488  0077                     ??_lcd_cmd:
   489  0077                     ??_lcd_char:	
   490                           ; 1 bytes @ 0x7
   491                           
   492  0077                     lcd_cmd@data:	
   493                           ; 1 bytes @ 0x7
   494                           
   495  0077                     lcd_char@data:	
   496                           ; 1 bytes @ 0x7
   497                           
   498                           
   499                           ; 1 bytes @ 0x7
   500  0077                     	ds	1
   501  0078                     ??_lcd_init:
   502  0078                     ?_lcd_goto:	
   503                           ; 1 bytes @ 0x8
   504                           
   505  0078                     ??_lcd_clear:	
   506                           ; 1 bytes @ 0x8
   507                           
   508  0078                     ??_lcd_init_8bits:	
   509                           ; 1 bytes @ 0x8
   510                           
   511  0078                     ??_lcd_init_4bits:	
   512                           ; 1 bytes @ 0x8
   513                           
   514  0078                     lcd_puts@x:	
   515                           ; 1 bytes @ 0x8
   516                           
   517  0078                     lcd_goto@col:	
   518                           ; 1 bytes @ 0x8
   519                           
   520                           
   521                           ; 1 bytes @ 0x8
   522  0078                     	ds	1
   523  0079                     lcd_puts@cnt:
   524  0079                     lcd_goto@lin:	
   525                           ; 1 bytes @ 0x9
   526                           
   527                           
   528                           ; 1 bytes @ 0x9
   529  0079                     	ds	1
   530                           
   531                           	psect	cstackBANK0
   532  0020                     __pcstackBANK0:
   533  0020                     ??_lcd_goto:
   534  0020                     ?_lcd_puts:	
   535                           ; 1 bytes @ 0x0
   536                           
   537  0020                     lcd_puts@vector:	
   538                           ; 1 bytes @ 0x0
   539                           
   540                           
   541                           ; 2 bytes @ 0x0
   542  0020                     	ds	2
   543  0022                     lcd_puts@LENGHT:
   544                           
   545                           ; 1 bytes @ 0x2
   546  0022                     	ds	1
   547  0023                     ??_lcd_puts:
   548                           
   549                           ; 1 bytes @ 0x3
   550  0023                     	ds	4
   551  0027                     ??_main:
   552                           
   553                           ; 1 bytes @ 0x7
   554  0027                     	ds	3
   555                           
   556                           	psect	maintext
   557  0020                     __pmaintext:	
   558 ;;
   559 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   560 ;;
   561 ;; *************** function _main *****************
   562 ;; Defined at:
   563 ;;		line 174 in file "main.c"
   564 ;; Parameters:    Size  Location     Type
   565 ;;		None
   566 ;; Auto vars:     Size  Location     Type
   567 ;;		None
   568 ;; Return value:  Size  Location     Type
   569 ;;                  1    wreg      void 
   570 ;; Registers used:
   571 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   572 ;; Tracked objects:
   573 ;;		On entry : B00/0
   574 ;;		On exit  : 0/0
   575 ;;		Unchanged: 0/0
   576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   577 ;;      Params:         0       0       0       0       0
   578 ;;      Locals:         0       0       0       0       0
   579 ;;      Temps:          0       3       0       0       0
   580 ;;      Totals:         0       3       0       0       0
   581 ;;Total ram usage:        3 bytes
   582 ;; Hardware stack levels required when called: 9
   583 ;; This function calls:
   584 ;;		_amost1
   585 ;;		_init
   586 ;;		_keypad1_scan
   587 ;;		_keypad2_scan
   588 ;;		_lcd_goto
   589 ;;		_lcd_init
   590 ;;		_lcd_puts
   591 ;; This function is called by:
   592 ;;		Startup code after reset
   593 ;; This function uses a non-reentrant model
   594 ;;
   595                           
   596                           
   597                           ;psect for function _main
   598  0020                     _main:
   599  0020                     l1736:	
   600                           ;incstack = 0
   601 ;; hardware stack exceeded
   602                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   603                           
   604                           
   605                           ;main.c: 177:     INTCONbits.GIE = 0;
   606  0020  138B               	bcf	11,7	;volatile
   607  0021                     l1738:
   608                           
   609                           ;main.c: 180:     init();
   610  0021  120A  118A  2258  120A  118A  	fcall	_init
   611  0026                     l1740:
   612                           
   613                           ;main.c: 183:     INTCONbits.GIE = 1;
   614  0026  178B               	bsf	11,7	;volatile
   615                           
   616                           ;main.c: 186:     lcd_init();
   617  0027  120A  118A  2356  120A  118A  	fcall	_lcd_init
   618  002C                     l1742:
   619                           
   620                           ;main.c: 189:     lcd_goto(1,1);
   621  002C  01F8               	clrf	lcd_goto@col
   622  002D  0AF8               	incf	lcd_goto@col,f
   623  002E  3001               	movlw	1
   624  002F  120A  118A  21C0  120A  118A  	fcall	_lcd_goto
   625  0034                     l1744:
   626                           
   627                           ;main.c: 190:     lcd_puts("    KEYPAD    ",16);
   628  0034  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   629  0035  1283               	bcf	3,5	;RP0=0, select bank0
   630  0036  1303               	bcf	3,6	;RP1=0, select bank0
   631  0037  00A0               	movwf	lcd_puts@vector
   632  0038  3080               	movlw	128
   633  0039  00A1               	movwf	lcd_puts@vector+1
   634  003A  3010               	movlw	16
   635  003B  00A7               	movwf	??_main
   636  003C  0827               	movf	??_main,w
   637  003D  00A2               	movwf	lcd_puts@LENGHT
   638  003E  120A  118A  21FB  120A  118A  	fcall	_lcd_puts
   639  0043                     l1746:
   640                           
   641                           ;main.c: 194:     {;main.c: 196:         amost1(&ad_value);
   642  0043  307A               	movlw	(low (_ad_value| 0))& (0+255)
   643  0044  120A  118A  22DD  120A  118A  	fcall	_amost1
   644  0049                     l1748:
   645                           
   646                           ;main.c: 198:         ad_char_val[0] = keypad1_scan(ad_value);
   647  0049  087B               	movf	_ad_value+1,w	;volatile
   648  004A  00F3               	movwf	keypad1_scan@value+1
   649  004B  087A               	movf	_ad_value,w	;volatile
   650  004C  00F2               	movwf	keypad1_scan@value
   651  004D  120A  118A  208E  120A  118A  	fcall	_keypad1_scan
   652  0052  1283               	bcf	3,5	;RP0=0, select bank0
   653  0053  1303               	bcf	3,6	;RP1=0, select bank0
   654  0054  00A7               	movwf	??_main
   655  0055  0827               	movf	??_main,w
   656  0056  00AE               	movwf	_ad_char_val
   657  0057                     l1750:
   658                           
   659                           ;main.c: 200:         if (ad_char_val[0] == ' ')
   660  0057  3020               	movlw	32
   661  0058  062E               	xorwf	_ad_char_val,w
   662  0059  1D03               	btfss	3,2
   663  005A  285C               	goto	u551
   664  005B  285D               	goto	u550
   665  005C                     u551:
   666  005C  2867               	goto	l1754
   667  005D                     u550:
   668  005D                     l1752:
   669                           
   670                           ;main.c: 201:         {;main.c: 203:             ad_char_val[0] = keypad2_scan();
   671  005D  120A  118A  20E4  120A  118A  	fcall	_keypad2_scan
   672  0062  1283               	bcf	3,5	;RP0=0, select bank0
   673  0063  1303               	bcf	3,6	;RP1=0, select bank0
   674  0064  00A7               	movwf	??_main
   675  0065  0827               	movf	??_main,w
   676  0066  00AE               	movwf	_ad_char_val
   677  0067                     l1754:
   678                           
   679                           ;main.c: 206:         lcd_goto(2,1);
   680  0067  01F8               	clrf	lcd_goto@col
   681  0068  0AF8               	incf	lcd_goto@col,f
   682  0069  3002               	movlw	2
   683  006A  120A  118A  21C0  120A  118A  	fcall	_lcd_goto
   684  006F                     l1756:
   685                           
   686                           ;main.c: 207:         lcd_puts(ad_char_val,1);
   687  006F  302E               	movlw	(low (_ad_char_val| 0))& (0+255)
   688  0070  1283               	bcf	3,5	;RP0=0, select bank0
   689  0071  1303               	bcf	3,6	;RP1=0, select bank0
   690  0072  00A0               	movwf	lcd_puts@vector
   691  0073  3000               	movlw	0
   692  0074  00A1               	movwf	lcd_puts@vector+1
   693  0075  01A2               	clrf	lcd_puts@LENGHT
   694  0076  0AA2               	incf	lcd_puts@LENGHT,f
   695  0077  120A  118A  21FB  120A  118A  	fcall	_lcd_puts
   696  007C                     l1758:
   697                           
   698                           ;main.c: 209:         _delay((unsigned long)((200)*(20000000/4000.0)));
   699  007C  3006               	movlw	6
   700  007D  1283               	bcf	3,5	;RP0=0, select bank0
   701  007E  1303               	bcf	3,6	;RP1=0, select bank0
   702  007F  00A9               	movwf	??_main+2
   703  0080  3013               	movlw	19
   704  0081  00A8               	movwf	??_main+1
   705  0082  30AD               	movlw	173
   706  0083  00A7               	movwf	??_main
   707  0084                     u567:
   708  0084  0BA7               	decfsz	??_main,f
   709  0085  2884               	goto	u567
   710  0086  0BA8               	decfsz	??_main+1,f
   711  0087  2884               	goto	u567
   712  0088  0BA9               	decfsz	??_main+2,f
   713  0089  2884               	goto	u567
   714  008A  2843               	goto	l1746
   715  008B  120A  118A  280C   	ljmp	start
   716  008E                     __end_of_main:
   717                           
   718                           	psect	text1
   719  01FB                     __ptext1:	
   720 ;; *************** function _lcd_puts *****************
   721 ;; Defined at:
   722 ;;		line 130 in file "lcd.c"
   723 ;; Parameters:    Size  Location     Type
   724 ;;  vector          2    0[BANK0 ] PTR unsigned char 
   725 ;;		 -> ad_char_val(5), STR_1(15), 
   726 ;;  LENGHT          1    2[BANK0 ] unsigned char 
   727 ;; Auto vars:     Size  Location     Type
   728 ;;  cnt             1    9[COMMON] unsigned char 
   729 ;;  x               1    8[COMMON] unsigned char 
   730 ;; Return value:  Size  Location     Type
   731 ;;                  1    wreg      void 
   732 ;; Registers used:
   733 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   734 ;; Tracked objects:
   735 ;;		On entry : 0/0
   736 ;;		On exit  : 0/0
   737 ;;		Unchanged: 0/0
   738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   739 ;;      Params:         0       3       0       0       0
   740 ;;      Locals:         2       0       0       0       0
   741 ;;      Temps:          0       4       0       0       0
   742 ;;      Totals:         2       7       0       0       0
   743 ;;Total ram usage:        9 bytes
   744 ;; Hardware stack levels used: 1
   745 ;; Hardware stack levels required when called: 6
   746 ;; This function calls:
   747 ;;		_lcd_char
   748 ;; This function is called by:
   749 ;;		_main
   750 ;; This function uses a non-reentrant model
   751 ;;
   752                           
   753                           
   754                           ;psect for function _lcd_puts
   755  01FB                     _lcd_puts:
   756  01FB                     l1724:	
   757                           ;incstack = 0
   758                           ; Regs used in _lcd_puts: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   759                           
   760                           
   761                           ;lcd.c: 130: void lcd_puts(unsigned char *vector, unsigned char LENGHT);lcd.c: 131: {;lc
      +                          d.c: 132:  unsigned char cnt;;lcd.c: 133:  unsigned char x;;lcd.c: 135:  PORTEbits.RE0 =
      +                           1;
   762  01FB  1283               	bcf	3,5	;RP0=0, select bank0
   763  01FC  1303               	bcf	3,6	;RP1=0, select bank0
   764  01FD  1409               	bsf	9,0	;volatile
   765  01FE                     l1726:
   766                           
   767                           ;lcd.c: 137:  for (cnt=0; cnt<LENGHT; cnt++)
   768  01FE  01F9               	clrf	lcd_puts@cnt
   769  01FF  2A26               	goto	l1734
   770  0200                     l1728:
   771                           
   772                           ;lcd.c: 138:  {;lcd.c: 139:         x = *(vector+cnt);
   773  0200  0879               	movf	lcd_puts@cnt,w
   774  0201  0720               	addwf	lcd_puts@vector,w
   775  0202  00A4               	movwf	??_lcd_puts+1
   776  0203  0821               	movf	lcd_puts@vector+1,w
   777  0204  00A3               	movwf	??_lcd_puts
   778  0205  1803               	skipnc
   779  0206  0AA3               	incf	??_lcd_puts,f
   780  0207  1FF9               	btfss	lcd_puts@cnt,7
   781  0208  2A0A               	goto	u530
   782  0209  03A3               	decf	??_lcd_puts,f
   783  020A                     u530:
   784  020A  1283               	bcf	3,5	;RP0=0, select bank0
   785  020B  1303               	bcf	3,6	;RP1=0, select bank0
   786  020C  0823               	movf	??_lcd_puts,w
   787  020D  00A5               	movwf	??_lcd_puts+2
   788  020E  0825               	movf	??_lcd_puts+2,w
   789  020F  00FF               	movwf	btemp+1
   790  0210  0824               	movf	??_lcd_puts+1,w
   791  0211  0084               	movwf	4
   792  0212  120A  118A  2280  120A  118A  	fcall	stringtab
   793  0217  00A6               	movwf	??_lcd_puts+3
   794  0218  0826               	movf	??_lcd_puts+3,w
   795  0219  00F8               	movwf	lcd_puts@x
   796  021A                     l1730:
   797                           
   798                           ;lcd.c: 140:         lcd_char(x);
   799  021A  0878               	movf	lcd_puts@x,w
   800  021B  120A  118A  2307  120A  118A  	fcall	_lcd_char
   801  0220                     l1732:
   802                           
   803                           ;lcd.c: 141:  }
   804  0220  3001               	movlw	1
   805  0221  1283               	bcf	3,5	;RP0=0, select bank0
   806  0222  1303               	bcf	3,6	;RP1=0, select bank0
   807  0223  00A3               	movwf	??_lcd_puts
   808  0224  0823               	movf	??_lcd_puts,w
   809  0225  07F9               	addwf	lcd_puts@cnt,f
   810  0226                     l1734:
   811  0226  0822               	movf	lcd_puts@LENGHT,w
   812  0227  0279               	subwf	lcd_puts@cnt,w
   813  0228  1C03               	skipc
   814  0229  2A2B               	goto	u541
   815  022A  2A2C               	goto	u540
   816  022B                     u541:
   817  022B  2A00               	goto	l1728
   818  022C                     u540:
   819  022C                     l194:
   820  022C  0008               	return
   821  022D                     __end_of_lcd_puts:
   822                           
   823                           	psect	text2
   824  0307                     __ptext2:	
   825 ;; *************** function _lcd_char *****************
   826 ;; Defined at:
   827 ;;		line 118 in file "lcd.c"
   828 ;; Parameters:    Size  Location     Type
   829 ;;  data            1    wreg     unsigned char 
   830 ;; Auto vars:     Size  Location     Type
   831 ;;  data            1    7[COMMON] unsigned char 
   832 ;; Return value:  Size  Location     Type
   833 ;;                  1    wreg      void 
   834 ;; Registers used:
   835 ;;		wreg, status,2, status,0, pclath, cstack
   836 ;; Tracked objects:
   837 ;;		On entry : 0/0
   838 ;;		On exit  : 0/0
   839 ;;		Unchanged: 0/0
   840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   841 ;;      Params:         0       0       0       0       0
   842 ;;      Locals:         1       0       0       0       0
   843 ;;      Temps:          0       0       0       0       0
   844 ;;      Totals:         1       0       0       0       0
   845 ;;Total ram usage:        1 bytes
   846 ;; Hardware stack levels used: 1
   847 ;; Hardware stack levels required when called: 5
   848 ;; This function calls:
   849 ;;		_lcd_byte_4bits
   850 ;;		_lcd_byte_8bits
   851 ;;		_lcd_delay_40us
   852 ;; This function is called by:
   853 ;;		_lcd_puts
   854 ;; This function uses a non-reentrant model
   855 ;;
   856                           
   857                           
   858                           ;psect for function _lcd_char
   859  0307                     _lcd_char:
   860                           
   861                           ;incstack = 0
   862                           ; Regs used in _lcd_char: [wreg+status,2+status,0+pclath+cstack]
   863                           ;lcd_char@data stored from wreg
   864  0307  00F7               	movwf	lcd_char@data
   865  0308                     l1692:
   866                           
   867                           ;lcd.c: 122:     if (8 == 8)
   868  0308  1283               	bcf	3,5	;RP0=0, select bank0
   869  0309  1303               	bcf	3,6	;RP1=0, select bank0
   870  030A  1409               	bsf	9,0	;volatile
   871  030B                     l1694:
   872                           
   873                           ;lcd.c: 123:         lcd_byte_8bits(data);
   874  030B  0877               	movf	lcd_char@data,w
   875  030C  120A  118A  2341  120A  118A  	fcall	_lcd_byte_8bits
   876  0311                     l187:
   877                           
   878                           ;lcd.c: 127:     lcd_delay_40us();
   879  0311  120A  118A  235C  120A  118A  	fcall	_lcd_delay_40us
   880  0316                     l188:
   881  0316  0008               	return
   882  0317                     __end_of_lcd_char:
   883                           
   884                           	psect	text3
   885  0356                     __ptext3:	
   886 ;; *************** function _lcd_init *****************
   887 ;; Defined at:
   888 ;;		line 183 in file "lcd.c"
   889 ;; Parameters:    Size  Location     Type
   890 ;;		None
   891 ;; Auto vars:     Size  Location     Type
   892 ;;		None
   893 ;; Return value:  Size  Location     Type
   894 ;;                  1    wreg      void 
   895 ;; Registers used:
   896 ;;		wreg, status,2, status,0, pclath, cstack
   897 ;; Tracked objects:
   898 ;;		On entry : 0/0
   899 ;;		On exit  : 0/0
   900 ;;		Unchanged: 0/0
   901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   902 ;;      Params:         0       0       0       0       0
   903 ;;      Locals:         0       0       0       0       0
   904 ;;      Temps:          0       0       0       0       0
   905 ;;      Totals:         0       0       0       0       0
   906 ;;Total ram usage:        0 bytes
   907 ;; Hardware stack levels used: 1
   908 ;; Hardware stack levels required when called: 8
   909 ;; This function calls:
   910 ;;		_lcd_init_4bits
   911 ;;		_lcd_init_8bits
   912 ;; This function is called by:
   913 ;;		_main
   914 ;; This function uses a non-reentrant model
   915 ;;
   916                           
   917                           
   918                           ;psect for function _lcd_init
   919  0356                     _lcd_init:
   920  0356                     l1702:	
   921                           ;incstack = 0
   922 ;; hardware stack exceeded
   923                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
   924                           
   925                           
   926                           ;lcd.c: 186:         lcd_init_8bits();
   927  0356  120A  118A  2182  120A  118A  	fcall	_lcd_init_8bits
   928  035B                     l205:
   929  035B  0008               	return
   930  035C                     __end_of_lcd_init:
   931                           
   932                           	psect	text4
   933  0182                     __ptext4:	
   934 ;; *************** function _lcd_init_8bits *****************
   935 ;; Defined at:
   936 ;;		line 144 in file "lcd.c"
   937 ;; Parameters:    Size  Location     Type
   938 ;;		None
   939 ;; Auto vars:     Size  Location     Type
   940 ;;		None
   941 ;; Return value:  Size  Location     Type
   942 ;;                  1    wreg      void 
   943 ;; Registers used:
   944 ;;		wreg, status,2, status,0, pclath, cstack
   945 ;; Tracked objects:
   946 ;;		On entry : 0/0
   947 ;;		On exit  : 0/0
   948 ;;		Unchanged: 0/0
   949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   950 ;;      Params:         0       0       0       0       0
   951 ;;      Locals:         0       0       0       0       0
   952 ;;      Temps:          0       0       0       0       0
   953 ;;      Totals:         0       0       0       0       0
   954 ;;Total ram usage:        0 bytes
   955 ;; Hardware stack levels used: 1
   956 ;; Hardware stack levels required when called: 7
   957 ;; This function calls:
   958 ;;		_lcd_clear
   959 ;;		_lcd_cmd
   960 ;;		_lcd_delay_2ms
   961 ;;		_lcd_delay_40ms
   962 ;; This function is called by:
   963 ;;		_lcd_init
   964 ;; This function uses a non-reentrant model
   965 ;;
   966                           
   967                           
   968                           ;psect for function _lcd_init_8bits
   969  0182                     _lcd_init_8bits:
   970  0182                     l1698:	
   971                           ;incstack = 0
   972 ;; hardware stack exceeded
   973                           ; Regs used in _lcd_init_8bits: [wreg+status,2+status,0+pclath+cstack]
   974                           
   975                           
   976                           ;lcd.c: 147:     lcd_delay_40ms();
   977  0182  120A  118A  2327  120A  118A  	fcall	_lcd_delay_40ms
   978                           
   979                           ;lcd.c: 149:  lcd_cmd(0x30);
   980  0187  3030               	movlw	48
   981  0188  120A  118A  2317  120A  118A  	fcall	_lcd_cmd
   982                           
   983                           ;lcd.c: 150:     lcd_delay_2ms();
   984  018D  120A  118A  234C  120A  118A  	fcall	_lcd_delay_2ms
   985                           
   986                           ;lcd.c: 151:  lcd_cmd(0x30);
   987  0192  3030               	movlw	48
   988  0193  120A  118A  2317  120A  118A  	fcall	_lcd_cmd
   989                           
   990                           ;lcd.c: 152:     lcd_delay_2ms();
   991  0198  120A  118A  234C  120A  118A  	fcall	_lcd_delay_2ms
   992                           
   993                           ;lcd.c: 153:  lcd_cmd(0x30);
   994  019D  3030               	movlw	48
   995  019E  120A  118A  2317  120A  118A  	fcall	_lcd_cmd
   996                           
   997                           ;lcd.c: 154:     lcd_delay_2ms();
   998  01A3  120A  118A  234C  120A  118A  	fcall	_lcd_delay_2ms
   999                           
  1000                           ;lcd.c: 156:  lcd_cmd(0x38);
  1001  01A8  3038               	movlw	56
  1002  01A9  120A  118A  2317  120A  118A  	fcall	_lcd_cmd
  1003                           
  1004                           ;lcd.c: 157:  lcd_cmd(0x06);
  1005  01AE  3006               	movlw	6
  1006  01AF  120A  118A  2317  120A  118A  	fcall	_lcd_cmd
  1007                           
  1008                           ;lcd.c: 158:  lcd_cmd(0x0E);
  1009  01B4  300E               	movlw	14
  1010  01B5  120A  118A  2317  120A  118A  	fcall	_lcd_cmd
  1011                           
  1012                           ;lcd.c: 159:     lcd_clear();
  1013  01BA  120A  118A  2335  120A  118A  	fcall	_lcd_clear
  1014  01BF                     l197:
  1015  01BF  0008               	return
  1016  01C0                     __end_of_lcd_init_8bits:
  1017                           
  1018                           	psect	text5
  1019  0139                     __ptext5:	
  1020 ;; *************** function _lcd_init_4bits *****************
  1021 ;; Defined at:
  1022 ;;		line 162 in file "lcd.c"
  1023 ;; Parameters:    Size  Location     Type
  1024 ;;		None
  1025 ;; Auto vars:     Size  Location     Type
  1026 ;;		None
  1027 ;; Return value:  Size  Location     Type
  1028 ;;                  1    wreg      void 
  1029 ;; Registers used:
  1030 ;;		wreg, status,2, status,0, pclath, cstack
  1031 ;; Tracked objects:
  1032 ;;		On entry : 0/0
  1033 ;;		On exit  : 0/0
  1034 ;;		Unchanged: 0/0
  1035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1036 ;;      Params:         0       0       0       0       0
  1037 ;;      Locals:         0       0       0       0       0
  1038 ;;      Temps:          0       0       0       0       0
  1039 ;;      Totals:         0       0       0       0       0
  1040 ;;Total ram usage:        0 bytes
  1041 ;; Hardware stack levels used: 1
  1042 ;; Hardware stack levels required when called: 7
  1043 ;; This function calls:
  1044 ;;		_lcd_clear
  1045 ;;		_lcd_cmd
  1046 ;;		_lcd_delay_2ms
  1047 ;;		_lcd_delay_40ms
  1048 ;;		_lcd_send_nibble
  1049 ;; This function is called by:
  1050 ;;		_lcd_init
  1051 ;; This function uses a non-reentrant model
  1052 ;;
  1053                           
  1054                           
  1055                           ;psect for function _lcd_init_4bits
  1056  0139                     _lcd_init_4bits:
  1057  0139                     l1700:	
  1058                           ;incstack = 0
  1059 ;; hardware stack exceeded
  1060                           ; Regs used in _lcd_init_4bits: [wreg+status,2+status,0+pclath+cstack]
  1061                           
  1062                           
  1063                           ;lcd.c: 165:     lcd_delay_40ms();
  1064  0139  120A  118A  2327  120A  118A  	fcall	_lcd_delay_40ms
  1065                           
  1066                           ;lcd.c: 167:     lcd_send_nibble(0x03);
  1067  013E  3003               	movlw	3
  1068  013F  120A  118A  222D  120A  118A  	fcall	_lcd_send_nibble
  1069                           
  1070                           ;lcd.c: 168:     lcd_delay_2ms();
  1071  0144  120A  118A  234C  120A  118A  	fcall	_lcd_delay_2ms
  1072                           
  1073                           ;lcd.c: 169:     lcd_send_nibble(0x03);
  1074  0149  3003               	movlw	3
  1075  014A  120A  118A  222D  120A  118A  	fcall	_lcd_send_nibble
  1076                           
  1077                           ;lcd.c: 170:     lcd_delay_2ms();
  1078  014F  120A  118A  234C  120A  118A  	fcall	_lcd_delay_2ms
  1079                           
  1080                           ;lcd.c: 171:     lcd_send_nibble(0x03);
  1081  0154  3003               	movlw	3
  1082  0155  120A  118A  222D  120A  118A  	fcall	_lcd_send_nibble
  1083                           
  1084                           ;lcd.c: 172:     lcd_delay_2ms();
  1085  015A  120A  118A  234C  120A  118A  	fcall	_lcd_delay_2ms
  1086                           
  1087                           ;lcd.c: 174:     lcd_send_nibble(0x02);
  1088  015F  3002               	movlw	2
  1089  0160  120A  118A  222D  120A  118A  	fcall	_lcd_send_nibble
  1090                           
  1091                           ;lcd.c: 175:     lcd_delay_2ms();
  1092  0165  120A  118A  234C  120A  118A  	fcall	_lcd_delay_2ms
  1093                           
  1094                           ;lcd.c: 177:  lcd_cmd(0x28);
  1095  016A  3028               	movlw	40
  1096  016B  120A  118A  2317  120A  118A  	fcall	_lcd_cmd
  1097                           
  1098                           ;lcd.c: 178:  lcd_cmd(0x06);
  1099  0170  3006               	movlw	6
  1100  0171  120A  118A  2317  120A  118A  	fcall	_lcd_cmd
  1101                           
  1102                           ;lcd.c: 179:  lcd_cmd(0x0E);
  1103  0176  300E               	movlw	14
  1104  0177  120A  118A  2317  120A  118A  	fcall	_lcd_cmd
  1105                           
  1106                           ;lcd.c: 180:     lcd_clear();
  1107  017C  120A  118A  2335  120A  118A  	fcall	_lcd_clear
  1108  0181                     l200:
  1109  0181  0008               	return
  1110  0182                     __end_of_lcd_init_4bits:
  1111                           
  1112                           	psect	text6
  1113  0327                     __ptext6:	
  1114 ;; *************** function _lcd_delay_40ms *****************
  1115 ;; Defined at:
  1116 ;;		line 62 in file "lcd.c"
  1117 ;; Parameters:    Size  Location     Type
  1118 ;;		None
  1119 ;; Auto vars:     Size  Location     Type
  1120 ;;		None
  1121 ;; Return value:  Size  Location     Type
  1122 ;;                  1    wreg      void 
  1123 ;; Registers used:
  1124 ;;		wreg
  1125 ;; Tracked objects:
  1126 ;;		On entry : 0/0
  1127 ;;		On exit  : 0/0
  1128 ;;		Unchanged: 0/0
  1129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1130 ;;      Params:         0       0       0       0       0
  1131 ;;      Locals:         0       0       0       0       0
  1132 ;;      Temps:          3       0       0       0       0
  1133 ;;      Totals:         3       0       0       0       0
  1134 ;;Total ram usage:        3 bytes
  1135 ;; Hardware stack levels used: 1
  1136 ;; Hardware stack levels required when called: 1
  1137 ;; This function calls:
  1138 ;;		Nothing
  1139 ;; This function is called by:
  1140 ;;		_lcd_init_8bits
  1141 ;;		_lcd_init_4bits
  1142 ;; This function uses a non-reentrant model
  1143 ;;
  1144                           
  1145                           
  1146                           ;psect for function _lcd_delay_40ms
  1147  0327                     _lcd_delay_40ms:
  1148  0327                     l1288:	
  1149                           ;incstack = 0
  1150                           ; Regs used in _lcd_delay_40ms: [wreg]
  1151                           
  1152  0327  3002               	movlw	2
  1153  0328  00F4               	movwf	??_lcd_delay_40ms+2
  1154  0329  3004               	movlw	4
  1155  032A  00F3               	movwf	??_lcd_delay_40ms+1
  1156  032B  30BA               	movlw	186
  1157  032C  00F2               	movwf	??_lcd_delay_40ms
  1158  032D                     u577:
  1159  032D  0BF2               	decfsz	??_lcd_delay_40ms,f
  1160  032E  2B2D               	goto	u577
  1161  032F  0BF3               	decfsz	??_lcd_delay_40ms+1,f
  1162  0330  2B2D               	goto	u577
  1163  0331  0BF4               	decfsz	??_lcd_delay_40ms+2,f
  1164  0332  2B2D               	goto	u577
  1165  0333  0000               	nop
  1166  0334                     l158:
  1167  0334  0008               	return
  1168  0335                     __end_of_lcd_delay_40ms:
  1169                           
  1170                           	psect	text7
  1171  0335                     __ptext7:	
  1172 ;; *************** function _lcd_clear *****************
  1173 ;; Defined at:
  1174 ;;		line 191 in file "lcd.c"
  1175 ;; Parameters:    Size  Location     Type
  1176 ;;		None
  1177 ;; Auto vars:     Size  Location     Type
  1178 ;;		None
  1179 ;; Return value:  Size  Location     Type
  1180 ;;                  1    wreg      void 
  1181 ;; Registers used:
  1182 ;;		wreg, status,2, status,0, pclath, cstack
  1183 ;; Tracked objects:
  1184 ;;		On entry : 0/0
  1185 ;;		On exit  : 0/0
  1186 ;;		Unchanged: 0/0
  1187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1188 ;;      Params:         0       0       0       0       0
  1189 ;;      Locals:         0       0       0       0       0
  1190 ;;      Temps:          0       0       0       0       0
  1191 ;;      Totals:         0       0       0       0       0
  1192 ;;Total ram usage:        0 bytes
  1193 ;; Hardware stack levels used: 1
  1194 ;; Hardware stack levels required when called: 6
  1195 ;; This function calls:
  1196 ;;		_lcd_cmd
  1197 ;;		_lcd_delay_2ms
  1198 ;; This function is called by:
  1199 ;;		_lcd_init_8bits
  1200 ;;		_lcd_init_4bits
  1201 ;;		_lcd_shutdown
  1202 ;; This function uses a non-reentrant model
  1203 ;;
  1204                           
  1205                           
  1206                           ;psect for function _lcd_clear
  1207  0335                     _lcd_clear:
  1208  0335                     l1690:	
  1209                           ;incstack = 0
  1210 ;; hardware stack exceeded
  1211                           ; Regs used in _lcd_clear: [wreg+status,2+status,0+pclath+cstack]
  1212                           
  1213                           
  1214                           ;lcd.c: 193:     lcd_cmd(0x01);
  1215  0335  3001               	movlw	1
  1216  0336  120A  118A  2317  120A  118A  	fcall	_lcd_cmd
  1217                           
  1218                           ;lcd.c: 194:     lcd_delay_2ms();
  1219  033B  120A  118A  234C  120A  118A  	fcall	_lcd_delay_2ms
  1220  0340                     l208:
  1221  0340  0008               	return
  1222  0341                     __end_of_lcd_clear:
  1223                           
  1224                           	psect	text8
  1225  034C                     __ptext8:	
  1226 ;; *************** function _lcd_delay_2ms *****************
  1227 ;; Defined at:
  1228 ;;		line 61 in file "lcd.c"
  1229 ;; Parameters:    Size  Location     Type
  1230 ;;		None
  1231 ;; Auto vars:     Size  Location     Type
  1232 ;;		None
  1233 ;; Return value:  Size  Location     Type
  1234 ;;                  1    wreg      void 
  1235 ;; Registers used:
  1236 ;;		wreg
  1237 ;; Tracked objects:
  1238 ;;		On entry : 0/0
  1239 ;;		On exit  : 0/0
  1240 ;;		Unchanged: 0/0
  1241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1242 ;;      Params:         0       0       0       0       0
  1243 ;;      Locals:         0       0       0       0       0
  1244 ;;      Temps:          2       0       0       0       0
  1245 ;;      Totals:         2       0       0       0       0
  1246 ;;Total ram usage:        2 bytes
  1247 ;; Hardware stack levels used: 1
  1248 ;; Hardware stack levels required when called: 1
  1249 ;; This function calls:
  1250 ;;		Nothing
  1251 ;; This function is called by:
  1252 ;;		_lcd_init_8bits
  1253 ;;		_lcd_init_4bits
  1254 ;;		_lcd_clear
  1255 ;; This function uses a non-reentrant model
  1256 ;;
  1257                           
  1258                           
  1259                           ;psect for function _lcd_delay_2ms
  1260  034C                     _lcd_delay_2ms:
  1261  034C                     l1280:	
  1262                           ;incstack = 0
  1263                           ; Regs used in _lcd_delay_2ms: [wreg]
  1264                           
  1265  034C  300D               	movlw	13
  1266  034D  00F3               	movwf	??_lcd_delay_2ms+1
  1267  034E  30FB               	movlw	251
  1268  034F  00F2               	movwf	??_lcd_delay_2ms
  1269  0350                     u587:
  1270  0350  0BF2               	decfsz	??_lcd_delay_2ms,f
  1271  0351  2B50               	goto	u587
  1272  0352  0BF3               	decfsz	??_lcd_delay_2ms+1,f
  1273  0353  2B50               	goto	u587
  1274  0354  2B55               	nop2
  1275  0355                     l155:
  1276  0355  0008               	return
  1277  0356                     __end_of_lcd_delay_2ms:
  1278                           
  1279                           	psect	text9
  1280  01C0                     __ptext9:	
  1281 ;; *************** function _lcd_goto *****************
  1282 ;; Defined at:
  1283 ;;		line 203 in file "lcd.c"
  1284 ;; Parameters:    Size  Location     Type
  1285 ;;  lin             1    wreg     unsigned char 
  1286 ;;  col             1    8[COMMON] unsigned char 
  1287 ;; Auto vars:     Size  Location     Type
  1288 ;;  lin             1    9[COMMON] unsigned char 
  1289 ;; Return value:  Size  Location     Type
  1290 ;;                  1    wreg      void 
  1291 ;; Registers used:
  1292 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1293 ;; Tracked objects:
  1294 ;;		On entry : 0/0
  1295 ;;		On exit  : 0/0
  1296 ;;		Unchanged: 0/0
  1297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1298 ;;      Params:         1       0       0       0       0
  1299 ;;      Locals:         1       0       0       0       0
  1300 ;;      Temps:          0       2       0       0       0
  1301 ;;      Totals:         2       2       0       0       0
  1302 ;;Total ram usage:        4 bytes
  1303 ;; Hardware stack levels used: 1
  1304 ;; Hardware stack levels required when called: 6
  1305 ;; This function calls:
  1306 ;;		_lcd_cmd
  1307 ;; This function is called by:
  1308 ;;		_main
  1309 ;; This function uses a non-reentrant model
  1310 ;;
  1311                           
  1312                           
  1313                           ;psect for function _lcd_goto
  1314  01C0                     _lcd_goto:
  1315                           
  1316                           ;incstack = 0
  1317                           ; Regs used in _lcd_goto: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1318                           ;lcd_goto@lin stored from wreg
  1319  01C0  00F9               	movwf	lcd_goto@lin
  1320  01C1                     l1706:
  1321                           
  1322                           ;lcd.c: 203: void lcd_goto(unsigned char lin, unsigned char col);lcd.c: 204: {;lcd.c: 20
      +                          5:     switch(lin)
  1323  01C1  29E2               	goto	l1718
  1324  01C2                     l1708:
  1325                           
  1326                           ;lcd.c: 208:         {;lcd.c: 209:             lcd_cmd(0x80+col);
  1327  01C2  0878               	movf	lcd_goto@col,w
  1328  01C3  3E80               	addlw	128
  1329  01C4  120A  118A  2317  120A  118A  	fcall	_lcd_cmd
  1330                           
  1331                           ;lcd.c: 210:             break;
  1332  01C9  29FA               	goto	l220
  1333  01CA                     l1710:
  1334                           
  1335                           ;lcd.c: 213:         {;lcd.c: 214:             lcd_cmd(0xc0+col);
  1336  01CA  0878               	movf	lcd_goto@col,w
  1337  01CB  3EC0               	addlw	192
  1338  01CC  120A  118A  2317  120A  118A  	fcall	_lcd_cmd
  1339                           
  1340                           ;lcd.c: 215:             break;
  1341  01D1  29FA               	goto	l220
  1342  01D2                     l1712:
  1343                           
  1344                           ;lcd.c: 218:         {;lcd.c: 219:             lcd_cmd(0x90+col);
  1345  01D2  0878               	movf	lcd_goto@col,w
  1346  01D3  3E90               	addlw	144
  1347  01D4  120A  118A  2317  120A  118A  	fcall	_lcd_cmd
  1348                           
  1349                           ;lcd.c: 220:             break;
  1350  01D9  29FA               	goto	l220
  1351  01DA                     l1714:
  1352                           
  1353                           ;lcd.c: 223:         {;lcd.c: 224:             lcd_cmd(0xd0+col);
  1354  01DA  0878               	movf	lcd_goto@col,w
  1355  01DB  3ED0               	addlw	208
  1356  01DC  120A  118A  2317  120A  118A  	fcall	_lcd_cmd
  1357                           
  1358                           ;lcd.c: 225:             break;
  1359  01E1  29FA               	goto	l220
  1360  01E2                     l1718:
  1361  01E2  0879               	movf	lcd_goto@lin,w
  1362  01E3  1283               	bcf	3,5	;RP0=0, select bank0
  1363  01E4  1303               	bcf	3,6	;RP1=0, select bank0
  1364  01E5  00A0               	movwf	??_lcd_goto
  1365  01E6  01A1               	clrf	??_lcd_goto+1
  1366                           
  1367                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1368                           ; Switch size 1, requested type "simple"
  1369                           ; Number of cases is 1, Range of values is 0 to 0
  1370                           ; switch strategies available:
  1371                           ; Name         Instructions Cycles
  1372                           ; simple_byte            4     3 (average)
  1373                           ; direct_byte           11     8 (fixed)
  1374                           ; jumptable            260     6 (fixed)
  1375                           ;	Chosen strategy is simple_byte
  1376  01E7  0821               	movf	??_lcd_goto+1,w
  1377  01E8  3A00               	xorlw	0	; case 0
  1378  01E9  1903               	skipnz
  1379  01EA  29EC               	goto	l1862
  1380  01EB  29FA               	goto	l220
  1381  01EC                     l1862:
  1382                           
  1383                           ; Switch size 1, requested type "simple"
  1384                           ; Number of cases is 4, Range of values is 1 to 4
  1385                           ; switch strategies available:
  1386                           ; Name         Instructions Cycles
  1387                           ; simple_byte           13     7 (average)
  1388                           ; direct_byte           23    11 (fixed)
  1389                           ; jumptable            263     9 (fixed)
  1390                           ;	Chosen strategy is simple_byte
  1391  01EC  0820               	movf	??_lcd_goto,w
  1392  01ED  3A01               	xorlw	1	; case 1
  1393  01EE  1903               	skipnz
  1394  01EF  29C2               	goto	l1708
  1395  01F0  3A03               	xorlw	3	; case 2
  1396  01F1  1903               	skipnz
  1397  01F2  29CA               	goto	l1710
  1398  01F3  3A01               	xorlw	1	; case 3
  1399  01F4  1903               	skipnz
  1400  01F5  29D2               	goto	l1712
  1401  01F6  3A07               	xorlw	7	; case 4
  1402  01F7  1903               	skipnz
  1403  01F8  29DA               	goto	l1714
  1404  01F9  29FA               	goto	l220
  1405  01FA                     l220:
  1406  01FA  0008               	return
  1407  01FB                     __end_of_lcd_goto:
  1408                           
  1409                           	psect	text10
  1410  0317                     __ptext10:	
  1411 ;; *************** function _lcd_cmd *****************
  1412 ;; Defined at:
  1413 ;;		line 106 in file "lcd.c"
  1414 ;; Parameters:    Size  Location     Type
  1415 ;;  data            1    wreg     unsigned char 
  1416 ;; Auto vars:     Size  Location     Type
  1417 ;;  data            1    7[COMMON] unsigned char 
  1418 ;; Return value:  Size  Location     Type
  1419 ;;                  1    wreg      void 
  1420 ;; Registers used:
  1421 ;;		wreg, status,2, status,0, pclath, cstack
  1422 ;; Tracked objects:
  1423 ;;		On entry : 0/0
  1424 ;;		On exit  : 0/0
  1425 ;;		Unchanged: 0/0
  1426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1427 ;;      Params:         0       0       0       0       0
  1428 ;;      Locals:         1       0       0       0       0
  1429 ;;      Temps:          0       0       0       0       0
  1430 ;;      Totals:         1       0       0       0       0
  1431 ;;Total ram usage:        1 bytes
  1432 ;; Hardware stack levels used: 1
  1433 ;; Hardware stack levels required when called: 5
  1434 ;; This function calls:
  1435 ;;		_lcd_byte_4bits
  1436 ;;		_lcd_byte_8bits
  1437 ;;		_lcd_delay_40us
  1438 ;; This function is called by:
  1439 ;;		_lcd_init_8bits
  1440 ;;		_lcd_init_4bits
  1441 ;;		_lcd_clear
  1442 ;;		_lcd_goto
  1443 ;;		_lcd_shutdown
  1444 ;; This function uses a non-reentrant model
  1445 ;;
  1446                           
  1447                           
  1448                           ;psect for function _lcd_cmd
  1449  0317                     _lcd_cmd:
  1450                           
  1451                           ;incstack = 0
  1452                           ; Regs used in _lcd_cmd: [wreg+status,2+status,0+pclath+cstack]
  1453                           ;lcd_cmd@data stored from wreg
  1454  0317  00F7               	movwf	lcd_cmd@data
  1455  0318                     l1684:
  1456                           
  1457                           ;lcd.c: 110:     if (8 == 8)
  1458  0318  1283               	bcf	3,5	;RP0=0, select bank0
  1459  0319  1303               	bcf	3,6	;RP1=0, select bank0
  1460  031A  1009               	bcf	9,0	;volatile
  1461  031B                     l1686:
  1462                           
  1463                           ;lcd.c: 111:         lcd_byte_8bits(data);
  1464  031B  0877               	movf	lcd_cmd@data,w
  1465  031C  120A  118A  2341  120A  118A  	fcall	_lcd_byte_8bits
  1466  0321                     l182:
  1467                           
  1468                           ;lcd.c: 115:     lcd_delay_40us();
  1469  0321  120A  118A  235C  120A  118A  	fcall	_lcd_delay_40us
  1470  0326                     l183:
  1471  0326  0008               	return
  1472  0327                     __end_of_lcd_cmd:
  1473                           
  1474                           	psect	text11
  1475  035C                     __ptext11:	
  1476 ;; *************** function _lcd_delay_40us *****************
  1477 ;; Defined at:
  1478 ;;		line 60 in file "lcd.c"
  1479 ;; Parameters:    Size  Location     Type
  1480 ;;		None
  1481 ;; Auto vars:     Size  Location     Type
  1482 ;;		None
  1483 ;; Return value:  Size  Location     Type
  1484 ;;                  1    wreg      void 
  1485 ;; Registers used:
  1486 ;;		wreg
  1487 ;; Tracked objects:
  1488 ;;		On entry : 0/0
  1489 ;;		On exit  : 0/0
  1490 ;;		Unchanged: 0/0
  1491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1492 ;;      Params:         0       0       0       0       0
  1493 ;;      Locals:         0       0       0       0       0
  1494 ;;      Temps:          1       0       0       0       0
  1495 ;;      Totals:         1       0       0       0       0
  1496 ;;Total ram usage:        1 bytes
  1497 ;; Hardware stack levels used: 1
  1498 ;; Hardware stack levels required when called: 1
  1499 ;; This function calls:
  1500 ;;		Nothing
  1501 ;; This function is called by:
  1502 ;;		_lcd_cmd
  1503 ;;		_lcd_char
  1504 ;; This function uses a non-reentrant model
  1505 ;;
  1506                           
  1507                           
  1508                           ;psect for function _lcd_delay_40us
  1509  035C                     _lcd_delay_40us:
  1510  035C                     l1670:	
  1511                           ;incstack = 0
  1512                           ; Regs used in _lcd_delay_40us: [wreg]
  1513                           
  1514  035C  3042               	movlw	66
  1515  035D  00F2               	movwf	??_lcd_delay_40us
  1516  035E                     u597:
  1517  035E  0BF2               	decfsz	??_lcd_delay_40us,f
  1518  035F  2B5E               	goto	u597
  1519  0360  0000               	nop
  1520  0361                     l152:
  1521  0361  0008               	return
  1522  0362                     __end_of_lcd_delay_40us:
  1523                           
  1524                           	psect	text12
  1525  0341                     __ptext12:	
  1526 ;; *************** function _lcd_byte_8bits *****************
  1527 ;; Defined at:
  1528 ;;		line 100 in file "lcd.c"
  1529 ;; Parameters:    Size  Location     Type
  1530 ;;  data            1    wreg     unsigned char 
  1531 ;; Auto vars:     Size  Location     Type
  1532 ;;  data            1    2[COMMON] unsigned char 
  1533 ;; Return value:  Size  Location     Type
  1534 ;;                  1    wreg      void 
  1535 ;; Registers used:
  1536 ;;		wreg, status,2, status,0, pclath, cstack
  1537 ;; Tracked objects:
  1538 ;;		On entry : 0/0
  1539 ;;		On exit  : 0/0
  1540 ;;		Unchanged: 0/0
  1541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1542 ;;      Params:         0       0       0       0       0
  1543 ;;      Locals:         1       0       0       0       0
  1544 ;;      Temps:          0       0       0       0       0
  1545 ;;      Totals:         1       0       0       0       0
  1546 ;;Total ram usage:        1 bytes
  1547 ;; Hardware stack levels used: 1
  1548 ;; Hardware stack levels required when called: 3
  1549 ;; This function calls:
  1550 ;;		_lcd_en_pulse
  1551 ;; This function is called by:
  1552 ;;		_lcd_cmd
  1553 ;;		_lcd_char
  1554 ;; This function uses a non-reentrant model
  1555 ;;
  1556                           
  1557                           
  1558                           ;psect for function _lcd_byte_8bits
  1559  0341                     _lcd_byte_8bits:
  1560                           
  1561                           ;incstack = 0
  1562                           ; Regs used in _lcd_byte_8bits: [wreg+status,2+status,0+pclath+cstack]
  1563                           ;lcd_byte_8bits@data stored from wreg
  1564  0341  00F2               	movwf	lcd_byte_8bits@data
  1565  0342                     l1680:
  1566                           
  1567                           ;lcd.c: 100: void lcd_byte_8bits(unsigned char data);lcd.c: 101: {;lcd.c: 102:  PORTD = 
      +                          data;
  1568  0342  0872               	movf	lcd_byte_8bits@data,w
  1569  0343  1283               	bcf	3,5	;RP0=0, select bank0
  1570  0344  1303               	bcf	3,6	;RP1=0, select bank0
  1571  0345  0088               	movwf	8	;volatile
  1572  0346                     l1682:
  1573                           
  1574                           ;lcd.c: 103:     lcd_en_pulse();
  1575  0346  120A  118A  22F6  120A  118A  	fcall	_lcd_en_pulse
  1576  034B                     l178:
  1577  034B  0008               	return
  1578  034C                     __end_of_lcd_byte_8bits:
  1579                           
  1580                           	psect	text13
  1581  029F                     __ptext13:	
  1582 ;; *************** function _lcd_byte_4bits *****************
  1583 ;; Defined at:
  1584 ;;		line 87 in file "lcd.c"
  1585 ;; Parameters:    Size  Location     Type
  1586 ;;  data            1    wreg     unsigned char 
  1587 ;; Auto vars:     Size  Location     Type
  1588 ;;  data            1    5[COMMON] unsigned char 
  1589 ;;  nibble          1    6[COMMON] unsigned char 
  1590 ;; Return value:  Size  Location     Type
  1591 ;;                  1    wreg      void 
  1592 ;; Registers used:
  1593 ;;		wreg, status,2, status,0, pclath, cstack
  1594 ;; Tracked objects:
  1595 ;;		On entry : 0/0
  1596 ;;		On exit  : 0/0
  1597 ;;		Unchanged: 0/0
  1598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1599 ;;      Params:         0       0       0       0       0
  1600 ;;      Locals:         2       0       0       0       0
  1601 ;;      Temps:          2       0       0       0       0
  1602 ;;      Totals:         4       0       0       0       0
  1603 ;;Total ram usage:        4 bytes
  1604 ;; Hardware stack levels used: 1
  1605 ;; Hardware stack levels required when called: 4
  1606 ;; This function calls:
  1607 ;;		_lcd_send_nibble
  1608 ;; This function is called by:
  1609 ;;		_lcd_cmd
  1610 ;;		_lcd_char
  1611 ;; This function uses a non-reentrant model
  1612 ;;
  1613                           
  1614                           
  1615                           ;psect for function _lcd_byte_4bits
  1616  029F                     _lcd_byte_4bits:
  1617                           
  1618                           ;incstack = 0
  1619                           ; Regs used in _lcd_byte_4bits: [wreg+status,2+status,0+pclath+cstack]
  1620                           ;lcd_byte_4bits@data stored from wreg
  1621  029F  00F5               	movwf	lcd_byte_4bits@data
  1622  02A0                     l1672:
  1623                           
  1624                           ;lcd.c: 87: void lcd_byte_4bits(unsigned char data);lcd.c: 88: {;lcd.c: 89:     unsigned
      +                           char nibble;;lcd.c: 92:     nibble = (data >> 4);
  1625  02A0  0875               	movf	lcd_byte_4bits@data,w
  1626  02A1  00F3               	movwf	??_lcd_byte_4bits
  1627  02A2  3004               	movlw	4
  1628  02A3                     u525:
  1629  02A3  1003               	clrc
  1630  02A4  0CF3               	rrf	??_lcd_byte_4bits,f
  1631  02A5  3EFF               	addlw	-1
  1632  02A6  1D03               	skipz
  1633  02A7  2AA3               	goto	u525
  1634  02A8  0873               	movf	??_lcd_byte_4bits,w
  1635  02A9  00F4               	movwf	??_lcd_byte_4bits+1
  1636  02AA  0874               	movf	??_lcd_byte_4bits+1,w
  1637  02AB  00F6               	movwf	lcd_byte_4bits@nibble
  1638  02AC                     l1674:
  1639                           
  1640                           ;lcd.c: 93:     lcd_send_nibble(nibble);
  1641  02AC  0876               	movf	lcd_byte_4bits@nibble,w
  1642  02AD  120A  118A  222D  120A  118A  	fcall	_lcd_send_nibble
  1643  02B2                     l1676:
  1644                           
  1645                           ;lcd.c: 96:     nibble = (data & 0x0F);
  1646  02B2  0875               	movf	lcd_byte_4bits@data,w
  1647  02B3  390F               	andlw	15
  1648  02B4  00F3               	movwf	??_lcd_byte_4bits
  1649  02B5  0873               	movf	??_lcd_byte_4bits,w
  1650  02B6  00F6               	movwf	lcd_byte_4bits@nibble
  1651  02B7                     l1678:
  1652                           
  1653                           ;lcd.c: 97:     lcd_send_nibble(nibble);
  1654  02B7  0876               	movf	lcd_byte_4bits@nibble,w
  1655  02B8  120A  118A  222D  120A  118A  	fcall	_lcd_send_nibble
  1656  02BD                     l175:
  1657  02BD  0008               	return
  1658  02BE                     __end_of_lcd_byte_4bits:
  1659                           
  1660                           	psect	text14
  1661  022D                     __ptext14:	
  1662 ;; *************** function _lcd_send_nibble *****************
  1663 ;; Defined at:
  1664 ;;		line 71 in file "lcd.c"
  1665 ;; Parameters:    Size  Location     Type
  1666 ;;  data            1    wreg     unsigned char 
  1667 ;; Auto vars:     Size  Location     Type
  1668 ;;  data            1    2[COMMON] unsigned char 
  1669 ;; Return value:  Size  Location     Type
  1670 ;;                  1    wreg      void 
  1671 ;; Registers used:
  1672 ;;		wreg, status,2, status,0, pclath, cstack
  1673 ;; Tracked objects:
  1674 ;;		On entry : 0/0
  1675 ;;		On exit  : 0/0
  1676 ;;		Unchanged: 0/0
  1677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1678 ;;      Params:         0       0       0       0       0
  1679 ;;      Locals:         1       0       0       0       0
  1680 ;;      Temps:          0       0       0       0       0
  1681 ;;      Totals:         1       0       0       0       0
  1682 ;;Total ram usage:        1 bytes
  1683 ;; Hardware stack levels used: 1
  1684 ;; Hardware stack levels required when called: 3
  1685 ;; This function calls:
  1686 ;;		_lcd_en_pulse
  1687 ;; This function is called by:
  1688 ;;		_lcd_byte_4bits
  1689 ;;		_lcd_init_4bits
  1690 ;; This function uses a non-reentrant model
  1691 ;;
  1692                           
  1693                           
  1694                           ;psect for function _lcd_send_nibble
  1695  022D                     _lcd_send_nibble:
  1696                           
  1697                           ;incstack = 0
  1698                           ; Regs used in _lcd_send_nibble: [wreg+status,2+status,0+pclath+cstack]
  1699                           ;lcd_send_nibble@data stored from wreg
  1700  022D  00F2               	movwf	lcd_send_nibble@data
  1701  022E                     l1644:
  1702                           
  1703                           ;lcd.c: 71: void lcd_send_nibble(unsigned char data);lcd.c: 72: {;lcd.c: 75:     if (dat
      +                          a&0x01) var4 = 1;
  1704  022E  1C72               	btfss	lcd_send_nibble@data,0
  1705  022F  2A31               	goto	u481
  1706  0230  2A32               	goto	u480
  1707  0231                     u481:
  1708  0231  2A37               	goto	l1648
  1709  0232                     u480:
  1710  0232                     l1646:
  1711  0232  1283               	bcf	3,5	;RP0=0, select bank0
  1712  0233  1303               	bcf	3,6	;RP1=0, select bank0
  1713  0234  01AD               	clrf	_var4
  1714  0235  0AAD               	incf	_var4,f
  1715  0236  2A3A               	goto	l1650
  1716  0237                     l1648:
  1717  0237  1283               	bcf	3,5	;RP0=0, select bank0
  1718  0238  1303               	bcf	3,6	;RP1=0, select bank0
  1719  0239  01AD               	clrf	_var4
  1720  023A                     l1650:
  1721                           
  1722                           ;lcd.c: 77:  if (data&0x02) var5 = 1;
  1723  023A  1CF2               	btfss	lcd_send_nibble@data,1
  1724  023B  2A3D               	goto	u491
  1725  023C  2A3E               	goto	u490
  1726  023D                     u491:
  1727  023D  2A41               	goto	l1654
  1728  023E                     u490:
  1729  023E                     l1652:
  1730  023E  01AC               	clrf	_var5
  1731  023F  0AAC               	incf	_var5,f
  1732  0240  2A42               	goto	l1656
  1733  0241                     l1654:
  1734  0241  01AC               	clrf	_var5
  1735  0242                     l1656:
  1736                           
  1737                           ;lcd.c: 79:  if (data&0x04) var6 = 1;
  1738  0242  1D72               	btfss	lcd_send_nibble@data,2
  1739  0243  2A45               	goto	u501
  1740  0244  2A46               	goto	u500
  1741  0245                     u501:
  1742  0245  2A49               	goto	l1660
  1743  0246                     u500:
  1744  0246                     l1658:
  1745  0246  01AB               	clrf	_var6
  1746  0247  0AAB               	incf	_var6,f
  1747  0248  2A4A               	goto	l1662
  1748  0249                     l1660:
  1749  0249  01AB               	clrf	_var6
  1750  024A                     l1662:
  1751                           
  1752                           ;lcd.c: 81:  if (data&0x08) var7 = 1;
  1753  024A  1DF2               	btfss	lcd_send_nibble@data,3
  1754  024B  2A4D               	goto	u511
  1755  024C  2A4E               	goto	u510
  1756  024D                     u511:
  1757  024D  2A51               	goto	l1666
  1758  024E                     u510:
  1759  024E                     l1664:
  1760  024E  01AA               	clrf	_var7
  1761  024F  0AAA               	incf	_var7,f
  1762  0250  2A52               	goto	l1668
  1763  0251                     l1666:
  1764  0251  01AA               	clrf	_var7
  1765  0252                     l1668:
  1766                           
  1767                           ;lcd.c: 84:     lcd_en_pulse();
  1768  0252  120A  118A  22F6  120A  118A  	fcall	_lcd_en_pulse
  1769  0257                     l172:
  1770  0257  0008               	return
  1771  0258                     __end_of_lcd_send_nibble:
  1772                           
  1773                           	psect	text15
  1774  02F6                     __ptext15:	
  1775 ;; *************** function _lcd_en_pulse *****************
  1776 ;; Defined at:
  1777 ;;		line 64 in file "lcd.c"
  1778 ;; Parameters:    Size  Location     Type
  1779 ;;		None
  1780 ;; Auto vars:     Size  Location     Type
  1781 ;;		None
  1782 ;; Return value:  Size  Location     Type
  1783 ;;                  1    wreg      void 
  1784 ;; Registers used:
  1785 ;;		status,2, status,0, pclath, cstack
  1786 ;; Tracked objects:
  1787 ;;		On entry : 0/0
  1788 ;;		On exit  : 0/0
  1789 ;;		Unchanged: 0/0
  1790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1791 ;;      Params:         0       0       0       0       0
  1792 ;;      Locals:         0       0       0       0       0
  1793 ;;      Temps:          0       0       0       0       0
  1794 ;;      Totals:         0       0       0       0       0
  1795 ;;Total ram usage:        0 bytes
  1796 ;; Hardware stack levels used: 1
  1797 ;; Hardware stack levels required when called: 2
  1798 ;; This function calls:
  1799 ;;		_lcd_delay_1us
  1800 ;; This function is called by:
  1801 ;;		_lcd_send_nibble
  1802 ;;		_lcd_byte_8bits
  1803 ;; This function uses a non-reentrant model
  1804 ;;
  1805                           
  1806                           
  1807                           ;psect for function _lcd_en_pulse
  1808  02F6                     _lcd_en_pulse:
  1809  02F6                     l1638:	
  1810                           ;incstack = 0
  1811                           ; Regs used in _lcd_en_pulse: [status,2+status,0+pclath+cstack]
  1812                           
  1813                           
  1814                           ;lcd.c: 66:     PORTEbits.RE1 = 1;
  1815  02F6  1283               	bcf	3,5	;RP0=0, select bank0
  1816  02F7  1303               	bcf	3,6	;RP1=0, select bank0
  1817  02F8  1489               	bsf	9,1	;volatile
  1818  02F9                     l1640:
  1819                           
  1820                           ;lcd.c: 67:     lcd_delay_1us();
  1821  02F9  120A  118A  2362  120A  118A  	fcall	_lcd_delay_1us
  1822  02FE                     l1642:
  1823                           
  1824                           ;lcd.c: 68:     PORTEbits.RE1 = 0;
  1825  02FE  1283               	bcf	3,5	;RP0=0, select bank0
  1826  02FF  1303               	bcf	3,6	;RP1=0, select bank0
  1827  0300  1089               	bcf	9,1	;volatile
  1828                           
  1829                           ;lcd.c: 69:     lcd_delay_1us();
  1830  0301  120A  118A  2362  120A  118A  	fcall	_lcd_delay_1us
  1831  0306                     l161:
  1832  0306  0008               	return
  1833  0307                     __end_of_lcd_en_pulse:
  1834                           
  1835                           	psect	text16
  1836  0362                     __ptext16:	
  1837 ;; *************** function _lcd_delay_1us *****************
  1838 ;; Defined at:
  1839 ;;		line 59 in file "lcd.c"
  1840 ;; Parameters:    Size  Location     Type
  1841 ;;		None
  1842 ;; Auto vars:     Size  Location     Type
  1843 ;;		None
  1844 ;; Return value:  Size  Location     Type
  1845 ;;                  1    wreg      void 
  1846 ;; Registers used:
  1847 ;;		None
  1848 ;; Tracked objects:
  1849 ;;		On entry : 0/0
  1850 ;;		On exit  : 0/0
  1851 ;;		Unchanged: 0/0
  1852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1853 ;;      Params:         0       0       0       0       0
  1854 ;;      Locals:         0       0       0       0       0
  1855 ;;      Temps:          0       0       0       0       0
  1856 ;;      Totals:         0       0       0       0       0
  1857 ;;Total ram usage:        0 bytes
  1858 ;; Hardware stack levels used: 1
  1859 ;; Hardware stack levels required when called: 1
  1860 ;; This function calls:
  1861 ;;		Nothing
  1862 ;; This function is called by:
  1863 ;;		_lcd_en_pulse
  1864 ;; This function uses a non-reentrant model
  1865 ;;
  1866                           
  1867                           
  1868                           ;psect for function _lcd_delay_1us
  1869  0362                     _lcd_delay_1us:
  1870  0362                     l1636:	
  1871                           ;incstack = 0
  1872                           ; Regs used in _lcd_delay_1us: []
  1873                           
  1874  0362  2B63               	nop2	;2 cycle nop
  1875  0363  2B64               	nop2	;2 cycle nop
  1876  0364  0000               	nop
  1877  0365                     l149:
  1878  0365  0008               	return
  1879  0366                     __end_of_lcd_delay_1us:
  1880                           
  1881                           	psect	text17
  1882  00E4                     __ptext17:	
  1883 ;; *************** function _keypad2_scan *****************
  1884 ;; Defined at:
  1885 ;;		line 83 in file "main.c"
  1886 ;; Parameters:    Size  Location     Type
  1887 ;;		None
  1888 ;; Auto vars:     Size  Location     Type
  1889 ;;		None
  1890 ;; Return value:  Size  Location     Type
  1891 ;;                  1    wreg      unsigned char 
  1892 ;; Registers used:
  1893 ;;		wreg
  1894 ;; Tracked objects:
  1895 ;;		On entry : 0/0
  1896 ;;		On exit  : 0/0
  1897 ;;		Unchanged: 0/0
  1898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1899 ;;      Params:         0       0       0       0       0
  1900 ;;      Locals:         0       0       0       0       0
  1901 ;;      Temps:          0       0       0       0       0
  1902 ;;      Totals:         0       0       0       0       0
  1903 ;;Total ram usage:        0 bytes
  1904 ;; Hardware stack levels used: 1
  1905 ;; Hardware stack levels required when called: 1
  1906 ;; This function calls:
  1907 ;;		Nothing
  1908 ;; This function is called by:
  1909 ;;		_main
  1910 ;; This function uses a non-reentrant model
  1911 ;;
  1912                           
  1913                           
  1914                           ;psect for function _keypad2_scan
  1915  00E4                     _keypad2_scan:
  1916  00E4                     l1382:	
  1917                           ;incstack = 0
  1918                           ; Regs used in _keypad2_scan: [wreg]
  1919                           
  1920                           
  1921                           ;main.c: 85:     PORTCbits.RC4 = 1; PORTCbits.RC5 = 0; PORTCbits.RC6 = 0;
  1922  00E4  1283               	bcf	3,5	;RP0=0, select bank0
  1923  00E5  1303               	bcf	3,6	;RP1=0, select bank0
  1924  00E6  1607               	bsf	7,4	;volatile
  1925  00E7  1287               	bcf	7,5	;volatile
  1926  00E8  1307               	bcf	7,6	;volatile
  1927                           
  1928                           ;main.c: 86:     if (PORTCbits.RC0 == 1) return '1';
  1929  00E9  1C07               	btfss	7,0	;volatile
  1930  00EA  28EC               	goto	u331
  1931  00EB  28ED               	goto	u330
  1932  00EC                     u331:
  1933  00EC  28EF               	goto	l93
  1934  00ED                     u330:
  1935  00ED                     l1384:
  1936  00ED  3031               	movlw	49
  1937  00EE  2938               	goto	l94
  1938  00EF                     l93:	
  1939                           ;main.c: 87:     else if (PORTCbits.RC1 == 1) return '4';
  1940                           
  1941  00EF  1C87               	btfss	7,1	;volatile
  1942  00F0  28F2               	goto	u341
  1943  00F1  28F3               	goto	u340
  1944  00F2                     u341:
  1945  00F2  28F5               	goto	l96
  1946  00F3                     u340:
  1947  00F3                     l1390:
  1948  00F3  3034               	movlw	52
  1949  00F4  2938               	goto	l94
  1950  00F5                     l96:	
  1951                           ;main.c: 88:     else if (PORTCbits.RC2 == 1) return '7';
  1952                           
  1953  00F5  1D07               	btfss	7,2	;volatile
  1954  00F6  28F8               	goto	u351
  1955  00F7  28F9               	goto	u350
  1956  00F8                     u351:
  1957  00F8  28FB               	goto	l98
  1958  00F9                     u350:
  1959  00F9                     l1396:
  1960  00F9  3037               	movlw	55
  1961  00FA  2938               	goto	l94
  1962  00FB                     l98:	
  1963                           ;main.c: 89:     else if (PORTCbits.RC3 == 1) return '*';
  1964                           
  1965  00FB  1D87               	btfss	7,3	;volatile
  1966  00FC  28FE               	goto	u361
  1967  00FD  28FF               	goto	u360
  1968  00FE                     u361:
  1969  00FE  2901               	goto	l95
  1970  00FF                     u360:
  1971  00FF                     l1402:
  1972  00FF  302A               	movlw	42
  1973  0100  2938               	goto	l94
  1974  0101                     l95:
  1975                           
  1976                           ;main.c: 91:     PORTCbits.RC4 = 0; PORTCbits.RC5 = 1; PORTCbits.RC6 = 0;
  1977  0101  1207               	bcf	7,4	;volatile
  1978  0102  1687               	bsf	7,5	;volatile
  1979  0103  1307               	bcf	7,6	;volatile
  1980                           
  1981                           ;main.c: 92:     if (PORTCbits.RC0 == 1) return '2';
  1982  0104  1C07               	btfss	7,0	;volatile
  1983  0105  2907               	goto	u371
  1984  0106  2908               	goto	u370
  1985  0107                     u371:
  1986  0107  290A               	goto	l101
  1987  0108                     u370:
  1988  0108                     l1406:
  1989  0108  3032               	movlw	50
  1990  0109  2938               	goto	l94
  1991  010A                     l101:	
  1992                           ;main.c: 93:     else if (PORTCbits.RC1 == 1) return '5';
  1993                           
  1994  010A  1C87               	btfss	7,1	;volatile
  1995  010B  290D               	goto	u381
  1996  010C  290E               	goto	u380
  1997  010D                     u381:
  1998  010D  2910               	goto	l103
  1999  010E                     u380:
  2000  010E                     l1412:
  2001  010E  3035               	movlw	53
  2002  010F  2938               	goto	l94
  2003  0110                     l103:	
  2004                           ;main.c: 94:     else if (PORTCbits.RC2 == 1) return '8';
  2005                           
  2006  0110  1D07               	btfss	7,2	;volatile
  2007  0111  2913               	goto	u391
  2008  0112  2914               	goto	u390
  2009  0113                     u391:
  2010  0113  2916               	goto	l105
  2011  0114                     u390:
  2012  0114                     l1418:
  2013  0114  3038               	movlw	56
  2014  0115  2938               	goto	l94
  2015  0116                     l105:	
  2016                           ;main.c: 95:     else if (PORTCbits.RC3 == 1) return '0';
  2017                           
  2018  0116  1D87               	btfss	7,3	;volatile
  2019  0117  2919               	goto	u401
  2020  0118  291A               	goto	u400
  2021  0119                     u401:
  2022  0119  291C               	goto	l102
  2023  011A                     u400:
  2024  011A                     l1424:
  2025  011A  3030               	movlw	48
  2026  011B  2938               	goto	l94
  2027  011C                     l102:
  2028                           
  2029                           ;main.c: 97:     PORTCbits.RC4 = 0; PORTCbits.RC5 = 0; PORTCbits.RC6 = 1;
  2030  011C  1207               	bcf	7,4	;volatile
  2031  011D  1287               	bcf	7,5	;volatile
  2032  011E  1707               	bsf	7,6	;volatile
  2033                           
  2034                           ;main.c: 98:     if (PORTCbits.RC0 == 1) return '3';
  2035  011F  1C07               	btfss	7,0	;volatile
  2036  0120  2922               	goto	u411
  2037  0121  2923               	goto	u410
  2038  0122                     u411:
  2039  0122  2925               	goto	l108
  2040  0123                     u410:
  2041  0123                     l1428:
  2042  0123  3033               	movlw	51
  2043  0124  2938               	goto	l94
  2044  0125                     l108:	
  2045                           ;main.c: 99:     else if (PORTCbits.RC1 == 1) return '6';
  2046                           
  2047  0125  1C87               	btfss	7,1	;volatile
  2048  0126  2928               	goto	u421
  2049  0127  2929               	goto	u420
  2050  0128                     u421:
  2051  0128  292B               	goto	l110
  2052  0129                     u420:
  2053  0129                     l1434:
  2054  0129  3036               	movlw	54
  2055  012A  2938               	goto	l94
  2056  012B                     l110:	
  2057                           ;main.c: 100:     else if (PORTCbits.RC2 == 1) return '9';
  2058                           
  2059  012B  1D07               	btfss	7,2	;volatile
  2060  012C  292E               	goto	u431
  2061  012D  292F               	goto	u430
  2062  012E                     u431:
  2063  012E  2931               	goto	l112
  2064  012F                     u430:
  2065  012F                     l1440:
  2066  012F  3039               	movlw	57
  2067  0130  2938               	goto	l94
  2068  0131                     l112:	
  2069                           ;main.c: 101:     else if (PORTCbits.RC3 == 1) return '#';
  2070                           
  2071  0131  1D87               	btfss	7,3	;volatile
  2072  0132  2934               	goto	u441
  2073  0133  2935               	goto	u440
  2074  0134                     u441:
  2075  0134  2937               	goto	l111
  2076  0135                     u440:
  2077  0135                     l1446:
  2078  0135  3023               	movlw	35
  2079  0136  2938               	goto	l94
  2080  0137                     l111:
  2081  0137                     l1450:
  2082                           
  2083                           ;main.c: 103:     return ' ';
  2084  0137  3020               	movlw	32
  2085  0138                     l94:
  2086  0138  0008               	return
  2087  0139                     __end_of_keypad2_scan:
  2088                           
  2089                           	psect	text18
  2090  008E                     __ptext18:	
  2091 ;; *************** function _keypad1_scan *****************
  2092 ;; Defined at:
  2093 ;;		line 49 in file "main.c"
  2094 ;; Parameters:    Size  Location     Type
  2095 ;;  value           2    2[COMMON] unsigned int 
  2096 ;; Auto vars:     Size  Location     Type
  2097 ;;		None
  2098 ;; Return value:  Size  Location     Type
  2099 ;;                  1    wreg      unsigned char 
  2100 ;; Registers used:
  2101 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2102 ;; Tracked objects:
  2103 ;;		On entry : 0/0
  2104 ;;		On exit  : 0/0
  2105 ;;		Unchanged: 0/0
  2106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2107 ;;      Params:         2       0       0       0       0
  2108 ;;      Locals:         0       0       0       0       0
  2109 ;;      Temps:          0       0       0       0       0
  2110 ;;      Totals:         2       0       0       0       0
  2111 ;;Total ram usage:        2 bytes
  2112 ;; Hardware stack levels used: 1
  2113 ;; Hardware stack levels required when called: 1
  2114 ;; This function calls:
  2115 ;;		Nothing
  2116 ;; This function is called by:
  2117 ;;		_main
  2118 ;; This function uses a non-reentrant model
  2119 ;;
  2120                           
  2121                           
  2122                           ;psect for function _keypad1_scan
  2123  008E                     _keypad1_scan:
  2124  008E                     l1308:	
  2125                           ;incstack = 0
  2126                           ; Regs used in _keypad1_scan: [wreg-fsr0h+status,2+status,0]
  2127                           
  2128                           
  2129                           ;main.c: 49: unsigned char keypad1_scan(unsigned int value);main.c: 50: {;main.c: 51:   
      +                            switch(value)
  2130  008E  28A9               	goto	l1364
  2131  008F                     l1310:
  2132                           
  2133                           ;main.c: 54:             return '0';
  2134  008F  3030               	movlw	48
  2135  0090  28E3               	goto	l77
  2136  0091                     l1314:
  2137                           
  2138                           ;main.c: 56:             return '1';
  2139  0091  3031               	movlw	49
  2140  0092  28E3               	goto	l77
  2141  0093                     l1318:
  2142                           
  2143                           ;main.c: 58:             return '2';
  2144  0093  3032               	movlw	50
  2145  0094  28E3               	goto	l77
  2146  0095                     l1322:
  2147                           
  2148                           ;main.c: 60:             return '3';
  2149  0095  3033               	movlw	51
  2150  0096  28E3               	goto	l77
  2151  0097                     l1326:
  2152                           
  2153                           ;main.c: 62:             return '4';
  2154  0097  3034               	movlw	52
  2155  0098  28E3               	goto	l77
  2156  0099                     l1330:
  2157                           
  2158                           ;main.c: 64:             return '5';
  2159  0099  3035               	movlw	53
  2160  009A  28E3               	goto	l77
  2161  009B                     l1334:
  2162                           
  2163                           ;main.c: 66:             return '6';
  2164  009B  3036               	movlw	54
  2165  009C  28E3               	goto	l77
  2166  009D                     l1338:
  2167                           
  2168                           ;main.c: 68:             return '7';
  2169  009D  3037               	movlw	55
  2170  009E  28E3               	goto	l77
  2171  009F                     l1342:
  2172                           
  2173                           ;main.c: 70:             return '8';
  2174  009F  3038               	movlw	56
  2175  00A0  28E3               	goto	l77
  2176  00A1                     l1346:
  2177                           
  2178                           ;main.c: 72:             return '9';
  2179  00A1  3039               	movlw	57
  2180  00A2  28E3               	goto	l77
  2181  00A3                     l1350:
  2182                           
  2183                           ;main.c: 74:             return '*';
  2184  00A3  302A               	movlw	42
  2185  00A4  28E3               	goto	l77
  2186  00A5                     l1354:
  2187                           
  2188                           ;main.c: 76:             return '#';
  2189  00A5  3023               	movlw	35
  2190  00A6  28E3               	goto	l77
  2191  00A7                     l1358:
  2192                           
  2193                           ;main.c: 78:             return ' ';
  2194  00A7  3020               	movlw	32
  2195  00A8  28E3               	goto	l77
  2196  00A9                     l1364:
  2197                           
  2198                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 4 sub-sw
      +                          itches
  2199                           ; Switch size 1, requested type "simple"
  2200                           ; Number of cases is 4, Range of values is 0 to 3
  2201                           ; switch strategies available:
  2202                           ; Name         Instructions Cycles
  2203                           ; simple_byte           13     7 (average)
  2204                           ; direct_byte           20     8 (fixed)
  2205                           ; jumptable            260     6 (fixed)
  2206                           ;	Chosen strategy is simple_byte
  2207  00A9  0873               	movf	keypad1_scan@value+1,w
  2208  00AA  3A00               	xorlw	0	; case 0
  2209  00AB  1903               	skipnz
  2210  00AC  28B7               	goto	l1864
  2211  00AD  3A01               	xorlw	1	; case 1
  2212  00AE  1903               	skipnz
  2213  00AF  28BC               	goto	l1866
  2214  00B0  3A03               	xorlw	3	; case 2
  2215  00B1  1903               	skipnz
  2216  00B2  28D3               	goto	l1868
  2217  00B3  3A01               	xorlw	1	; case 3
  2218  00B4  1903               	skipnz
  2219  00B5  28DE               	goto	l1870
  2220  00B6  28A7               	goto	l1358
  2221  00B7                     l1864:
  2222                           
  2223                           ; Switch size 1, requested type "simple"
  2224                           ; Number of cases is 1, Range of values is 232 to 232
  2225                           ; switch strategies available:
  2226                           ; Name         Instructions Cycles
  2227                           ; simple_byte            4     3 (average)
  2228                           ; direct_byte           14    11 (fixed)
  2229                           ; jumptable            263     9 (fixed)
  2230                           ;	Chosen strategy is simple_byte
  2231  00B7  0872               	movf	keypad1_scan@value,w
  2232  00B8  3AE8               	xorlw	232	; case 232
  2233  00B9  1903               	skipnz
  2234  00BA  28A3               	goto	l1350
  2235  00BB  28A7               	goto	l1358
  2236  00BC                     l1866:
  2237                           
  2238                           ; Switch size 1, requested type "simple"
  2239                           ; Number of cases is 7, Range of values is 4 to 169
  2240                           ; switch strategies available:
  2241                           ; Name         Instructions Cycles
  2242                           ; simple_byte           22    12 (average)
  2243                           ; jumptable            263     9 (fixed)
  2244                           ;	Chosen strategy is simple_byte
  2245  00BC  0872               	movf	keypad1_scan@value,w
  2246  00BD  3A04               	xorlw	4	; case 4
  2247  00BE  1903               	skipnz
  2248  00BF  289D               	goto	l1338
  2249  00C0  3A23               	xorlw	35	; case 39
  2250  00C1  1903               	skipnz
  2251  00C2  2897               	goto	l1326
  2252  00C3  3A0B               	xorlw	11	; case 44
  2253  00C4  1903               	skipnz
  2254  00C5  288F               	goto	l1310
  2255  00C6  3A79               	xorlw	121	; case 85
  2256  00C7  1903               	skipnz
  2257  00C8  2891               	goto	l1314
  2258  00C9  3A09               	xorlw	9	; case 92
  2259  00CA  1903               	skipnz
  2260  00CB  289F               	goto	l1342
  2261  00CC  3AC2               	xorlw	194	; case 158
  2262  00CD  1903               	skipnz
  2263  00CE  2899               	goto	l1330
  2264  00CF  3A37               	xorlw	55	; case 169
  2265  00D0  1903               	skipnz
  2266  00D1  28A5               	goto	l1354
  2267  00D2  28A7               	goto	l1358
  2268  00D3                     l1868:
  2269                           
  2270                           ; Switch size 1, requested type "simple"
  2271                           ; Number of cases is 3, Range of values is 0 to 184
  2272                           ; switch strategies available:
  2273                           ; Name         Instructions Cycles
  2274                           ; simple_byte           10     6 (average)
  2275                           ; jumptable            260     6 (fixed)
  2276                           ;	Chosen strategy is simple_byte
  2277  00D3  0872               	movf	keypad1_scan@value,w
  2278  00D4  3A00               	xorlw	0	; case 0
  2279  00D5  1903               	skipnz
  2280  00D6  2893               	goto	l1318
  2281  00D7  3A0F               	xorlw	15	; case 15
  2282  00D8  1903               	skipnz
  2283  00D9  28A1               	goto	l1346
  2284  00DA  3AB7               	xorlw	183	; case 184
  2285  00DB  1903               	skipnz
  2286  00DC  289B               	goto	l1334
  2287  00DD  28A7               	goto	l1358
  2288  00DE                     l1870:
  2289                           
  2290                           ; Switch size 1, requested type "simple"
  2291                           ; Number of cases is 1, Range of values is 255 to 255
  2292                           ; switch strategies available:
  2293                           ; Name         Instructions Cycles
  2294                           ; simple_byte            4     3 (average)
  2295                           ; direct_byte           10     7 (fixed)
  2296                           ; jumptable            263     9 (fixed)
  2297                           ;	Chosen strategy is simple_byte
  2298  00DE  0872               	movf	keypad1_scan@value,w
  2299  00DF  3AFF               	xorlw	255	; case 255
  2300  00E0  1903               	skipnz
  2301  00E1  2895               	goto	l1322
  2302  00E2  28A7               	goto	l1358
  2303  00E3                     l77:
  2304  00E3  0008               	return
  2305  00E4                     __end_of_keypad1_scan:
  2306                           
  2307                           	psect	text19
  2308  0258                     __ptext19:	
  2309 ;; *************** function _init *****************
  2310 ;; Defined at:
  2311 ;;		line 108 in file "main.c"
  2312 ;; Parameters:    Size  Location     Type
  2313 ;;		None
  2314 ;; Auto vars:     Size  Location     Type
  2315 ;;		None
  2316 ;; Return value:  Size  Location     Type
  2317 ;;                  1    wreg      void 
  2318 ;; Registers used:
  2319 ;;		wreg, status,2
  2320 ;; Tracked objects:
  2321 ;;		On entry : 0/0
  2322 ;;		On exit  : 0/0
  2323 ;;		Unchanged: 0/0
  2324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2325 ;;      Params:         0       0       0       0       0
  2326 ;;      Locals:         0       0       0       0       0
  2327 ;;      Temps:          0       0       0       0       0
  2328 ;;      Totals:         0       0       0       0       0
  2329 ;;Total ram usage:        0 bytes
  2330 ;; Hardware stack levels used: 1
  2331 ;; Hardware stack levels required when called: 1
  2332 ;; This function calls:
  2333 ;;		Nothing
  2334 ;; This function is called by:
  2335 ;;		_main
  2336 ;; This function uses a non-reentrant model
  2337 ;;
  2338                           
  2339                           
  2340                           ;psect for function _init
  2341  0258                     _init:
  2342  0258                     l1454:	
  2343                           ;incstack = 0
  2344                           ; Regs used in _init: [wreg+status,2]
  2345                           
  2346                           
  2347                           ;main.c: 111:     PORTA = 0b00000000;
  2348  0258  1283               	bcf	3,5	;RP0=0, select bank0
  2349  0259  1303               	bcf	3,6	;RP1=0, select bank0
  2350  025A  0185               	clrf	5	;volatile
  2351                           
  2352                           ;main.c: 112:     PORTB = 0b00000000;
  2353  025B  0186               	clrf	6	;volatile
  2354                           
  2355                           ;main.c: 113:     PORTC = 0b00000000;
  2356  025C  0187               	clrf	7	;volatile
  2357                           
  2358                           ;main.c: 114:     TRISD = 0b00000000;
  2359  025D  1683               	bsf	3,5	;RP0=1, select bank1
  2360  025E  1303               	bcf	3,6	;RP1=0, select bank1
  2361  025F  0188               	clrf	8	;volatile
  2362                           
  2363                           ;main.c: 115:     PORTE = 0b00000000;
  2364  0260  1283               	bcf	3,5	;RP0=0, select bank0
  2365  0261  1303               	bcf	3,6	;RP1=0, select bank0
  2366  0262  0189               	clrf	9	;volatile
  2367  0263                     l1456:
  2368                           
  2369                           ;main.c: 117:     TRISA = 0b00000001;
  2370  0263  3001               	movlw	1
  2371  0264  1683               	bsf	3,5	;RP0=1, select bank1
  2372  0265  1303               	bcf	3,6	;RP1=0, select bank1
  2373  0266  0085               	movwf	5	;volatile
  2374  0267                     l1458:
  2375                           
  2376                           ;main.c: 118:     TRISB = 0b00000001;
  2377  0267  3001               	movlw	1
  2378  0268  0086               	movwf	6	;volatile
  2379  0269                     l1460:
  2380                           
  2381                           ;main.c: 119:     TRISC = 0b00001111;
  2382  0269  300F               	movlw	15
  2383  026A  0087               	movwf	7	;volatile
  2384  026B                     l1462:
  2385                           
  2386                           ;main.c: 120:     PORTD = 0b00000000;
  2387  026B  1283               	bcf	3,5	;RP0=0, select bank0
  2388  026C  1303               	bcf	3,6	;RP1=0, select bank0
  2389  026D  0188               	clrf	8	;volatile
  2390  026E                     l1464:
  2391                           
  2392                           ;main.c: 121:     TRISE = 0b00000000;
  2393  026E  1683               	bsf	3,5	;RP0=1, select bank1
  2394  026F  1303               	bcf	3,6	;RP1=0, select bank1
  2395  0270  0189               	clrf	9	;volatile
  2396  0271                     l1466:
  2397                           
  2398                           ;main.c: 124:     OPTION_REG = 0b10000001;
  2399  0271  3081               	movlw	129
  2400  0272  0081               	movwf	1	;volatile
  2401  0273                     l1468:
  2402                           
  2403                           ;main.c: 135:     INTCON = 0b00010000;
  2404  0273  3010               	movlw	16
  2405  0274  008B               	movwf	11	;volatile
  2406  0275                     l1470:
  2407                           
  2408                           ;main.c: 148:     CMCON = 0x07;
  2409  0275  3007               	movlw	7
  2410  0276  009C               	movwf	28	;volatile
  2411  0277                     l1472:
  2412                           
  2413                           ;main.c: 151:     ADCON0 = 0b10000001;
  2414  0277  3081               	movlw	129
  2415  0278  1283               	bcf	3,5	;RP0=0, select bank0
  2416  0279  1303               	bcf	3,6	;RP1=0, select bank0
  2417  027A  009F               	movwf	31	;volatile
  2418  027B                     l1474:
  2419                           
  2420                           ;main.c: 161:     ADCON1 = 0b10001110;
  2421  027B  308E               	movlw	142
  2422  027C  1683               	bsf	3,5	;RP0=1, select bank1
  2423  027D  1303               	bcf	3,6	;RP1=0, select bank1
  2424  027E  009F               	movwf	31	;volatile
  2425  027F                     l117:
  2426  027F  0008               	return
  2427  0280                     __end_of_init:
  2428                           
  2429                           	psect	text20
  2430  02DD                     __ptext20:	
  2431 ;; *************** function _amost1 *****************
  2432 ;; Defined at:
  2433 ;;		line 29 in file "main.c"
  2434 ;; Parameters:    Size  Location     Type
  2435 ;;  value           1    wreg     PTR unsigned int 
  2436 ;;		 -> ad_value(2), 
  2437 ;; Auto vars:     Size  Location     Type
  2438 ;;  value           1    3[COMMON] PTR unsigned int 
  2439 ;;		 -> ad_value(2), 
  2440 ;; Return value:  Size  Location     Type
  2441 ;;                  1    wreg      void 
  2442 ;; Registers used:
  2443 ;;		wreg, fsr0l, fsr0h
  2444 ;; Tracked objects:
  2445 ;;		On entry : 0/0
  2446 ;;		On exit  : 0/0
  2447 ;;		Unchanged: 0/0
  2448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2449 ;;      Params:         0       0       0       0       0
  2450 ;;      Locals:         1       0       0       0       0
  2451 ;;      Temps:          1       0       0       0       0
  2452 ;;      Totals:         2       0       0       0       0
  2453 ;;Total ram usage:        2 bytes
  2454 ;; Hardware stack levels used: 1
  2455 ;; Hardware stack levels required when called: 1
  2456 ;; This function calls:
  2457 ;;		Nothing
  2458 ;; This function is called by:
  2459 ;;		_main
  2460 ;; This function uses a non-reentrant model
  2461 ;;
  2462                           
  2463                           
  2464                           ;psect for function _amost1
  2465  02DD                     _amost1:
  2466                           
  2467                           ;incstack = 0
  2468                           ; Regs used in _amost1: [wregfsr0]
  2469                           ;amost1@value stored from wreg
  2470  02DD  00F3               	movwf	amost1@value
  2471  02DE                     l1302:
  2472                           
  2473                           ;main.c: 29: void amost1(unsigned int *value);main.c: 30: {;main.c: 31:     _delay((unsi
      +                          gned long)((100)*(20000000/4000000.0)));
  2474  02DE  30A6               	movlw	166
  2475  02DF  00F2               	movwf	??_amost1
  2476  02E0                     u607:
  2477  02E0  0BF2               	decfsz	??_amost1,f
  2478  02E1  2AE0               	goto	u607
  2479  02E2  0000               	nop
  2480  02E3                     l1304:
  2481                           
  2482                           ;main.c: 32:     ADCON0bits.GO_nDONE = 1;
  2483  02E3  1283               	bcf	3,5	;RP0=0, select bank0
  2484  02E4  1303               	bcf	3,6	;RP1=0, select bank0
  2485  02E5  151F               	bsf	31,2	;volatile
  2486  02E6                     l63:	
  2487                           ;main.c: 33:     while(ADCON0bits.GO_nDONE);
  2488                           
  2489  02E6  191F               	btfsc	31,2	;volatile
  2490  02E7  2AE9               	goto	u321
  2491  02E8  2AEA               	goto	u320
  2492  02E9                     u321:
  2493  02E9  2AE6               	goto	l63
  2494  02EA                     u320:
  2495  02EA                     l1306:
  2496                           
  2497                           ;main.c: 34:     *value = (unsigned int)(ADRESH << 8) + (ADRESL);
  2498  02EA  0873               	movf	amost1@value,w
  2499  02EB  0084               	movwf	4
  2500  02EC  1683               	bsf	3,5	;RP0=1, select bank1
  2501  02ED  1303               	bcf	3,6	;RP1=0, select bank1
  2502  02EE  081E               	movf	30,w	;volatile
  2503  02EF  0080               	movwf	0
  2504  02F0  0A84               	incf	4,f
  2505  02F1  1283               	bcf	3,5	;RP0=0, select bank0
  2506  02F2  1303               	bcf	3,6	;RP1=0, select bank0
  2507  02F3  081E               	movf	30,w	;volatile
  2508  02F4  0080               	movwf	0
  2509  02F5                     l66:
  2510  02F5  0008               	return
  2511  02F6                     __end_of_amost1:
  2512                           
  2513                           	psect	text21
  2514  02BE                     __ptext21:	
  2515 ;; *************** function _myIsr *****************
  2516 ;; Defined at:
  2517 ;;		line 18 in file "main.c"
  2518 ;; Parameters:    Size  Location     Type
  2519 ;;		None
  2520 ;; Auto vars:     Size  Location     Type
  2521 ;;		None
  2522 ;; Return value:  Size  Location     Type
  2523 ;;                  1    wreg      void 
  2524 ;; Registers used:
  2525 ;;		status,0
  2526 ;; Tracked objects:
  2527 ;;		On entry : 0/0
  2528 ;;		On exit  : 0/0
  2529 ;;		Unchanged: 0/0
  2530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2531 ;;      Params:         0       0       0       0       0
  2532 ;;      Locals:         0       0       0       0       0
  2533 ;;      Temps:          2       0       0       0       0
  2534 ;;      Totals:         2       0       0       0       0
  2535 ;;Total ram usage:        2 bytes
  2536 ;; Hardware stack levels used: 1
  2537 ;; This function calls:
  2538 ;;		Nothing
  2539 ;; This function is called by:
  2540 ;;		Interrupt level 1
  2541 ;; This function uses a non-reentrant model
  2542 ;;
  2543                           
  2544                           
  2545                           ;psect for function _myIsr
  2546  02BE                     _myIsr:
  2547  02BE                     i1l1090:
  2548                           
  2549                           ;main.c: 21:     if(INTCONbits.INTE && INTCONbits.INTF)
  2550  02BE  1E0B               	btfss	11,4	;volatile
  2551  02BF  2AC1               	goto	u21_21
  2552  02C0  2AC2               	goto	u21_20
  2553  02C1                     u21_21:
  2554  02C1  2AD6               	goto	i1l60
  2555  02C2                     u21_20:
  2556  02C2                     i1l1092:
  2557  02C2  1C8B               	btfss	11,1	;volatile
  2558  02C3  2AC5               	goto	u22_21
  2559  02C4  2AC6               	goto	u22_20
  2560  02C5                     u22_21:
  2561  02C5  2AD6               	goto	i1l60
  2562  02C6                     u22_20:
  2563  02C6                     i1l1094:
  2564                           
  2565                           ;main.c: 22:     {;main.c: 23:         INTCONbits.INTF = 0;
  2566  02C6  108B               	bcf	11,1	;volatile
  2567  02C7                     i1l1096:
  2568                           
  2569                           ;main.c: 24:         PORTBbits.RB1 = ~PORTBbits.RB1;
  2570  02C7  1003               	clrc
  2571  02C8  1283               	bcf	3,5	;RP0=0, select bank0
  2572  02C9  1303               	bcf	3,6	;RP1=0, select bank0
  2573  02CA  1C86               	btfss	6,1	;volatile
  2574  02CB  1403               	setc
  2575  02CC  1803               	btfsc	3,0
  2576  02CD  2ACF               	goto	u23_21
  2577  02CE  2AD3               	goto	u23_20
  2578  02CF                     u23_21:
  2579  02CF  1283               	bcf	3,5	;RP0=0, select bank0
  2580  02D0  1303               	bcf	3,6	;RP1=0, select bank0
  2581  02D1  1486               	bsf	6,1	;volatile
  2582  02D2  2AD6               	goto	u24_24
  2583  02D3                     u23_20:
  2584  02D3  1283               	bcf	3,5	;RP0=0, select bank0
  2585  02D4  1303               	bcf	3,6	;RP1=0, select bank0
  2586  02D5  1086               	bcf	6,1	;volatile
  2587  02D6                     u24_24:
  2588  02D6                     i1l60:
  2589  02D6  0871               	movf	??_myIsr+1,w
  2590  02D7  008A               	movwf	10
  2591  02D8  0E70               	swapf	??_myIsr,w
  2592  02D9  0083               	movwf	3
  2593  02DA  0EFE               	swapf	btemp,f
  2594  02DB  0E7E               	swapf	btemp,w
  2595  02DC  0009               	retfie
  2596  02DD                     __end_of_myIsr:
  2597  007E                     btemp	set	126	;btemp
  2598  007E                     wtemp0	set	126
  2599                           
  2600                           	psect	intentry
  2601  0004                     __pintentry:	
  2602                           ;incstack = 0
  2603 ;; hardware stack exceeded
  2604                           ; Regs used in _myIsr: [status,0]
  2605                           
  2606  0004                     interrupt_function:
  2607  007E                     saved_w	set	btemp
  2608  0004  00FE               	movwf	btemp
  2609  0005  0E03               	swapf	3,w
  2610  0006  00F0               	movwf	??_myIsr
  2611  0007  080A               	movf	10,w
  2612  0008  00F1               	movwf	??_myIsr+1
  2613  0009  120A  118A  2ABE   	ljmp	_myIsr
  2614                           
  2615                           	psect	config
  2616                           
  2617                           ;Config register CONFIG @ 0x2007
  2618                           ;	Oscillator Selection bits
  2619                           ;	FOSC = HS, HS oscillator
  2620                           ;	Watchdog Timer Enable bit
  2621                           ;	WDTE = OFF, WDT disabled
  2622                           ;	Power-up Timer Enable bit
  2623                           ;	PWRTE = ON, PWRT enabled
  2624                           ;	Brown-out Reset Enable bit
  2625                           ;	BOREN = ON, BOR enabled
  2626                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  2627                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
  2628                           ;	Data EEPROM Memory Code Protection bit
  2629                           ;	CPD = OFF, Data EEPROM code protection off
  2630                           ;	Flash Program Memory Write Enable bits
  2631                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  2632                           ;	In-Circuit Debugger Mode bit
  2633                           ;	DEBUG = 0x1, unprogrammed default
  2634                           ;	Flash Program Memory Code Protection bit
  2635                           ;	CP = OFF, Code protection off
  2636  2007                     	org	8199
  2637  2007  3FF2               	dw	16370

Data Sizes:
    Strings     15
    Constant    0
    Data        0
    BSS         11
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     10      19
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    lcd_puts@vector	PTR unsigned char  size(2) Largest target is 15
		 -> ad_char_val(BANK0[5]), STR_1(CODE[15]), 

    amost1@value	PTR unsigned int  size(1) Largest target is 2
		 -> ad_value(COMMON[2]), 


Critical Paths under _main in COMMON

    _main->_lcd_goto
    _main->_lcd_puts
    _lcd_puts->_lcd_char
    _lcd_char->_lcd_byte_4bits
    _lcd_init_8bits->_lcd_cmd
    _lcd_init_4bits->_lcd_cmd
    _lcd_clear->_lcd_cmd
    _lcd_goto->_lcd_cmd
    _lcd_cmd->_lcd_byte_4bits
    _lcd_byte_4bits->_lcd_send_nibble

Critical Paths under _myIsr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_lcd_puts

Critical Paths under _myIsr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _myIsr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myIsr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myIsr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    3218
                                              7 BANK0      3     3      0
                             _amost1
                               _init
                       _keypad1_scan
                       _keypad2_scan
                           _lcd_goto
                           _lcd_init
                           _lcd_puts
 ---------------------------------------------------------------------------------
 (1) _lcd_puts                                             9     6      3     871
                                              8 COMMON     2     2      0
                                              0 BANK0      7     4      3
                           _lcd_char
 ---------------------------------------------------------------------------------
 (2) _lcd_char                                             1     1      0     347
                                              7 COMMON     1     1      0
                     _lcd_byte_4bits
                     _lcd_byte_8bits
                     _lcd_delay_40us
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0    1512
                     _lcd_init_4bits
                     _lcd_init_8bits
 ---------------------------------------------------------------------------------
 (2) _lcd_init_8bits                                       0     0      0     694
                          _lcd_clear
                            _lcd_cmd
                      _lcd_delay_2ms
                     _lcd_delay_40ms
 ---------------------------------------------------------------------------------
 (2) _lcd_init_4bits                                       0     0      0     818
                          _lcd_clear
                            _lcd_cmd
                      _lcd_delay_2ms
                     _lcd_delay_40ms
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (3) _lcd_delay_40ms                                       3     3      0       0
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (3) _lcd_clear                                            0     0      0     347
                            _lcd_cmd
                      _lcd_delay_2ms
 ---------------------------------------------------------------------------------
 (3) _lcd_delay_2ms                                        2     2      0       0
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _lcd_goto                                             4     3      1     682
                                              8 COMMON     2     1      1
                                              0 BANK0      2     2      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (3) _lcd_cmd                                              1     1      0     347
                                              7 COMMON     1     1      0
                     _lcd_byte_4bits
                     _lcd_byte_8bits
                     _lcd_delay_40us
 ---------------------------------------------------------------------------------
 (3) _lcd_delay_40us                                       1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _lcd_byte_8bits                                       1     1      0      31
                                              2 COMMON     1     1      0
                       _lcd_en_pulse
 ---------------------------------------------------------------------------------
 (3) _lcd_byte_4bits                                       4     4      0     254
                                              3 COMMON     4     4      0
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (4) _lcd_send_nibble                                      1     1      0     124
                                              2 COMMON     1     1      0
                       _lcd_en_pulse
 ---------------------------------------------------------------------------------
 (4) _lcd_en_pulse                                         0     0      0       0
                      _lcd_delay_1us
 ---------------------------------------------------------------------------------
 (5) _lcd_delay_1us                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _keypad2_scan                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _keypad1_scan                                         2     0      2      98
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _amost1                                               2     2      0      55
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _myIsr                                                2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _amost1
   _init
   _keypad1_scan
   _keypad2_scan
   _lcd_goto
     _lcd_cmd
       _lcd_byte_4bits
         _lcd_send_nibble
           _lcd_en_pulse
             _lcd_delay_1us
       _lcd_byte_8bits
         _lcd_en_pulse
       _lcd_delay_40us
   _lcd_init
     _lcd_init_4bits
       _lcd_clear
         _lcd_cmd
         _lcd_delay_2ms
       _lcd_cmd
       _lcd_delay_2ms
       _lcd_delay_40ms
       _lcd_send_nibble
     _lcd_init_8bits
       _lcd_clear
       _lcd_cmd
       _lcd_delay_2ms
       _lcd_delay_40ms
   _lcd_puts
     _lcd_char
       _lcd_byte_4bits
       _lcd_byte_8bits
       _lcd_delay_40us

 _myIsr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      1F       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      A      13       5       23.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      1F      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Jan 28 17:24:14 2022

             lcd_cmd@data 0077              lcd_char@data 0077                         pc 0002  
                      l63 02E6                        l66 02F5                        l77 00E3  
                      l93 00EF                        l94 0138                        l95 0101  
                      l96 00F5                        l98 00FB                        fsr 0004  
                     l101 010A                       l110 012B                       l102 011C  
                     l111 0137                       l103 0110                       l112 0131  
                     l200 0181                       l105 0116                       l108 0125  
                     l220 01FA                       l117 027F                       l205 035B  
                     l152 0361                       l208 0340                       l161 0306  
                     l155 0355                       l172 0257                       l149 0365  
                     l182 0321                       l158 0334                       l175 02BD  
                     l183 0326                       l178 034B                       l194 022C  
                     l187 0311                       l188 0316                       l197 01BF  
                     u320 02EA                       u400 011A                       u321 02E9  
                     u401 0119                       u410 0123                       u330 00ED  
                     u411 0122                       u331 00EC                       u420 0129  
                     u340 00F3                       u500 0246                       u421 0128  
                     u341 00F2                       u501 0245                       u430 012F  
                     u350 00F9                       u510 024E                       u431 012E  
                     u351 00F8                       u511 024D                       u440 0135  
                     u360 00FF                       u441 0134                       u361 00FE  
                     u370 0108                       u530 020A                       u371 0107  
                     u380 010E                       u540 022C                       u381 010D  
                     u525 02A3                       u541 022B                       u390 0114  
                     u550 005D                       u607 02E0                       u391 0113  
                     u551 005C                       u480 0232                       u481 0231  
                     u490 023E                       u491 023D                       u567 0084  
                     u577 032D                       u587 0350                       u597 035E  
                     fsr0 0004                       indf 0000               lcd_goto@col 0078  
             lcd_goto@lin 0079                      l1302 02DE                      l1310 008F  
                    l1304 02E3                      l1306 02EA                      l1330 0099  
                    l1322 0095                      l1314 0091                      l1402 00FF  
                    l1308 008E                      l1412 010E                      l1350 00A3  
                    l1342 009F                      l1334 009B                      l1326 0097  
                    l1318 0093                      l1406 0108                      l1440 012F  
                    l1424 011A                      l1280 034C                      l1354 00A5  
                    l1346 00A1                      l1338 009D                      l1450 0137  
                    l1434 0129                      l1418 0114                      l1460 0269  
                    l1364 00A9                      l1428 0123                      l1700 0139  
                    l1470 0275                      l1462 026B                      l1454 0258  
                    l1358 00A7                      l1446 0135                      l1390 00F3  
                    l1382 00E4                      l1710 01CA                      l1702 0356  
                    l1472 0277                      l1464 026E                      l1456 0263  
                    l1384 00ED                      l1640 02F9                      l1712 01D2  
                    l1288 0327                      l1474 027B                      l1466 0271  
                    l1458 0267                      l1642 02FE                      l1650 023A  
                    l1714 01DA                      l1706 01C1                      l1730 021A  
                    l1468 0273                      l1396 00F9                      l1636 0362  
                    l1660 0249                      l1652 023E                      l1644 022E  
                    l1708 01C2                      l1732 0220                      l1724 01FB  
                    l1740 0026                      l1638 02F6                      l1662 024A  
                    l1654 0241                      l1646 0232                      l1670 035C  
                    l1718 01E2                      l1734 0226                      l1726 01FE  
                    l1750 0057                      l1742 002C                      l1664 024E  
                    l1656 0242                      l1648 0237                      l1672 02A0  
                    l1680 0342                      l1728 0200                      l1752 005D  
                    l1744 0034                      l1736 0020                      l1666 0251  
                    l1658 0246                      l1674 02AC                      l1682 0346  
                    l1690 0335                      l1754 0067                      l1746 0043  
                    l1738 0021                      l1668 0252                      l1676 02B2  
                    l1684 0318                      l1692 0308                      l1756 006F  
                    l1748 0049                      l1870 00DE                      l1678 02B7  
                    l1686 031B                      l1862 01EC                      l1694 030B  
                    l1758 007C                      l1864 00B7                      l1866 00BC  
                    l1698 0182                      l1868 00D3                      STR_1 0290  
                    i1l60 02D6            ??_lcd_en_pulse 0072          ?_lcd_send_nibble 0070  
                    _main 0020                      _init 0258                      _var4 002D  
                    _var5 002C                      _var6 002B                      _var7 002A  
                    btemp 007E               lcd_puts@cnt 0079                      start 000C  
         ??_lcd_delay_2ms 0072           ??_lcd_delay_1us 0072                     ?_main 0070  
                   ?_init 0070                     _CMCON 009C                     u21_20 02C2  
                   u21_21 02C1                     u22_20 02C6                     u22_21 02C5  
                   u23_20 02D3                     u23_21 02CF                     u24_24 02D6  
                   _PORTA 0005                     _PORTB 0006                     _PORTC 0007  
                   _PORTD 0008                     _PORTE 0009                     _TRISA 0085  
                   _TRISB 0086                     _TRISC 0087                     _TRISD 0088  
                   _TRISE 0089           __end_of_lcd_cmd 0327                     _myIsr 02BE  
                   pclath 000A         keypad1_scan@value 0072                     status 0003  
                   wtemp0 007E           __initialization 000F              __end_of_main 008E  
            __end_of_init 0280          ??_lcd_delay_40ms 0072          ??_lcd_delay_40us 0072  
                  ??_main 0027                    ??_init 0072                    _ADCON0 001F  
                  _ADCON1 009F                    _ADRESH 001E                    ?_myIsr 0070  
                  _ADRESL 009E                    i1l1090 02BE                    i1l1092 02C2  
                  i1l1094 02C6                    i1l1096 02C7                    _INTCON 000B  
           ?_keypad1_scan 0072             ?_keypad2_scan 0070          __end_of_lcd_char 0317  
        __end_of_lcd_init 035C          __end_of_lcd_goto 01FB          __end_of_lcd_puts 022D  
                  _amost1 02DD          ??_lcd_byte_4bits 0073          ??_lcd_byte_8bits 0072  
    __end_of_lcd_en_pulse 0307                 ??_lcd_cmd 0077          ??_lcd_init_4bits 0078  
        ??_lcd_init_8bits 0078                    saved_w 007E            ??_keypad1_scan 0074  
          ??_keypad2_scan 0072   __end_of__initialization 001C            __pcstackCOMMON 0070  
           __end_of_myIsr 02DD        __size_of_lcd_clear 000C                   ??_myIsr 0070  
              __pbssBANK0 002A                __pmaintext 0020                __pintentry 0004  
                 ?_amost1 0070                 ?_lcd_char 0070                 ?_lcd_init 0070  
               ?_lcd_goto 0078                 ?_lcd_puts 0020                __stringtab 0280  
       __end_of_lcd_clear 0341  __size_of_lcd_send_nibble 002B     __size_of_lcd_en_pulse 0011  
         __size_of_amost1 0019            lcd_puts@LENGHT 0022     __end_of_lcd_delay_2ms 0356  
   __end_of_lcd_delay_1us 0366      __end_of_keypad1_scan 00E4      __end_of_keypad2_scan 0139  
                 __ptext1 01FB                   __ptext2 0307                   __ptext3 0356  
                 __ptext4 0182                   __ptext5 0139                   __ptext6 0327  
                 __ptext7 0335                   __ptext8 034C                   __ptext9 01C0  
                 _lcd_cmd 0317        lcd_byte_4bits@data 0075                ??_lcd_char 0077  
              ??_lcd_init 0078                ??_lcd_goto 0020                ??_lcd_puts 0023  
    end_of_initialization 001C            lcd_puts@vector 0020              _lcd_en_pulse 02F6  
      lcd_byte_8bits@data 0072                 _PORTBbits 0006                 _PORTCbits 0007  
               _PORTEbits 0009               _ad_char_val 002E            __end_of_amost1 02F6  
       ??_lcd_send_nibble 0072       start_initialization 000F   __size_of_lcd_delay_40ms 000E  
 __size_of_lcd_delay_40us 0006     __size_of_keypad1_scan 0056     __size_of_keypad2_scan 0055  
                ??_amost1 0072               __pbssCOMMON 007A                 ___latbits 0002  
           __pcstackBANK0 0020   __size_of_lcd_byte_4bits 001F   __size_of_lcd_byte_8bits 000B  
 __size_of_lcd_init_4bits 0049   __size_of_lcd_init_8bits 003E         __size_of_lcd_char 0010  
       __size_of_lcd_init 0006         __size_of_lcd_goto 003B         __size_of_lcd_puts 0032  
            _keypad1_scan 008E              _keypad2_scan 00E4                 _lcd_clear 0335  
               __pstrings 0280                  ?_lcd_cmd 0070            __size_of_myIsr 001F  
       interrupt_function 0004      lcd_byte_4bits@nibble 0076                ?_lcd_clear 0070  
     lcd_send_nibble@data 0072                _ADCON0bits 001F               __stringbase 028F  
          _lcd_delay_40ms 0327            _lcd_delay_40us 035C                 lcd_puts@x 0078  
  __size_of_lcd_delay_2ms 000A    __size_of_lcd_delay_1us 0004           _lcd_send_nibble 022D  
      __end_of__stringtab 0290                  _ad_value 007A    __end_of_lcd_delay_40ms 0335  
  __end_of_lcd_delay_40us 0362          __size_of_lcd_cmd 0010                  __ptext10 0317  
                __ptext11 035C                  __ptext20 02DD                  __ptext12 0341  
                __ptext21 02BE                  __ptext13 029F                  __ptext14 022D  
                __ptext15 02F6                  __ptext16 0362                  __ptext17 00E4  
                __ptext18 008E                  __ptext19 0258            _lcd_byte_4bits 029F  
          _lcd_byte_8bits 0341                  _lcd_char 0307                  _lcd_init 0356  
                _lcd_goto 01C0            _lcd_init_4bits 0139                  _lcd_puts 01FB  
          _lcd_init_8bits 0182             __size_of_main 006E             __size_of_init 0028  
             ??_lcd_clear 0078             _lcd_delay_2ms 034C             _lcd_delay_1us 0362  
         ?_lcd_delay_40ms 0070           ?_lcd_delay_40us 0070                _INTCONbits 000B  
  __end_of_lcd_byte_4bits 02BE    __end_of_lcd_byte_8bits 034C    __end_of_lcd_init_4bits 0182  
  __end_of_lcd_init_8bits 01C0                  intlevel1 0000   __end_of_lcd_send_nibble 0258  
               stringcode 028A               amost1@value 0073            ?_lcd_delay_2ms 0070  
          ?_lcd_delay_1us 0070                _OPTION_REG 0081           ?_lcd_byte_4bits 0070  
         ?_lcd_byte_8bits 0070                  stringdir 028A                  stringtab 0280  
         ?_lcd_init_4bits 0070           ?_lcd_init_8bits 0070             ?_lcd_en_pulse 0070  
