

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Jan 28 08:07:46 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.20
    15                           ; Generated 12/02/2020 GMT
    16                           ; 
    17                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  0091                     	;# 
    93  0092                     	;# 
    94  0093                     	;# 
    95  0094                     	;# 
    96  0098                     	;# 
    97  0099                     	;# 
    98  009C                     	;# 
    99  009D                     	;# 
   100  009E                     	;# 
   101  009F                     	;# 
   102  010C                     	;# 
   103  010D                     	;# 
   104  010E                     	;# 
   105  010F                     	;# 
   106  018C                     	;# 
   107  018D                     	;# 
   108  0000                     	;# 
   109  0001                     	;# 
   110  0002                     	;# 
   111  0003                     	;# 
   112  0004                     	;# 
   113  0005                     	;# 
   114  0006                     	;# 
   115  0007                     	;# 
   116  0008                     	;# 
   117  0009                     	;# 
   118  000A                     	;# 
   119  000B                     	;# 
   120  000C                     	;# 
   121  000D                     	;# 
   122  000E                     	;# 
   123  000E                     	;# 
   124  000F                     	;# 
   125  0010                     	;# 
   126  0011                     	;# 
   127  0012                     	;# 
   128  0013                     	;# 
   129  0014                     	;# 
   130  0015                     	;# 
   131  0015                     	;# 
   132  0016                     	;# 
   133  0017                     	;# 
   134  0018                     	;# 
   135  0019                     	;# 
   136  001A                     	;# 
   137  001B                     	;# 
   138  001B                     	;# 
   139  001C                     	;# 
   140  001D                     	;# 
   141  001E                     	;# 
   142  001F                     	;# 
   143  0081                     	;# 
   144  0085                     	;# 
   145  0086                     	;# 
   146  0087                     	;# 
   147  0088                     	;# 
   148  0089                     	;# 
   149  008C                     	;# 
   150  008D                     	;# 
   151  008E                     	;# 
   152  0091                     	;# 
   153  0092                     	;# 
   154  0093                     	;# 
   155  0094                     	;# 
   156  0098                     	;# 
   157  0099                     	;# 
   158  009C                     	;# 
   159  009D                     	;# 
   160  009E                     	;# 
   161  009F                     	;# 
   162  010C                     	;# 
   163  010D                     	;# 
   164  010E                     	;# 
   165  010F                     	;# 
   166  018C                     	;# 
   167  018D                     	;# 
   168  0012                     _T2CON	set	18
   169  000B                     _INTCON	set	11
   170  0008                     _PORTD	set	8
   171  0009                     _PORTE	set	9
   172  0007                     _PORTC	set	7
   173  0006                     _PORTB	set	6
   174  0005                     _PORTA	set	5
   175  0008                     _PORTDbits	set	8
   176  000C                     _PIR1bits	set	12
   177  0006                     _PORTBbits	set	6
   178  000B                     _INTCONbits	set	11
   179  009C                     _CMCON	set	156
   180  0092                     _PR2	set	146
   181  008D                     _PIE2	set	141
   182  008C                     _PIE1	set	140
   183  0081                     _OPTION_REG	set	129
   184  0089                     _TRISE	set	137
   185  0087                     _TRISC	set	135
   186  0086                     _TRISB	set	134
   187  0085                     _TRISA	set	133
   188  0088                     _TRISD	set	136
   189  008C                     _PIE1bits	set	140
   190                           
   191                           	psect	cinit
   192  000F                     start_initialization:	
   193                           ; #config settings
   194                           
   195  000F                     __initialization:
   196                           
   197                           ; Clear objects allocated to COMMON
   198  000F  01F0               	clrf	__pbssCOMMON& (0+127)
   199  0010  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   200  0011                     end_of_initialization:	
   201                           ;End of C runtime variable initialization code
   202                           
   203  0011                     __end_of__initialization:
   204  0011  0183               	clrf	3
   205  0012  120A  118A  288C   	ljmp	_main	;jump to C main() function
   206                           
   207                           	psect	bssCOMMON
   208  0070                     __pbssCOMMON:
   209  0070                     _count2:
   210  0070                     	ds	2
   211                           
   212                           	psect	cstackCOMMON
   213  0072                     __pcstackCOMMON:
   214  0072                     ?_myIsr:
   215  0072                     ??_myIsr:	
   216                           ; 1 bytes @ 0x0
   217                           
   218  0072                     ?_init:	
   219                           ; 1 bytes @ 0x0
   220                           
   221  0072                     ?_main:	
   222                           ; 1 bytes @ 0x0
   223                           
   224                           
   225                           ; 1 bytes @ 0x0
   226  0072                     	ds	2
   227  0074                     ??_init:
   228  0074                     ??_main:	
   229                           ; 1 bytes @ 0x2
   230                           
   231                           
   232                           	psect	maintext
   233  008C                     __pmaintext:	
   234                           ; 1 bytes @ 0x2
   235 ;;
   236 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   237 ;;
   238 ;; *************** function _main *****************
   239 ;; Defined at:
   240 ;;		line 133 in file "main.c"
   241 ;; Parameters:    Size  Location     Type
   242 ;;		None
   243 ;; Auto vars:     Size  Location     Type
   244 ;;		None
   245 ;; Return value:  Size  Location     Type
   246 ;;                  1    wreg      void 
   247 ;; Registers used:
   248 ;;		wreg, status,2, status,0, pclath, cstack
   249 ;; Tracked objects:
   250 ;;		On entry : B00/0
   251 ;;		On exit  : 0/0
   252 ;;		Unchanged: 0/0
   253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   254 ;;      Params:         0       0       0       0       0
   255 ;;      Locals:         0       0       0       0       0
   256 ;;      Temps:          0       0       0       0       0
   257 ;;      Totals:         0       0       0       0       0
   258 ;;Total ram usage:        0 bytes
   259 ;; Hardware stack levels required when called: 2
   260 ;; This function calls:
   261 ;;		_init
   262 ;; This function is called by:
   263 ;;		Startup code after reset
   264 ;; This function uses a non-reentrant model
   265 ;;
   266                           
   267                           
   268                           ;psect for function _main
   269  008C                     _main:
   270  008C                     l701:	
   271                           ;incstack = 0
   272                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   273                           
   274                           
   275                           ;main.c: 136:     INTCONbits.GIE = 0;
   276  008C  138B               	bcf	11,7	;volatile
   277  008D                     l703:
   278                           
   279                           ;main.c: 139:     init();
   280  008D  120A  118A  205F  120A  118A  	fcall	_init
   281  0092                     l705:
   282                           
   283                           ;main.c: 142:     INTCONbits.GIE = 1;
   284  0092  178B               	bsf	11,7	;volatile
   285  0093                     l62:	
   286                           ;main.c: 145:     while(1)
   287                           
   288  0093                     l63:	
   289                           ;main.c: 146:     {;main.c: 148:     }
   290                           
   291  0093  2893               	goto	l62
   292  0094  120A  118A  280C   	ljmp	start
   293  0097                     __end_of_main:
   294                           
   295                           	psect	text1
   296  005F                     __ptext1:	
   297 ;; *************** function _init *****************
   298 ;; Defined at:
   299 ;;		line 39 in file "main.c"
   300 ;; Parameters:    Size  Location     Type
   301 ;;		None
   302 ;; Auto vars:     Size  Location     Type
   303 ;;		None
   304 ;; Return value:  Size  Location     Type
   305 ;;                  1    wreg      void 
   306 ;; Registers used:
   307 ;;		wreg, status,2
   308 ;; Tracked objects:
   309 ;;		On entry : 0/0
   310 ;;		On exit  : 0/0
   311 ;;		Unchanged: 0/0
   312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   313 ;;      Params:         0       0       0       0       0
   314 ;;      Locals:         0       0       0       0       0
   315 ;;      Temps:          0       0       0       0       0
   316 ;;      Totals:         0       0       0       0       0
   317 ;;Total ram usage:        0 bytes
   318 ;; Hardware stack levels used: 1
   319 ;; Hardware stack levels required when called: 1
   320 ;; This function calls:
   321 ;;		Nothing
   322 ;; This function is called by:
   323 ;;		_main
   324 ;; This function uses a non-reentrant model
   325 ;;
   326                           
   327                           
   328                           ;psect for function _init
   329  005F                     _init:
   330  005F                     l657:	
   331                           ;incstack = 0
   332                           ; Regs used in _init: [wreg+status,2]
   333                           
   334                           
   335                           ;main.c: 42:     PORTA = 0b00000000;
   336  005F  1283               	bcf	3,5	;RP0=0, select bank0
   337  0060  1303               	bcf	3,6	;RP1=0, select bank0
   338  0061  0185               	clrf	5	;volatile
   339                           
   340                           ;main.c: 43:     PORTB = 0b00000000;
   341  0062  0186               	clrf	6	;volatile
   342                           
   343                           ;main.c: 44:     PORTC = 0b00000000;
   344  0063  0187               	clrf	7	;volatile
   345                           
   346                           ;main.c: 45:     TRISD = 0b00000000;
   347  0064  1683               	bsf	3,5	;RP0=1, select bank1
   348  0065  1303               	bcf	3,6	;RP1=0, select bank1
   349  0066  0188               	clrf	8	;volatile
   350                           
   351                           ;main.c: 46:     PORTE = 0b00000000;
   352  0067  1283               	bcf	3,5	;RP0=0, select bank0
   353  0068  1303               	bcf	3,6	;RP1=0, select bank0
   354  0069  0189               	clrf	9	;volatile
   355  006A                     l659:
   356                           
   357                           ;main.c: 48:     TRISA = 0b00000001;
   358  006A  3001               	movlw	1
   359  006B  1683               	bsf	3,5	;RP0=1, select bank1
   360  006C  1303               	bcf	3,6	;RP1=0, select bank1
   361  006D  0085               	movwf	5	;volatile
   362  006E                     l661:
   363                           
   364                           ;main.c: 49:     TRISB = 0b00000001;
   365  006E  3001               	movlw	1
   366  006F  0086               	movwf	6	;volatile
   367  0070                     l663:
   368                           
   369                           ;main.c: 50:     TRISC = 0b10000000;
   370  0070  3080               	movlw	128
   371  0071  0087               	movwf	7	;volatile
   372  0072                     l665:
   373                           
   374                           ;main.c: 51:     PORTD = 0b00000000;
   375  0072  1283               	bcf	3,5	;RP0=0, select bank0
   376  0073  1303               	bcf	3,6	;RP1=0, select bank0
   377  0074  0188               	clrf	8	;volatile
   378  0075                     l667:
   379                           
   380                           ;main.c: 52:     TRISE = 0b00000000;
   381  0075  1683               	bsf	3,5	;RP0=1, select bank1
   382  0076  1303               	bcf	3,6	;RP1=0, select bank1
   383  0077  0189               	clrf	9	;volatile
   384  0078                     l669:
   385                           
   386                           ;main.c: 55:     OPTION_REG = 0b10000001;
   387  0078  3081               	movlw	129
   388  0079  0081               	movwf	1	;volatile
   389  007A                     l671:
   390                           
   391                           ;main.c: 66:     INTCON = 0b01010000;
   392  007A  3050               	movlw	80
   393  007B  008B               	movwf	11	;volatile
   394  007C                     l673:
   395                           
   396                           ;main.c: 80:  PIE1 = 0b00000010;
   397  007C  3002               	movlw	2
   398  007D  008C               	movwf	12	;volatile
   399                           
   400                           ;main.c: 92:  PIE2 = 0b00000000;
   401  007E  018D               	clrf	13	;volatile
   402  007F                     l675:
   403                           
   404                           ;main.c: 105:     PR2 = 49;
   405  007F  3031               	movlw	49
   406  0080  0092               	movwf	18	;volatile
   407  0081                     l677:
   408                           
   409                           ;main.c: 107:     T2CON = 0b01111111;
   410  0081  307F               	movlw	127
   411  0082  1283               	bcf	3,5	;RP0=0, select bank0
   412  0083  1303               	bcf	3,6	;RP1=0, select bank0
   413  0084  0092               	movwf	18	;volatile
   414                           
   415                           ;main.c: 118:     count2 = 0;
   416  0085  01F0               	clrf	_count2	;volatile
   417  0086  01F1               	clrf	_count2+1	;volatile
   418  0087                     l679:
   419                           
   420                           ;main.c: 120:  CMCON = 0b00000111;
   421  0087  3007               	movlw	7
   422  0088  1683               	bsf	3,5	;RP0=1, select bank1
   423  0089  1303               	bcf	3,6	;RP1=0, select bank1
   424  008A  009C               	movwf	28	;volatile
   425  008B                     l57:
   426  008B  0008               	return
   427  008C                     __end_of_init:
   428                           
   429                           	psect	text2
   430  0015                     __ptext2:	
   431 ;; *************** function _myIsr *****************
   432 ;; Defined at:
   433 ;;		line 16 in file "main.c"
   434 ;; Parameters:    Size  Location     Type
   435 ;;		None
   436 ;; Auto vars:     Size  Location     Type
   437 ;;		None
   438 ;; Return value:  Size  Location     Type
   439 ;;                  1    wreg      void 
   440 ;; Registers used:
   441 ;;		wreg, status,2, status,0
   442 ;; Tracked objects:
   443 ;;		On entry : 0/0
   444 ;;		On exit  : 0/0
   445 ;;		Unchanged: 0/0
   446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   447 ;;      Params:         0       0       0       0       0
   448 ;;      Locals:         0       0       0       0       0
   449 ;;      Temps:          2       0       0       0       0
   450 ;;      Totals:         2       0       0       0       0
   451 ;;Total ram usage:        2 bytes
   452 ;; Hardware stack levels used: 1
   453 ;; This function calls:
   454 ;;		Nothing
   455 ;; This function is called by:
   456 ;;		Interrupt level 1
   457 ;; This function uses a non-reentrant model
   458 ;;
   459                           
   460                           
   461                           ;psect for function _myIsr
   462  0015                     _myIsr:
   463  0015                     i1l681:
   464                           
   465                           ;main.c: 19:     if(INTCONbits.INTE && INTCONbits.INTF)
   466  0015  1E0B               	btfss	11,4	;volatile
   467  0016  2818               	goto	u1_21
   468  0017  2819               	goto	u1_20
   469  0018                     u1_21:
   470  0018  282D               	goto	i1l689
   471  0019                     u1_20:
   472  0019                     i1l683:
   473  0019  1C8B               	btfss	11,1	;volatile
   474  001A  281C               	goto	u2_21
   475  001B  281D               	goto	u2_20
   476  001C                     u2_21:
   477  001C  282D               	goto	i1l689
   478  001D                     u2_20:
   479  001D                     i1l685:
   480                           
   481                           ;main.c: 20:     {;main.c: 21:         INTCONbits.INTF = 0;
   482  001D  108B               	bcf	11,1	;volatile
   483  001E                     i1l687:
   484                           
   485                           ;main.c: 22:         PORTBbits.RB1 = ~PORTBbits.RB1;
   486  001E  1003               	clrc
   487  001F  1283               	bcf	3,5	;RP0=0, select bank0
   488  0020  1303               	bcf	3,6	;RP1=0, select bank0
   489  0021  1C86               	btfss	6,1	;volatile
   490  0022  1403               	setc
   491  0023  1803               	btfsc	3,0
   492  0024  2826               	goto	u3_21
   493  0025  282A               	goto	u3_20
   494  0026                     u3_21:
   495  0026  1283               	bcf	3,5	;RP0=0, select bank0
   496  0027  1303               	bcf	3,6	;RP1=0, select bank0
   497  0028  1486               	bsf	6,1	;volatile
   498  0029  282D               	goto	u4_24
   499  002A                     u3_20:
   500  002A  1283               	bcf	3,5	;RP0=0, select bank0
   501  002B  1303               	bcf	3,6	;RP1=0, select bank0
   502  002C  1086               	bcf	6,1	;volatile
   503  002D                     u4_24:
   504  002D                     i1l689:
   505                           
   506                           ;main.c: 26:     if (PIE1bits.TMR2IE && PIR1bits.TMR2IF)
   507  002D  1683               	bsf	3,5	;RP0=1, select bank1
   508  002E  1303               	bcf	3,6	;RP1=0, select bank1
   509  002F  1C8C               	btfss	12,1	;volatile
   510  0030  2832               	goto	u5_21
   511  0031  2833               	goto	u5_20
   512  0032                     u5_21:
   513  0032  2858               	goto	i1l54
   514  0033                     u5_20:
   515  0033                     i1l691:
   516  0033  1283               	bcf	3,5	;RP0=0, select bank0
   517  0034  1303               	bcf	3,6	;RP1=0, select bank0
   518  0035  1C8C               	btfss	12,1	;volatile
   519  0036  2838               	goto	u6_21
   520  0037  2839               	goto	u6_20
   521  0038                     u6_21:
   522  0038  2858               	goto	i1l54
   523  0039                     u6_20:
   524  0039                     i1l693:
   525                           
   526                           ;main.c: 27:     {;main.c: 28:         PIR1bits.TMR2IF = 0;
   527  0039  108C               	bcf	12,1	;volatile
   528  003A                     i1l695:
   529                           
   530                           ;main.c: 29:         count2 = count2 + 1;
   531  003A  0870               	movf	_count2,w	;volatile
   532  003B  3E01               	addlw	1
   533  003C  00F0               	movwf	_count2	;volatile
   534  003D  0871               	movf	_count2+1,w	;volatile
   535  003E  1803               	skipnc
   536  003F  3E01               	addlw	1
   537  0040  3E00               	addlw	0
   538  0041  00F1               	movwf	_count2+1	;volatile
   539                           
   540                           ;main.c: 30:         if(count2 == 100)
   541  0042  3064               	movlw	100
   542  0043  0670               	xorwf	_count2,w	;volatile
   543  0044  0471               	iorwf	_count2+1,w	;volatile
   544  0045  1D03               	btfss	3,2
   545  0046  2848               	goto	u7_21
   546  0047  2849               	goto	u7_20
   547  0048                     u7_21:
   548  0048  2858               	goto	i1l54
   549  0049                     u7_20:
   550  0049                     i1l697:
   551                           
   552                           ;main.c: 31:         {;main.c: 32:             PORTDbits.RD0 = ~PORTDbits.RD0;
   553  0049  1003               	clrc
   554  004A  1C08               	btfss	8,0	;volatile
   555  004B  1403               	setc
   556  004C  1803               	btfsc	3,0
   557  004D  284F               	goto	u8_21
   558  004E  2853               	goto	u8_20
   559  004F                     u8_21:
   560  004F  1283               	bcf	3,5	;RP0=0, select bank0
   561  0050  1303               	bcf	3,6	;RP1=0, select bank0
   562  0051  1408               	bsf	8,0	;volatile
   563  0052  2856               	goto	u9_24
   564  0053                     u8_20:
   565  0053  1283               	bcf	3,5	;RP0=0, select bank0
   566  0054  1303               	bcf	3,6	;RP1=0, select bank0
   567  0055  1008               	bcf	8,0	;volatile
   568  0056                     u9_24:
   569  0056                     i1l699:
   570                           
   571                           ;main.c: 33:             count2 = 0;
   572  0056  01F0               	clrf	_count2	;volatile
   573  0057  01F1               	clrf	_count2+1	;volatile
   574  0058                     i1l54:
   575  0058  0873               	movf	??_myIsr+1,w
   576  0059  008A               	movwf	10
   577  005A  0E72               	swapf	??_myIsr,w
   578  005B  0083               	movwf	3
   579  005C  0EFE               	swapf	btemp,f
   580  005D  0E7E               	swapf	btemp,w
   581  005E  0009               	retfie
   582  005F                     __end_of_myIsr:
   583  007E                     btemp	set	126	;btemp
   584  007E                     wtemp0	set	126
   585                           
   586                           	psect	intentry
   587  0004                     __pintentry:	
   588                           ;incstack = 0
   589                           ; Regs used in _myIsr: [wreg+status,2+status,0]
   590                           
   591  0004                     interrupt_function:
   592  007E                     saved_w	set	btemp
   593  0004  00FE               	movwf	btemp
   594  0005  0E03               	swapf	3,w
   595  0006  00F2               	movwf	??_myIsr
   596  0007  080A               	movf	10,w
   597  0008  00F3               	movwf	??_myIsr+1
   598  0009  120A  118A  2815   	ljmp	_myIsr
   599                           
   600                           	psect	config
   601                           
   602                           ;Config register CONFIG @ 0x2007
   603                           ;	Oscillator Selection bits
   604                           ;	FOSC = HS, HS oscillator
   605                           ;	Watchdog Timer Enable bit
   606                           ;	WDTE = OFF, WDT disabled
   607                           ;	Power-up Timer Enable bit
   608                           ;	PWRTE = ON, PWRT enabled
   609                           ;	Brown-out Reset Enable bit
   610                           ;	BOREN = ON, BOR enabled
   611                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   612                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
   613                           ;	Data EEPROM Memory Code Protection bit
   614                           ;	CPD = OFF, Data EEPROM code protection off
   615                           ;	Flash Program Memory Write Enable bits
   616                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   617                           ;	In-Circuit Debugger Mode bit
   618                           ;	DEBUG = 0x1, unprogrammed default
   619                           ;	Flash Program Memory Code Protection bit
   620                           ;	CP = OFF, Code protection off
   621  2007                     	org	8199
   622  2007  3FF2               	dw	16370

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2       4
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _myIsr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _myIsr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _myIsr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myIsr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myIsr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                               _init
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _myIsr                                                2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init

 _myIsr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      2       4       1       28.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       4       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       4      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Jan 28 08:07:46 2022

                     l62 0093                       l63 0093                       l57 008B  
                    l701 008C                      l703 008D                      l705 0092  
                    l661 006E                      l671 007A                      l663 0070  
                    l673 007C                      l665 0072                      l657 005F  
                    l675 007F                      l667 0075                      l659 006A  
                    l677 0081                      l669 0078                      l679 0087  
                    _PR2 0092                     _PIE1 008C                     _PIE2 008D  
                   i1l54 0058                     u1_20 0019                     u1_21 0018  
                   u2_20 001D                     u2_21 001C                     u3_20 002A  
                   u3_21 0026                     u4_24 002D                     u5_20 0033  
                   u5_21 0032                     u6_20 0039                     u6_21 0038  
                   u7_20 0049                     u7_21 0048                     u8_20 0053  
                   u8_21 004F                     u9_24 0056                     _main 008C  
                   _init 005F                     btemp 007E                     start 000C  
                  ?_main 0072                    ?_init 0072                    _CMCON 009C  
                  _T2CON 0012                    i1l681 0015                    i1l691 0033  
                  i1l683 0019                    i1l693 0039                    i1l685 001D  
                  i1l695 003A                    i1l687 001E                    i1l697 0049  
                  i1l689 002D                    i1l699 0056                    _PORTA 0005  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  _PORTE 0009                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    _TRISE 0089  
                  _myIsr 0015                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 0097  
           __end_of_init 008C                   ??_main 0074                   ??_init 0074  
                 ?_myIsr 0072                   _INTCON 000B                   _count2 0070  
                 saved_w 007E  __end_of__initialization 0011           __pcstackCOMMON 0072  
          __end_of_myIsr 005F                  ??_myIsr 0072               __pmaintext 008C  
             __pintentry 0004                  __ptext1 005F                  __ptext2 0015  
   end_of_initialization 0011                _PORTBbits 0006                _PORTDbits 0008  
    start_initialization 000F              __pbssCOMMON 0070                ___latbits 0002  
         __size_of_myIsr 004A        interrupt_function 0004                 _PIE1bits 008C  
               _PIR1bits 000C            __size_of_main 000B            __size_of_init 002D  
             _INTCONbits 000B                 intlevel1 0000               _OPTION_REG 0081  
