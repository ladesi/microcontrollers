

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Jan 28 18:15:42 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	intentry,global,class=CODE,delta=2
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x7E,2
    12  0000                     
    13                           ; Version 2.20
    14                           ; Generated 12/02/2020 GMT
    15                           ; 
    16                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F877A Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     	;# 
    48  0001                     	;# 
    49  0002                     	;# 
    50  0003                     	;# 
    51  0004                     	;# 
    52  0005                     	;# 
    53  0006                     	;# 
    54  0007                     	;# 
    55  0008                     	;# 
    56  0009                     	;# 
    57  000A                     	;# 
    58  000B                     	;# 
    59  000C                     	;# 
    60  000D                     	;# 
    61  000E                     	;# 
    62  000E                     	;# 
    63  000F                     	;# 
    64  0010                     	;# 
    65  0011                     	;# 
    66  0012                     	;# 
    67  0013                     	;# 
    68  0014                     	;# 
    69  0015                     	;# 
    70  0015                     	;# 
    71  0016                     	;# 
    72  0017                     	;# 
    73  0018                     	;# 
    74  0019                     	;# 
    75  001A                     	;# 
    76  001B                     	;# 
    77  001B                     	;# 
    78  001C                     	;# 
    79  001D                     	;# 
    80  001E                     	;# 
    81  001F                     	;# 
    82  0081                     	;# 
    83  0085                     	;# 
    84  0086                     	;# 
    85  0087                     	;# 
    86  0088                     	;# 
    87  0089                     	;# 
    88  008C                     	;# 
    89  008D                     	;# 
    90  008E                     	;# 
    91  0091                     	;# 
    92  0092                     	;# 
    93  0093                     	;# 
    94  0094                     	;# 
    95  0098                     	;# 
    96  0099                     	;# 
    97  009C                     	;# 
    98  009D                     	;# 
    99  009E                     	;# 
   100  009F                     	;# 
   101  010C                     	;# 
   102  010D                     	;# 
   103  010E                     	;# 
   104  010F                     	;# 
   105  018C                     	;# 
   106  018D                     	;# 
   107  0000                     	;# 
   108  0001                     	;# 
   109  0002                     	;# 
   110  0003                     	;# 
   111  0004                     	;# 
   112  0005                     	;# 
   113  0006                     	;# 
   114  0007                     	;# 
   115  0008                     	;# 
   116  0009                     	;# 
   117  000A                     	;# 
   118  000B                     	;# 
   119  000C                     	;# 
   120  000D                     	;# 
   121  000E                     	;# 
   122  000E                     	;# 
   123  000F                     	;# 
   124  0010                     	;# 
   125  0011                     	;# 
   126  0012                     	;# 
   127  0013                     	;# 
   128  0014                     	;# 
   129  0015                     	;# 
   130  0015                     	;# 
   131  0016                     	;# 
   132  0017                     	;# 
   133  0018                     	;# 
   134  0019                     	;# 
   135  001A                     	;# 
   136  001B                     	;# 
   137  001B                     	;# 
   138  001C                     	;# 
   139  001D                     	;# 
   140  001E                     	;# 
   141  001F                     	;# 
   142  0081                     	;# 
   143  0085                     	;# 
   144  0086                     	;# 
   145  0087                     	;# 
   146  0088                     	;# 
   147  0089                     	;# 
   148  008C                     	;# 
   149  008D                     	;# 
   150  008E                     	;# 
   151  0091                     	;# 
   152  0092                     	;# 
   153  0093                     	;# 
   154  0094                     	;# 
   155  0098                     	;# 
   156  0099                     	;# 
   157  009C                     	;# 
   158  009D                     	;# 
   159  009E                     	;# 
   160  009F                     	;# 
   161  010C                     	;# 
   162  010D                     	;# 
   163  010E                     	;# 
   164  010F                     	;# 
   165  018C                     	;# 
   166  018D                     	;# 
   167  0015                     _CCPR1	set	21
   168  000E                     _TMR1	set	14
   169  0017                     _CCP1CON	set	23
   170  000C                     _PIR1bits	set	12
   171  0010                     _T1CON	set	16
   172  000B                     _INTCON	set	11
   173  0008                     _PORTD	set	8
   174  0009                     _PORTE	set	9
   175  0007                     _PORTC	set	7
   176  0006                     _PORTB	set	6
   177  0005                     _PORTA	set	5
   178  0006                     _PORTBbits	set	6
   179  000B                     _INTCONbits	set	11
   180  0081                     _OPTION_REG	set	129
   181  0089                     _TRISE	set	137
   182  0087                     _TRISC	set	135
   183  0086                     _TRISB	set	134
   184  0085                     _TRISA	set	133
   185  0088                     _TRISD	set	136
   186                           
   187                           	psect	cinit
   188  000F                     start_initialization:	
   189                           ; #config settings
   190                           
   191  000F                     __initialization:
   192  000F                     end_of_initialization:	
   193                           ;End of C runtime variable initialization code
   194                           
   195  000F                     __end_of__initialization:
   196  000F  0183               	clrf	3
   197  0010  120A  118A  283E   	ljmp	_main	;jump to C main() function
   198                           
   199                           	psect	cstackCOMMON
   200  0070                     __pcstackCOMMON:
   201  0070                     ?_myIsr:
   202  0070                     ??_myIsr:	
   203                           ; 1 bytes @ 0x0
   204                           
   205  0070                     ?_init:	
   206                           ; 1 bytes @ 0x0
   207                           
   208  0070                     ?_main:	
   209                           ; 1 bytes @ 0x0
   210                           
   211                           
   212                           ; 1 bytes @ 0x0
   213  0070                     	ds	2
   214  0072                     ??_init:
   215  0072                     ??_main:	
   216                           ; 1 bytes @ 0x2
   217                           
   218                           
   219                           	psect	maintext
   220  003E                     __pmaintext:	
   221                           ; 1 bytes @ 0x2
   222 ;;
   223 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   224 ;;
   225 ;; *************** function _main *****************
   226 ;; Defined at:
   227 ;;		line 98 in file "main.c"
   228 ;; Parameters:    Size  Location     Type
   229 ;;		None
   230 ;; Auto vars:     Size  Location     Type
   231 ;;		None
   232 ;; Return value:  Size  Location     Type
   233 ;;                  1    wreg      void 
   234 ;; Registers used:
   235 ;;		wreg, status,2, status,0, pclath, cstack
   236 ;; Tracked objects:
   237 ;;		On entry : B00/0
   238 ;;		On exit  : 0/0
   239 ;;		Unchanged: 0/0
   240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   241 ;;      Params:         0       0       0       0       0
   242 ;;      Locals:         0       0       0       0       0
   243 ;;      Temps:          0       0       0       0       0
   244 ;;      Totals:         0       0       0       0       0
   245 ;;Total ram usage:        0 bytes
   246 ;; Hardware stack levels required when called: 2
   247 ;; This function calls:
   248 ;;		_init
   249 ;; This function is called by:
   250 ;;		Startup code after reset
   251 ;; This function uses a non-reentrant model
   252 ;;
   253                           
   254                           
   255                           ;psect for function _main
   256  003E                     _main:
   257  003E                     l681:	
   258                           ;incstack = 0
   259                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   260                           
   261                           
   262                           ;main.c: 101:     INTCONbits.GIE = 0;
   263  003E  138B               	bcf	11,7	;volatile
   264  003F                     l683:
   265                           
   266                           ;main.c: 104:     init();
   267  003F  120A  118A  2013  120A  118A  	fcall	_init
   268  0044                     l685:
   269                           
   270                           ;main.c: 107:     INTCONbits.GIE = 1;
   271  0044  178B               	bsf	11,7	;volatile
   272  0045                     l53:
   273  0045  1283               	bcf	3,5	;RP0=0, select bank0
   274  0046  1303               	bcf	3,6	;RP1=0, select bank0
   275  0047  1D0C               	btfss	12,2	;volatile
   276  0048  284A               	goto	u51
   277  0049  284B               	goto	u50
   278  004A                     u51:
   279  004A  2845               	goto	l53
   280  004B                     u50:
   281  004B                     l687:
   282                           
   283                           ;main.c: 112:         TMR1 = 0;
   284  004B  018E               	clrf	14	;volatile
   285  004C  018F               	clrf	15	;volatile
   286  004D                     l689:
   287                           
   288                           ;main.c: 113:         PIR1bits.CCP1IF = 0;
   289  004D  110C               	bcf	12,2	;volatile
   290  004E                     l691:
   291                           
   292                           ;main.c: 114:         CCP1CON = 0b00001000;
   293  004E  3008               	movlw	8
   294  004F  0097               	movwf	23	;volatile
   295  0050                     l693:
   296                           
   297                           ;main.c: 115:         CCPR1 = 3000;
   298  0050  300B               	movlw	11
   299  0051  0096               	movwf	22	;volatile
   300  0052  30B8               	movlw	184
   301  0053  0095               	movwf	21	;volatile
   302  0054                     l56:	
   303                           ;main.c: 116:         while(PIR1bits.CCP1IF == 0);
   304                           
   305  0054  1D0C               	btfss	12,2	;volatile
   306  0055  2857               	goto	u61
   307  0056  2858               	goto	u60
   308  0057                     u61:
   309  0057  2854               	goto	l56
   310  0058                     u60:
   311  0058                     l695:
   312                           
   313                           ;main.c: 117:         TMR1 = 0;
   314  0058  018E               	clrf	14	;volatile
   315  0059  018F               	clrf	15	;volatile
   316  005A                     l697:
   317                           
   318                           ;main.c: 118:         PIR1bits.CCP1IF = 0;
   319  005A  110C               	bcf	12,2	;volatile
   320  005B                     l699:
   321                           
   322                           ;main.c: 119:         CCP1CON = 0b00001001;
   323  005B  3009               	movlw	9
   324  005C  0097               	movwf	23	;volatile
   325  005D                     l701:
   326                           
   327                           ;main.c: 120:         CCPR1 = 2000;
   328  005D  3007               	movlw	7
   329  005E  0096               	movwf	22	;volatile
   330  005F  30D0               	movlw	208
   331  0060  0095               	movwf	21	;volatile
   332  0061  2845               	goto	l53
   333  0062  120A  118A  280C   	ljmp	start
   334  0065                     __end_of_main:
   335                           
   336                           	psect	text1
   337  0013                     __ptext1:	
   338 ;; *************** function _init *****************
   339 ;; Defined at:
   340 ;;		line 26 in file "main.c"
   341 ;; Parameters:    Size  Location     Type
   342 ;;		None
   343 ;; Auto vars:     Size  Location     Type
   344 ;;		None
   345 ;; Return value:  Size  Location     Type
   346 ;;                  1    wreg      void 
   347 ;; Registers used:
   348 ;;		wreg, status,2
   349 ;; Tracked objects:
   350 ;;		On entry : 0/0
   351 ;;		On exit  : 0/0
   352 ;;		Unchanged: 0/0
   353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   354 ;;      Params:         0       0       0       0       0
   355 ;;      Locals:         0       0       0       0       0
   356 ;;      Temps:          0       0       0       0       0
   357 ;;      Totals:         0       0       0       0       0
   358 ;;Total ram usage:        0 bytes
   359 ;; Hardware stack levels used: 1
   360 ;; Hardware stack levels required when called: 1
   361 ;; This function calls:
   362 ;;		Nothing
   363 ;; This function is called by:
   364 ;;		_main
   365 ;; This function uses a non-reentrant model
   366 ;;
   367                           
   368                           
   369                           ;psect for function _init
   370  0013                     _init:
   371  0013                     l653:	
   372                           ;incstack = 0
   373                           ; Regs used in _init: [wreg+status,2]
   374                           
   375                           
   376                           ;main.c: 28:     PORTA = 0b00000000;
   377  0013  1283               	bcf	3,5	;RP0=0, select bank0
   378  0014  1303               	bcf	3,6	;RP1=0, select bank0
   379  0015  0185               	clrf	5	;volatile
   380                           
   381                           ;main.c: 29:     PORTB = 0b00000000;
   382  0016  0186               	clrf	6	;volatile
   383                           
   384                           ;main.c: 30:     PORTC = 0b00000000;
   385  0017  0187               	clrf	7	;volatile
   386                           
   387                           ;main.c: 31:     TRISD = 0b00000000;
   388  0018  1683               	bsf	3,5	;RP0=1, select bank1
   389  0019  1303               	bcf	3,6	;RP1=0, select bank1
   390  001A  0188               	clrf	8	;volatile
   391                           
   392                           ;main.c: 32:     PORTE = 0b00000000;
   393  001B  1283               	bcf	3,5	;RP0=0, select bank0
   394  001C  1303               	bcf	3,6	;RP1=0, select bank0
   395  001D  0189               	clrf	9	;volatile
   396  001E                     l655:
   397                           
   398                           ;main.c: 34:     TRISA = 0b00000001;
   399  001E  3001               	movlw	1
   400  001F  1683               	bsf	3,5	;RP0=1, select bank1
   401  0020  1303               	bcf	3,6	;RP1=0, select bank1
   402  0021  0085               	movwf	5	;volatile
   403  0022                     l657:
   404                           
   405                           ;main.c: 35:     TRISB = 0b00000001;
   406  0022  3001               	movlw	1
   407  0023  0086               	movwf	6	;volatile
   408                           
   409                           ;main.c: 36:     TRISC = 0b00000000;
   410  0024  0187               	clrf	7	;volatile
   411                           
   412                           ;main.c: 37:     PORTD = 0b00000000;
   413  0025  1283               	bcf	3,5	;RP0=0, select bank0
   414  0026  1303               	bcf	3,6	;RP1=0, select bank0
   415  0027  0188               	clrf	8	;volatile
   416                           
   417                           ;main.c: 38:     TRISE = 0b00000000;
   418  0028  1683               	bsf	3,5	;RP0=1, select bank1
   419  0029  1303               	bcf	3,6	;RP1=0, select bank1
   420  002A  0189               	clrf	9	;volatile
   421  002B                     l659:
   422                           
   423                           ;main.c: 41:     OPTION_REG = 0b10000001;
   424  002B  3081               	movlw	129
   425  002C  0081               	movwf	1	;volatile
   426  002D                     l661:
   427                           
   428                           ;main.c: 52:     INTCON = 0b01010000;
   429  002D  3050               	movlw	80
   430  002E  008B               	movwf	11	;volatile
   431  002F                     l663:
   432                           
   433                           ;main.c: 65:     T1CON = 0b00000001;
   434  002F  3001               	movlw	1
   435  0030  1283               	bcf	3,5	;RP0=0, select bank0
   436  0031  1303               	bcf	3,6	;RP1=0, select bank0
   437  0032  0090               	movwf	16	;volatile
   438  0033                     l665:
   439                           
   440                           ;main.c: 76:     TMR1 = 0;
   441  0033  018E               	clrf	14	;volatile
   442  0034  018F               	clrf	15	;volatile
   443  0035                     l667:
   444                           
   445                           ;main.c: 78:     PIR1bits.TMR1IF = 0;
   446  0035  100C               	bcf	12,0	;volatile
   447  0036                     l669:
   448                           
   449                           ;main.c: 82:     CCPR1 = 2000;
   450  0036  3007               	movlw	7
   451  0037  0096               	movwf	22	;volatile
   452  0038  30D0               	movlw	208
   453  0039  0095               	movwf	21	;volatile
   454                           
   455                           ;main.c: 84:     CCP1CON = 0b00001001;
   456  003A  3009               	movlw	9
   457  003B  0097               	movwf	23	;volatile
   458  003C                     l671:
   459                           
   460                           ;main.c: 95:     PIR1bits.CCP1IF = 0;
   461  003C  110C               	bcf	12,2	;volatile
   462  003D                     l47:
   463  003D  0008               	return
   464  003E                     __end_of_init:
   465                           
   466                           	psect	text2
   467  0065                     __ptext2:	
   468 ;; *************** function _myIsr *****************
   469 ;; Defined at:
   470 ;;		line 16 in file "main.c"
   471 ;; Parameters:    Size  Location     Type
   472 ;;		None
   473 ;; Auto vars:     Size  Location     Type
   474 ;;		None
   475 ;; Return value:  Size  Location     Type
   476 ;;                  1    wreg      void 
   477 ;; Registers used:
   478 ;;		status,0
   479 ;; Tracked objects:
   480 ;;		On entry : 0/0
   481 ;;		On exit  : 0/0
   482 ;;		Unchanged: 0/0
   483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   484 ;;      Params:         0       0       0       0       0
   485 ;;      Locals:         0       0       0       0       0
   486 ;;      Temps:          2       0       0       0       0
   487 ;;      Totals:         2       0       0       0       0
   488 ;;Total ram usage:        2 bytes
   489 ;; Hardware stack levels used: 1
   490 ;; This function calls:
   491 ;;		Nothing
   492 ;; This function is called by:
   493 ;;		Interrupt level 1
   494 ;; This function uses a non-reentrant model
   495 ;;
   496                           
   497                           
   498                           ;psect for function _myIsr
   499  0065                     _myIsr:
   500  0065                     i1l673:
   501                           
   502                           ;main.c: 19:     if (INTCONbits.INTE && INTCONbits.INTF) {
   503  0065  1E0B               	btfss	11,4	;volatile
   504  0066  2868               	goto	u1_21
   505  0067  2869               	goto	u1_20
   506  0068                     u1_21:
   507  0068  287D               	goto	i1l44
   508  0069                     u1_20:
   509  0069                     i1l675:
   510  0069  1C8B               	btfss	11,1	;volatile
   511  006A  286C               	goto	u2_21
   512  006B  286D               	goto	u2_20
   513  006C                     u2_21:
   514  006C  287D               	goto	i1l44
   515  006D                     u2_20:
   516  006D                     i1l677:
   517                           
   518                           ;main.c: 20:         INTCONbits.INTF = 0;
   519  006D  108B               	bcf	11,1	;volatile
   520  006E                     i1l679:
   521                           
   522                           ;main.c: 21:         PORTBbits.RB1 = ~PORTBbits.RB1;
   523  006E  1003               	clrc
   524  006F  1283               	bcf	3,5	;RP0=0, select bank0
   525  0070  1303               	bcf	3,6	;RP1=0, select bank0
   526  0071  1C86               	btfss	6,1	;volatile
   527  0072  1403               	setc
   528  0073  1803               	btfsc	3,0
   529  0074  2876               	goto	u3_21
   530  0075  287A               	goto	u3_20
   531  0076                     u3_21:
   532  0076  1283               	bcf	3,5	;RP0=0, select bank0
   533  0077  1303               	bcf	3,6	;RP1=0, select bank0
   534  0078  1486               	bsf	6,1	;volatile
   535  0079  287D               	goto	u4_24
   536  007A                     u3_20:
   537  007A  1283               	bcf	3,5	;RP0=0, select bank0
   538  007B  1303               	bcf	3,6	;RP1=0, select bank0
   539  007C  1086               	bcf	6,1	;volatile
   540  007D                     u4_24:
   541  007D                     i1l44:
   542  007D  0871               	movf	??_myIsr+1,w
   543  007E  008A               	movwf	10
   544  007F  0E70               	swapf	??_myIsr,w
   545  0080  0083               	movwf	3
   546  0081  0EFE               	swapf	btemp,f
   547  0082  0E7E               	swapf	btemp,w
   548  0083  0009               	retfie
   549  0084                     __end_of_myIsr:
   550  007E                     btemp	set	126	;btemp
   551  007E                     wtemp0	set	126
   552                           
   553                           	psect	intentry
   554  0004                     __pintentry:	
   555                           ;incstack = 0
   556                           ; Regs used in _myIsr: [status,0]
   557                           
   558  0004                     interrupt_function:
   559  007E                     saved_w	set	btemp
   560  0004  00FE               	movwf	btemp
   561  0005  0E03               	swapf	3,w
   562  0006  00F0               	movwf	??_myIsr
   563  0007  080A               	movf	10,w
   564  0008  00F1               	movwf	??_myIsr+1
   565  0009  120A  118A  2865   	ljmp	_myIsr
   566                           
   567                           	psect	config
   568                           
   569                           ;Config register CONFIG @ 0x2007
   570                           ;	Oscillator Selection bits
   571                           ;	FOSC = HS, HS oscillator
   572                           ;	Watchdog Timer Enable bit
   573                           ;	WDTE = OFF, WDT disabled
   574                           ;	Power-up Timer Enable bit
   575                           ;	PWRTE = ON, PWRT enabled
   576                           ;	Brown-out Reset Enable bit
   577                           ;	BOREN = ON, BOR enabled
   578                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   579                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
   580                           ;	Data EEPROM Memory Code Protection bit
   581                           ;	CPD = OFF, Data EEPROM code protection off
   582                           ;	Flash Program Memory Write Enable bits
   583                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   584                           ;	In-Circuit Debugger Mode bit
   585                           ;	DEBUG = 0x1, unprogrammed default
   586                           ;	Flash Program Memory Code Protection bit
   587                           ;	CP = OFF, Code protection off
   588  2007                     	org	8199
   589  2007  3FF2               	dw	16370

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2       2
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _myIsr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _myIsr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _myIsr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myIsr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myIsr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                               _init
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _myIsr                                                2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init

 _myIsr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      2       2       1       14.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Jan 28 18:15:42 2022

                     l53 0045                       l47 003D                       l56 0054  
                     u50 004B                       u51 004A                       u60 0058  
                     u61 0057                      l701 005D                      l661 002D  
                    l653 0013                      l671 003C                      l663 002F  
                    l655 001E                      l665 0033                      l657 0022  
                    l681 003E                      l667 0035                      l659 002B  
                    l691 004E                      l683 003F                      l669 0036  
                    l693 0050                      l685 0044                      l695 0058  
                    l687 004B                      l697 005A                      l689 004D  
                    l699 005B                     i1l44 007D                     _TMR1 000E  
                   u1_20 0069                     u1_21 0068                     u2_20 006D  
                   u2_21 006C                     u3_20 007A                     u3_21 0076  
                   u4_24 007D                     _main 003E                     _init 0013  
                   btemp 007E                     start 000C                    ?_main 0070  
                  ?_init 0070                    _CCPR1 0015                    _T1CON 0010  
                  i1l673 0065                    i1l675 0069                    i1l677 006D  
                  i1l679 006E                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _PORTE 0009  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _TRISE 0089                    _myIsr 0065  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 0065             __end_of_init 003E  
                 ??_main 0072                   ??_init 0072                   ?_myIsr 0070  
                 _INTCON 000B                   saved_w 007E  __end_of__initialization 000F  
         __pcstackCOMMON 0070            __end_of_myIsr 0084                  ??_myIsr 0070  
             __pmaintext 003E               __pintentry 0004                  _CCP1CON 0017  
                __ptext1 0013                  __ptext2 0065     end_of_initialization 000F  
              _PORTBbits 0006      start_initialization 000F                ___latbits 0002  
         __size_of_myIsr 001F        interrupt_function 0004                 _PIR1bits 000C  
          __size_of_main 0027            __size_of_init 002B               _INTCONbits 000B  
               intlevel1 0000               _OPTION_REG 0081  
