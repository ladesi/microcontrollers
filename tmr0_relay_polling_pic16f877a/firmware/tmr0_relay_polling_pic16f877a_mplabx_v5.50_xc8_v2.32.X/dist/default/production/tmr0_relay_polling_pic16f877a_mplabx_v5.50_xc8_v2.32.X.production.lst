

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Jan 26 19:38:04 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.20
    15                           ; Generated 12/02/2020 GMT
    16                           ; 
    17                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  0091                     	;# 
    93  0092                     	;# 
    94  0093                     	;# 
    95  0094                     	;# 
    96  0098                     	;# 
    97  0099                     	;# 
    98  009C                     	;# 
    99  009D                     	;# 
   100  009E                     	;# 
   101  009F                     	;# 
   102  010C                     	;# 
   103  010D                     	;# 
   104  010E                     	;# 
   105  010F                     	;# 
   106  018C                     	;# 
   107  018D                     	;# 
   108  0000                     	;# 
   109  0001                     	;# 
   110  0002                     	;# 
   111  0003                     	;# 
   112  0004                     	;# 
   113  0005                     	;# 
   114  0006                     	;# 
   115  0007                     	;# 
   116  0008                     	;# 
   117  0009                     	;# 
   118  000A                     	;# 
   119  000B                     	;# 
   120  000C                     	;# 
   121  000D                     	;# 
   122  000E                     	;# 
   123  000E                     	;# 
   124  000F                     	;# 
   125  0010                     	;# 
   126  0011                     	;# 
   127  0012                     	;# 
   128  0013                     	;# 
   129  0014                     	;# 
   130  0015                     	;# 
   131  0015                     	;# 
   132  0016                     	;# 
   133  0017                     	;# 
   134  0018                     	;# 
   135  0019                     	;# 
   136  001A                     	;# 
   137  001B                     	;# 
   138  001B                     	;# 
   139  001C                     	;# 
   140  001D                     	;# 
   141  001E                     	;# 
   142  001F                     	;# 
   143  0081                     	;# 
   144  0085                     	;# 
   145  0086                     	;# 
   146  0087                     	;# 
   147  0088                     	;# 
   148  0089                     	;# 
   149  008C                     	;# 
   150  008D                     	;# 
   151  008E                     	;# 
   152  0091                     	;# 
   153  0092                     	;# 
   154  0093                     	;# 
   155  0094                     	;# 
   156  0098                     	;# 
   157  0099                     	;# 
   158  009C                     	;# 
   159  009D                     	;# 
   160  009E                     	;# 
   161  009F                     	;# 
   162  010C                     	;# 
   163  010D                     	;# 
   164  010E                     	;# 
   165  010F                     	;# 
   166  018C                     	;# 
   167  018D                     	;# 
   168  0001                     _TMR0	set	1
   169  000B                     _INTCON	set	11
   170  0008                     _PORTD	set	8
   171  0009                     _PORTE	set	9
   172  0007                     _PORTC	set	7
   173  0006                     _PORTB	set	6
   174  0005                     _PORTA	set	5
   175  0006                     _PORTBbits	set	6
   176  000B                     _INTCONbits	set	11
   177  0081                     _OPTION_REG	set	129
   178  0089                     _TRISE	set	137
   179  0087                     _TRISC	set	135
   180  0086                     _TRISB	set	134
   181  0085                     _TRISA	set	133
   182  0088                     _TRISD	set	136
   183                           
   184                           	psect	cinit
   185  000F                     start_initialization:	
   186                           ; #config settings
   187                           
   188  000F                     __initialization:
   189                           
   190                           ; Clear objects allocated to COMMON
   191  000F  01F0               	clrf	__pbssCOMMON& (0+127)
   192  0010  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   193  0011                     end_of_initialization:	
   194                           ;End of C runtime variable initialization code
   195                           
   196  0011                     __end_of__initialization:
   197  0011  0183               	clrf	3
   198  0012  120A  118A  2815   	ljmp	_main	;jump to C main() function
   199                           
   200                           	psect	bssCOMMON
   201  0070                     __pbssCOMMON:
   202  0070                     _count0:
   203  0070                     	ds	2
   204                           
   205                           	psect	cstackCOMMON
   206  0072                     __pcstackCOMMON:
   207  0072                     ?_myIsr:
   208  0072                     ??_myIsr:	
   209                           ; 1 bytes @ 0x0
   210                           
   211  0072                     ?_init:	
   212                           ; 1 bytes @ 0x0
   213                           
   214  0072                     ?_main:	
   215                           ; 1 bytes @ 0x0
   216                           
   217                           
   218                           ; 1 bytes @ 0x0
   219  0072                     	ds	2
   220  0074                     ??_init:
   221  0074                     ??_main:	
   222                           ; 1 bytes @ 0x2
   223                           
   224                           
   225                           	psect	maintext
   226  0015                     __pmaintext:	
   227                           ; 1 bytes @ 0x2
   228 ;;
   229 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   230 ;;
   231 ;; *************** function _main *****************
   232 ;; Defined at:
   233 ;;		line 69 in file "main.c"
   234 ;; Parameters:    Size  Location     Type
   235 ;;		None
   236 ;; Auto vars:     Size  Location     Type
   237 ;;		None
   238 ;; Return value:  Size  Location     Type
   239 ;;                  1    wreg      void 
   240 ;; Registers used:
   241 ;;		wreg, status,2, status,0, pclath, cstack
   242 ;; Tracked objects:
   243 ;;		On entry : B00/0
   244 ;;		On exit  : 0/0
   245 ;;		Unchanged: 0/0
   246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   247 ;;      Params:         0       0       0       0       0
   248 ;;      Locals:         0       0       0       0       0
   249 ;;      Temps:          0       0       0       0       0
   250 ;;      Totals:         0       0       0       0       0
   251 ;;Total ram usage:        0 bytes
   252 ;; Hardware stack levels required when called: 2
   253 ;; This function calls:
   254 ;;		_init
   255 ;; This function is called by:
   256 ;;		Startup code after reset
   257 ;; This function uses a non-reentrant model
   258 ;;
   259                           
   260                           
   261                           ;psect for function _main
   262  0015                     _main:
   263  0015                     l665:	
   264                           ;incstack = 0
   265                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   266                           
   267                           
   268                           ;main.c: 72:     INTCONbits.GIE = 0;
   269  0015  138B               	bcf	11,7	;volatile
   270  0016                     l667:
   271                           
   272                           ;main.c: 75:     init();
   273  0016  120A  118A  2047  120A  118A  	fcall	_init
   274  001B                     l669:
   275                           
   276                           ;main.c: 78:     INTCONbits.GIE = 1;
   277  001B  178B               	bsf	11,7	;volatile
   278  001C                     l47:
   279  001C  1D0B               	btfss	11,2	;volatile
   280  001D  281F               	goto	u51
   281  001E  2820               	goto	u50
   282  001F                     u51:
   283  001F  281C               	goto	l47
   284  0020                     u50:
   285  0020                     l671:
   286                           
   287                           ;main.c: 85:         TMR0 = 256 - 250;
   288  0020  3006               	movlw	6
   289  0021  1283               	bcf	3,5	;RP0=0, select bank0
   290  0022  1303               	bcf	3,6	;RP1=0, select bank0
   291  0023  0081               	movwf	1	;volatile
   292                           
   293                           ;main.c: 86:         count0++;
   294  0024  3001               	movlw	1
   295  0025  07F0               	addwf	_count0,f
   296  0026  1803               	skipnc
   297  0027  0AF1               	incf	_count0+1,f
   298  0028  3000               	movlw	0
   299  0029  07F1               	addwf	_count0+1,f
   300  002A                     l673:
   301                           
   302                           ;main.c: 87:         INTCONbits.TMR0IF = 0;
   303  002A  110B               	bcf	11,2	;volatile
   304  002B                     l675:
   305                           
   306                           ;main.c: 88:         if(count0 == 5000)
   307  002B  3088               	movlw	136
   308  002C  0670               	xorwf	_count0,w
   309  002D  3013               	movlw	19
   310  002E  1903               	skipnz
   311  002F  0671               	xorwf	_count0+1,w
   312  0030  1D03               	btfss	3,2
   313  0031  2833               	goto	u61
   314  0032  2834               	goto	u60
   315  0033                     u61:
   316  0033  281C               	goto	l47
   317  0034                     u60:
   318  0034                     l677:
   319                           
   320                           ;main.c: 89:         {;main.c: 90:             PORTBbits.RB6 = !PORTBbits.RB6;
   321  0034  1003               	clrc
   322  0035  1F06               	btfss	6,6	;volatile
   323  0036  1403               	setc
   324  0037  1803               	btfsc	3,0
   325  0038  283A               	goto	u71
   326  0039  283E               	goto	u70
   327  003A                     u71:
   328  003A  1283               	bcf	3,5	;RP0=0, select bank0
   329  003B  1303               	bcf	3,6	;RP1=0, select bank0
   330  003C  1706               	bsf	6,6	;volatile
   331  003D  2841               	goto	u84
   332  003E                     u70:
   333  003E  1283               	bcf	3,5	;RP0=0, select bank0
   334  003F  1303               	bcf	3,6	;RP1=0, select bank0
   335  0040  1306               	bcf	6,6	;volatile
   336  0041                     u84:
   337  0041                     l679:
   338                           
   339                           ;main.c: 91:             count0 = 0;
   340  0041  01F0               	clrf	_count0
   341  0042  01F1               	clrf	_count0+1
   342  0043  281C               	goto	l47
   343  0044  120A  118A  280C   	ljmp	start
   344  0047                     __end_of_main:
   345                           
   346                           	psect	text1
   347  0047                     __ptext1:	
   348 ;; *************** function _init *****************
   349 ;; Defined at:
   350 ;;		line 27 in file "main.c"
   351 ;; Parameters:    Size  Location     Type
   352 ;;		None
   353 ;; Auto vars:     Size  Location     Type
   354 ;;		None
   355 ;; Return value:  Size  Location     Type
   356 ;;                  1    wreg      void 
   357 ;; Registers used:
   358 ;;		wreg, status,2
   359 ;; Tracked objects:
   360 ;;		On entry : 0/0
   361 ;;		On exit  : 0/0
   362 ;;		Unchanged: 0/0
   363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   364 ;;      Params:         0       0       0       0       0
   365 ;;      Locals:         0       0       0       0       0
   366 ;;      Temps:          0       0       0       0       0
   367 ;;      Totals:         0       0       0       0       0
   368 ;;Total ram usage:        0 bytes
   369 ;; Hardware stack levels used: 1
   370 ;; Hardware stack levels required when called: 1
   371 ;; This function calls:
   372 ;;		Nothing
   373 ;; This function is called by:
   374 ;;		_main
   375 ;; This function uses a non-reentrant model
   376 ;;
   377                           
   378                           
   379                           ;psect for function _init
   380  0047                     _init:
   381  0047                     l645:	
   382                           ;incstack = 0
   383                           ; Regs used in _init: [wreg+status,2]
   384                           
   385                           
   386                           ;main.c: 30:     PORTA = 0b00000000;
   387  0047  1283               	bcf	3,5	;RP0=0, select bank0
   388  0048  1303               	bcf	3,6	;RP1=0, select bank0
   389  0049  0185               	clrf	5	;volatile
   390                           
   391                           ;main.c: 31:     PORTB = 0b00000000;
   392  004A  0186               	clrf	6	;volatile
   393                           
   394                           ;main.c: 32:     PORTC = 0b00000000;
   395  004B  0187               	clrf	7	;volatile
   396                           
   397                           ;main.c: 33:     TRISD = 0b00000000;
   398  004C  1683               	bsf	3,5	;RP0=1, select bank1
   399  004D  1303               	bcf	3,6	;RP1=0, select bank1
   400  004E  0188               	clrf	8	;volatile
   401                           
   402                           ;main.c: 34:     PORTE = 0b00000000;
   403  004F  1283               	bcf	3,5	;RP0=0, select bank0
   404  0050  1303               	bcf	3,6	;RP1=0, select bank0
   405  0051  0189               	clrf	9	;volatile
   406                           
   407                           ;main.c: 36:     TRISA = 0b00000000;
   408  0052  1683               	bsf	3,5	;RP0=1, select bank1
   409  0053  1303               	bcf	3,6	;RP1=0, select bank1
   410  0054  0185               	clrf	5	;volatile
   411  0055                     l647:
   412                           
   413                           ;main.c: 37:     TRISB = 0b00000001;
   414  0055  3001               	movlw	1
   415  0056  0086               	movwf	6	;volatile
   416  0057                     l649:
   417                           
   418                           ;main.c: 38:     TRISC = 0b00000000;
   419  0057  0187               	clrf	7	;volatile
   420  0058                     l651:
   421                           
   422                           ;main.c: 39:     PORTD = 0b00000000;
   423  0058  1283               	bcf	3,5	;RP0=0, select bank0
   424  0059  1303               	bcf	3,6	;RP1=0, select bank0
   425  005A  0188               	clrf	8	;volatile
   426  005B                     l653:
   427                           
   428                           ;main.c: 40:     TRISE = 0b00000000;
   429  005B  1683               	bsf	3,5	;RP0=1, select bank1
   430  005C  1303               	bcf	3,6	;RP1=0, select bank1
   431  005D  0189               	clrf	9	;volatile
   432                           
   433                           ;main.c: 43:     OPTION_REG = 0b10000001;
   434  005E  3081               	movlw	129
   435  005F  0081               	movwf	1	;volatile
   436                           
   437                           ;main.c: 54:     INTCON = 0b00010000;
   438  0060  3010               	movlw	16
   439  0061  008B               	movwf	11	;volatile
   440                           
   441                           ;main.c: 65:     TMR0 = 256 - 250;
   442  0062  3006               	movlw	6
   443  0063  1283               	bcf	3,5	;RP0=0, select bank0
   444  0064  1303               	bcf	3,6	;RP1=0, select bank0
   445  0065  0081               	movwf	1	;volatile
   446  0066                     l655:
   447                           
   448                           ;main.c: 66:     count0 = 0;
   449  0066  01F0               	clrf	_count0
   450  0067  01F1               	clrf	_count0+1
   451  0068                     l41:
   452  0068  0008               	return
   453  0069                     __end_of_init:
   454                           
   455                           	psect	text2
   456  0069                     __ptext2:	
   457 ;; *************** function _myIsr *****************
   458 ;; Defined at:
   459 ;;		line 16 in file "main.c"
   460 ;; Parameters:    Size  Location     Type
   461 ;;		None
   462 ;; Auto vars:     Size  Location     Type
   463 ;;		None
   464 ;; Return value:  Size  Location     Type
   465 ;;                  1    wreg      void 
   466 ;; Registers used:
   467 ;;		status,0
   468 ;; Tracked objects:
   469 ;;		On entry : 0/0
   470 ;;		On exit  : 0/0
   471 ;;		Unchanged: 0/0
   472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   473 ;;      Params:         0       0       0       0       0
   474 ;;      Locals:         0       0       0       0       0
   475 ;;      Temps:          2       0       0       0       0
   476 ;;      Totals:         2       0       0       0       0
   477 ;;Total ram usage:        2 bytes
   478 ;; Hardware stack levels used: 1
   479 ;; This function calls:
   480 ;;		Nothing
   481 ;; This function is called by:
   482 ;;		Interrupt level 1
   483 ;; This function uses a non-reentrant model
   484 ;;
   485                           
   486                           
   487                           ;psect for function _myIsr
   488  0069                     _myIsr:
   489  0069                     i1l657:
   490                           
   491                           ;main.c: 19:     if(INTCONbits.INTE && INTCONbits.INTF)
   492  0069  1E0B               	btfss	11,4	;volatile
   493  006A  286C               	goto	u1_21
   494  006B  286D               	goto	u1_20
   495  006C                     u1_21:
   496  006C  2881               	goto	i1l38
   497  006D                     u1_20:
   498  006D                     i1l659:
   499  006D  1C8B               	btfss	11,1	;volatile
   500  006E  2870               	goto	u2_21
   501  006F  2871               	goto	u2_20
   502  0070                     u2_21:
   503  0070  2881               	goto	i1l38
   504  0071                     u2_20:
   505  0071                     i1l661:
   506                           
   507                           ;main.c: 20:     {;main.c: 21:         INTCONbits.INTF = 0;
   508  0071  108B               	bcf	11,1	;volatile
   509  0072                     i1l663:
   510                           
   511                           ;main.c: 22:         PORTBbits.RB1 = !PORTBbits.RB1;
   512  0072  1003               	clrc
   513  0073  1283               	bcf	3,5	;RP0=0, select bank0
   514  0074  1303               	bcf	3,6	;RP1=0, select bank0
   515  0075  1C86               	btfss	6,1	;volatile
   516  0076  1403               	setc
   517  0077  1803               	btfsc	3,0
   518  0078  287A               	goto	u3_21
   519  0079  287E               	goto	u3_20
   520  007A                     u3_21:
   521  007A  1283               	bcf	3,5	;RP0=0, select bank0
   522  007B  1303               	bcf	3,6	;RP1=0, select bank0
   523  007C  1486               	bsf	6,1	;volatile
   524  007D  2881               	goto	u4_24
   525  007E                     u3_20:
   526  007E  1283               	bcf	3,5	;RP0=0, select bank0
   527  007F  1303               	bcf	3,6	;RP1=0, select bank0
   528  0080  1086               	bcf	6,1	;volatile
   529  0081                     u4_24:
   530  0081                     i1l38:
   531  0081  0873               	movf	??_myIsr+1,w
   532  0082  008A               	movwf	10
   533  0083  0E72               	swapf	??_myIsr,w
   534  0084  0083               	movwf	3
   535  0085  0EFE               	swapf	btemp,f
   536  0086  0E7E               	swapf	btemp,w
   537  0087  0009               	retfie
   538  0088                     __end_of_myIsr:
   539  007E                     btemp	set	126	;btemp
   540  007E                     wtemp0	set	126
   541                           
   542                           	psect	intentry
   543  0004                     __pintentry:	
   544                           ;incstack = 0
   545                           ; Regs used in _myIsr: [status,0]
   546                           
   547  0004                     interrupt_function:
   548  007E                     saved_w	set	btemp
   549  0004  00FE               	movwf	btemp
   550  0005  0E03               	swapf	3,w
   551  0006  00F2               	movwf	??_myIsr
   552  0007  080A               	movf	10,w
   553  0008  00F3               	movwf	??_myIsr+1
   554  0009  120A  118A  2869   	ljmp	_myIsr
   555                           
   556                           	psect	config
   557                           
   558                           ;Config register CONFIG @ 0x2007
   559                           ;	Oscillator Selection bits
   560                           ;	FOSC = HS, HS oscillator
   561                           ;	Watchdog Timer Enable bit
   562                           ;	WDTE = OFF, WDT disabled
   563                           ;	Power-up Timer Enable bit
   564                           ;	PWRTE = ON, PWRT enabled
   565                           ;	Brown-out Reset Enable bit
   566                           ;	BOREN = ON, BOR enabled
   567                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   568                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
   569                           ;	Data EEPROM Memory Code Protection bit
   570                           ;	CPD = OFF, Data EEPROM code protection off
   571                           ;	Flash Program Memory Write Enable bits
   572                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   573                           ;	In-Circuit Debugger Mode bit
   574                           ;	DEBUG = 0x1, unprogrammed default
   575                           ;	Flash Program Memory Code Protection bit
   576                           ;	CP = OFF, Code protection off
   577  2007                     	org	8199
   578  2007  3FF2               	dw	16370

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2       4
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _myIsr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _myIsr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _myIsr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myIsr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myIsr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                               _init
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _myIsr                                                2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init

 _myIsr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      2       4       1       28.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       4       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       4      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Jan 26 19:38:04 2022

                     l41 0068                       l47 001C                       u50 0020  
                     u51 001F                       u60 0034                       u61 0033  
                     u70 003E                       u71 003A                       u84 0041  
                    l651 0058                      l653 005B                      l645 0047  
                    l655 0066                      l647 0055                      l671 0020  
                    l649 0057                      l673 002A                      l665 0015  
                    l675 002B                      l667 0016                      l677 0034  
                    l669 001B                      l679 0041                     i1l38 0081  
                   _TMR0 0001                     u1_20 006D                     u1_21 006C  
                   u2_20 0071                     u2_21 0070                     u3_20 007E  
                   u3_21 007A                     u4_24 0081                     _main 0015  
                   _init 0047                     btemp 007E                     start 000C  
                  ?_main 0072                    ?_init 0072                    i1l661 0071  
                  i1l663 0072                    i1l657 0069                    i1l659 006D  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  _TRISE 0089                    _myIsr 0069                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 0047             __end_of_init 0069                   ??_main 0074  
                 ??_init 0074                   ?_myIsr 0072                   _INTCON 000B  
                 _count0 0070                   saved_w 007E  __end_of__initialization 0011  
         __pcstackCOMMON 0072            __end_of_myIsr 0088                  ??_myIsr 0072  
             __pmaintext 0015               __pintentry 0004                  __ptext1 0047  
                __ptext2 0069     end_of_initialization 0011                _PORTBbits 0006  
    start_initialization 000F              __pbssCOMMON 0070                ___latbits 0002  
         __size_of_myIsr 001F        interrupt_function 0004            __size_of_main 0032  
          __size_of_init 0022               _INTCONbits 000B                 intlevel1 0000  
             _OPTION_REG 0081  
