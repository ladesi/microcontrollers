

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Jan 28 00:43:02 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	intentry,global,class=CODE,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.20
    16                           ; Generated 12/02/2020 GMT
    17                           ; 
    18                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F877A Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  0091                     	;# 
    94  0092                     	;# 
    95  0093                     	;# 
    96  0094                     	;# 
    97  0098                     	;# 
    98  0099                     	;# 
    99  009C                     	;# 
   100  009D                     	;# 
   101  009E                     	;# 
   102  009F                     	;# 
   103  010C                     	;# 
   104  010D                     	;# 
   105  010E                     	;# 
   106  010F                     	;# 
   107  018C                     	;# 
   108  018D                     	;# 
   109  0000                     	;# 
   110  0001                     	;# 
   111  0002                     	;# 
   112  0003                     	;# 
   113  0004                     	;# 
   114  0005                     	;# 
   115  0006                     	;# 
   116  0007                     	;# 
   117  0008                     	;# 
   118  0009                     	;# 
   119  000A                     	;# 
   120  000B                     	;# 
   121  000C                     	;# 
   122  000D                     	;# 
   123  000E                     	;# 
   124  000E                     	;# 
   125  000F                     	;# 
   126  0010                     	;# 
   127  0011                     	;# 
   128  0012                     	;# 
   129  0013                     	;# 
   130  0014                     	;# 
   131  0015                     	;# 
   132  0015                     	;# 
   133  0016                     	;# 
   134  0017                     	;# 
   135  0018                     	;# 
   136  0019                     	;# 
   137  001A                     	;# 
   138  001B                     	;# 
   139  001B                     	;# 
   140  001C                     	;# 
   141  001D                     	;# 
   142  001E                     	;# 
   143  001F                     	;# 
   144  0081                     	;# 
   145  0085                     	;# 
   146  0086                     	;# 
   147  0087                     	;# 
   148  0088                     	;# 
   149  0089                     	;# 
   150  008C                     	;# 
   151  008D                     	;# 
   152  008E                     	;# 
   153  0091                     	;# 
   154  0092                     	;# 
   155  0093                     	;# 
   156  0094                     	;# 
   157  0098                     	;# 
   158  0099                     	;# 
   159  009C                     	;# 
   160  009D                     	;# 
   161  009E                     	;# 
   162  009F                     	;# 
   163  010C                     	;# 
   164  010D                     	;# 
   165  010E                     	;# 
   166  010F                     	;# 
   167  018C                     	;# 
   168  018D                     	;# 
   169  0000                     	;# 
   170  0001                     	;# 
   171  0002                     	;# 
   172  0003                     	;# 
   173  0004                     	;# 
   174  0005                     	;# 
   175  0006                     	;# 
   176  0007                     	;# 
   177  0008                     	;# 
   178  0009                     	;# 
   179  000A                     	;# 
   180  000B                     	;# 
   181  000C                     	;# 
   182  000D                     	;# 
   183  000E                     	;# 
   184  000E                     	;# 
   185  000F                     	;# 
   186  0010                     	;# 
   187  0011                     	;# 
   188  0012                     	;# 
   189  0013                     	;# 
   190  0014                     	;# 
   191  0015                     	;# 
   192  0015                     	;# 
   193  0016                     	;# 
   194  0017                     	;# 
   195  0018                     	;# 
   196  0019                     	;# 
   197  001A                     	;# 
   198  001B                     	;# 
   199  001B                     	;# 
   200  001C                     	;# 
   201  001D                     	;# 
   202  001E                     	;# 
   203  001F                     	;# 
   204  0081                     	;# 
   205  0085                     	;# 
   206  0086                     	;# 
   207  0087                     	;# 
   208  0088                     	;# 
   209  0089                     	;# 
   210  008C                     	;# 
   211  008D                     	;# 
   212  008E                     	;# 
   213  0091                     	;# 
   214  0092                     	;# 
   215  0093                     	;# 
   216  0094                     	;# 
   217  0098                     	;# 
   218  0099                     	;# 
   219  009C                     	;# 
   220  009D                     	;# 
   221  009E                     	;# 
   222  009F                     	;# 
   223  010C                     	;# 
   224  010D                     	;# 
   225  010E                     	;# 
   226  010F                     	;# 
   227  018C                     	;# 
   228  018D                     	;# 
   229  0019                     _TXREG	set	25
   230  0008                     _PORTDbits	set	8
   231  0018                     _RCSTA	set	24
   232  000B                     _INTCON	set	11
   233  0008                     _PORTD	set	8
   234  0009                     _PORTE	set	9
   235  0007                     _PORTC	set	7
   236  0006                     _PORTB	set	6
   237  0005                     _PORTA	set	5
   238  001A                     _RCREG	set	26
   239  000C                     _PIR1bits	set	12
   240  0006                     _PORTBbits	set	6
   241  000B                     _INTCONbits	set	11
   242  0065                     _RCIF	set	101
   243  009C                     _CMCON	set	156
   244  008C                     _PIE1	set	140
   245  0099                     _SPBRG	set	153
   246  0098                     _TXSTA	set	152
   247  0081                     _OPTION_REG	set	129
   248  0089                     _TRISE	set	137
   249  0087                     _TRISC	set	135
   250  0086                     _TRISB	set	134
   251  0085                     _TRISA	set	133
   252  0088                     _TRISD	set	136
   253  008C                     _PIE1bits	set	140
   254                           
   255                           	psect	cinit
   256  000F                     start_initialization:	
   257                           ; #config settings
   258                           
   259  000F                     __initialization:
   260                           
   261                           ; Clear objects allocated to COMMON
   262  000F  01F4               	clrf	__pbssCOMMON& (0+127)
   263  0010  01F5               	clrf	(__pbssCOMMON+1)& (0+127)
   264  0011                     end_of_initialization:	
   265                           ;End of C runtime variable initialization code
   266                           
   267  0011                     __end_of__initialization:
   268  0011  0183               	clrf	3
   269  0012  120A  118A  2846   	ljmp	_main	;jump to C main() function
   270                           
   271                           	psect	bssCOMMON
   272  0074                     __pbssCOMMON:
   273  0074                     _letra:
   274  0074                     	ds	1
   275  0075                     _flag_rx:
   276  0075                     	ds	1
   277                           
   278                           	psect	cstackCOMMON
   279  0070                     __pcstackCOMMON:
   280  0070                     ?_putch:
   281  0070                     ?_myIsr:	
   282                           ; 1 bytes @ 0x0
   283                           
   284  0070                     ??_myIsr:	
   285                           ; 1 bytes @ 0x0
   286                           
   287  0070                     ?_init:	
   288                           ; 1 bytes @ 0x0
   289                           
   290  0070                     ?_main:	
   291                           ; 1 bytes @ 0x0
   292                           
   293                           
   294                           ; 1 bytes @ 0x0
   295  0070                     	ds	3
   296  0073                     ??_putch:
   297  0073                     ??_init:	
   298                           ; 1 bytes @ 0x3
   299                           
   300  0073                     putch@byte:	
   301                           ; 1 bytes @ 0x3
   302                           
   303                           
   304                           ; 1 bytes @ 0x3
   305  0073                     	ds	1
   306  0074                     ??_main:
   307                           
   308                           	psect	maintext
   309  0046                     __pmaintext:	
   310                           ; 1 bytes @ 0x4
   311 ;;
   312 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   313 ;;
   314 ;; *************** function _main *****************
   315 ;; Defined at:
   316 ;;		line 120 in file "main.c"
   317 ;; Parameters:    Size  Location     Type
   318 ;;		None
   319 ;; Auto vars:     Size  Location     Type
   320 ;;		None
   321 ;; Return value:  Size  Location     Type
   322 ;;                  1    wreg      void 
   323 ;; Registers used:
   324 ;;		wreg, status,2, status,0, pclath, cstack
   325 ;; Tracked objects:
   326 ;;		On entry : B00/0
   327 ;;		On exit  : 0/0
   328 ;;		Unchanged: 0/0
   329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   330 ;;      Params:         0       0       0       0       0
   331 ;;      Locals:         0       0       0       0       0
   332 ;;      Temps:          0       0       0       0       0
   333 ;;      Totals:         0       0       0       0       0
   334 ;;Total ram usage:        0 bytes
   335 ;; Hardware stack levels required when called: 2
   336 ;; This function calls:
   337 ;;		_init
   338 ;;		_putch
   339 ;; This function is called by:
   340 ;;		Startup code after reset
   341 ;; This function uses a non-reentrant model
   342 ;;
   343                           
   344                           
   345                           ;psect for function _main
   346  0046                     _main:
   347  0046                     l746:	
   348                           ;incstack = 0
   349                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   350                           
   351                           
   352                           ;main.c: 123:     INTCONbits.GIE = 0;
   353  0046  138B               	bcf	11,7	;volatile
   354  0047                     l748:
   355                           
   356                           ;main.c: 126:     init();
   357  0047  120A  118A  2075  120A  118A  	fcall	_init
   358  004C                     l750:
   359                           
   360                           ;main.c: 129:     INTCONbits.GIE = 1;
   361  004C  178B               	bsf	11,7	;volatile
   362  004D                     l752:
   363                           
   364                           ;main.c: 133:     {;main.c: 135:         if(flag_rx)
   365  004D  0875               	movf	_flag_rx,w
   366  004E  1903               	btfsc	3,2
   367  004F  2851               	goto	u91
   368  0050  2852               	goto	u90
   369  0051                     u91:
   370  0051  284D               	goto	l752
   371  0052                     u90:
   372  0052                     l754:
   373                           
   374                           ;main.c: 136:         {;main.c: 137:             putch(letra);
   375  0052  0874               	movf	_letra,w
   376  0053  120A  118A  20A2  120A  118A  	fcall	_putch
   377                           
   378                           ;main.c: 138:             putch('\n');
   379  0058  300A               	movlw	10
   380  0059  120A  118A  20A2  120A  118A  	fcall	_putch
   381  005E                     l756:
   382                           
   383                           ;main.c: 139:             if(letra == 'l')
   384  005E  306C               	movlw	108
   385  005F  0674               	xorwf	_letra,w
   386  0060  1D03               	btfss	3,2
   387  0061  2863               	goto	u101
   388  0062  2864               	goto	u100
   389  0063                     u101:
   390  0063  2867               	goto	l760
   391  0064                     u100:
   392  0064                     l758:
   393                           
   394                           ;main.c: 140:                 PORTDbits.RD0 = 1;
   395  0064  1283               	bcf	3,5	;RP0=0, select bank0
   396  0065  1303               	bcf	3,6	;RP1=0, select bank0
   397  0066  1408               	bsf	8,0	;volatile
   398  0067                     l760:
   399                           
   400                           ;main.c: 141:             if(letra == 'd')
   401  0067  3064               	movlw	100
   402  0068  0674               	xorwf	_letra,w
   403  0069  1D03               	btfss	3,2
   404  006A  286C               	goto	u111
   405  006B  286D               	goto	u110
   406  006C                     u111:
   407  006C  2870               	goto	l764
   408  006D                     u110:
   409  006D                     l762:
   410                           
   411                           ;main.c: 142:                 PORTDbits.RD0 = 0;
   412  006D  1283               	bcf	3,5	;RP0=0, select bank0
   413  006E  1303               	bcf	3,6	;RP1=0, select bank0
   414  006F  1008               	bcf	8,0	;volatile
   415  0070                     l764:
   416                           
   417                           ;main.c: 143:             flag_rx = 0;
   418  0070  01F5               	clrf	_flag_rx
   419  0071  284D               	goto	l752
   420  0072  120A  118A  280C   	ljmp	start
   421  0075                     __end_of_main:
   422                           
   423                           	psect	text1
   424  00A2                     __ptext1:	
   425 ;; *************** function _putch *****************
   426 ;; Defined at:
   427 ;;		line 14 in file "usart.c"
   428 ;; Parameters:    Size  Location     Type
   429 ;;  byte            1    wreg     unsigned char 
   430 ;; Auto vars:     Size  Location     Type
   431 ;;  byte            1    3[COMMON] unsigned char 
   432 ;; Return value:  Size  Location     Type
   433 ;;                  1    wreg      void 
   434 ;; Registers used:
   435 ;;		wreg
   436 ;; Tracked objects:
   437 ;;		On entry : 0/0
   438 ;;		On exit  : 0/0
   439 ;;		Unchanged: 0/0
   440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   441 ;;      Params:         0       0       0       0       0
   442 ;;      Locals:         1       0       0       0       0
   443 ;;      Temps:          0       0       0       0       0
   444 ;;      Totals:         1       0       0       0       0
   445 ;;Total ram usage:        1 bytes
   446 ;; Hardware stack levels used: 1
   447 ;; Hardware stack levels required when called: 1
   448 ;; This function calls:
   449 ;;		Nothing
   450 ;; This function is called by:
   451 ;;		_main
   452 ;;		_send_str
   453 ;;		_getche
   454 ;; This function uses a non-reentrant model
   455 ;;
   456                           
   457                           
   458                           ;psect for function _putch
   459  00A2                     _putch:
   460                           
   461                           ;incstack = 0
   462                           ; Regs used in _putch: [wreg]
   463                           ;putch@byte stored from wreg
   464  00A2  00F3               	movwf	putch@byte
   465  00A3                     l720:
   466  00A3                     l84:	
   467                           ;usart.c: 14: void putch(unsigned char byte);usart.c: 15: {;usart.c: 16:     while(!PIR1
      +                          bits.TXIF)
   468                           
   469                           
   470                           ;usart.c: 16:     while(!PIR1bits.TXIF)
   471  00A3  1283               	bcf	3,5	;RP0=0, select bank0
   472  00A4  1303               	bcf	3,6	;RP1=0, select bank0
   473  00A5  1E0C               	btfss	12,4	;volatile
   474  00A6  28A8               	goto	u11
   475  00A7  28A9               	goto	u10
   476  00A8                     u11:
   477  00A8  28A3               	goto	l84
   478  00A9                     u10:
   479  00A9                     l722:
   480                           
   481                           ;usart.c: 18:     TXREG = byte;
   482  00A9  0873               	movf	putch@byte,w
   483  00AA  0099               	movwf	25	;volatile
   484  00AB                     l87:
   485  00AB  0008               	return
   486  00AC                     __end_of_putch:
   487                           
   488                           	psect	text2
   489  0075                     __ptext2:	
   490 ;; *************** function _init *****************
   491 ;; Defined at:
   492 ;;		line 35 in file "main.c"
   493 ;; Parameters:    Size  Location     Type
   494 ;;		None
   495 ;; Auto vars:     Size  Location     Type
   496 ;;		None
   497 ;; Return value:  Size  Location     Type
   498 ;;                  1    wreg      void 
   499 ;; Registers used:
   500 ;;		wreg, status,2
   501 ;; Tracked objects:
   502 ;;		On entry : 0/0
   503 ;;		On exit  : 0/0
   504 ;;		Unchanged: 0/0
   505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   506 ;;      Params:         0       0       0       0       0
   507 ;;      Locals:         0       0       0       0       0
   508 ;;      Temps:          0       0       0       0       0
   509 ;;      Totals:         0       0       0       0       0
   510 ;;Total ram usage:        0 bytes
   511 ;; Hardware stack levels used: 1
   512 ;; Hardware stack levels required when called: 1
   513 ;; This function calls:
   514 ;;		Nothing
   515 ;; This function is called by:
   516 ;;		_main
   517 ;; This function uses a non-reentrant model
   518 ;;
   519                           
   520                           
   521                           ;psect for function _init
   522  0075                     _init:
   523  0075                     l694:	
   524                           ;incstack = 0
   525                           ; Regs used in _init: [wreg+status,2]
   526                           
   527                           
   528                           ;main.c: 38:     PORTA = 0b00000000;
   529  0075  1283               	bcf	3,5	;RP0=0, select bank0
   530  0076  1303               	bcf	3,6	;RP1=0, select bank0
   531  0077  0185               	clrf	5	;volatile
   532                           
   533                           ;main.c: 39:     PORTB = 0b00000000;
   534  0078  0186               	clrf	6	;volatile
   535                           
   536                           ;main.c: 40:     PORTC = 0b00000000;
   537  0079  0187               	clrf	7	;volatile
   538                           
   539                           ;main.c: 41:     TRISD = 0b00000000;
   540  007A  1683               	bsf	3,5	;RP0=1, select bank1
   541  007B  1303               	bcf	3,6	;RP1=0, select bank1
   542  007C  0188               	clrf	8	;volatile
   543                           
   544                           ;main.c: 42:     PORTE = 0b00000000;
   545  007D  1283               	bcf	3,5	;RP0=0, select bank0
   546  007E  1303               	bcf	3,6	;RP1=0, select bank0
   547  007F  0189               	clrf	9	;volatile
   548  0080                     l696:
   549                           
   550                           ;main.c: 44:     TRISA = 0b00000001;
   551  0080  3001               	movlw	1
   552  0081  1683               	bsf	3,5	;RP0=1, select bank1
   553  0082  1303               	bcf	3,6	;RP1=0, select bank1
   554  0083  0085               	movwf	5	;volatile
   555  0084                     l698:
   556                           
   557                           ;main.c: 45:     TRISB = 0b00000001;
   558  0084  3001               	movlw	1
   559  0085  0086               	movwf	6	;volatile
   560  0086                     l700:
   561                           
   562                           ;main.c: 46:     TRISC = 0b10000000;
   563  0086  3080               	movlw	128
   564  0087  0087               	movwf	7	;volatile
   565  0088                     l702:
   566                           
   567                           ;main.c: 47:     PORTD = 0b00000000;
   568  0088  1283               	bcf	3,5	;RP0=0, select bank0
   569  0089  1303               	bcf	3,6	;RP1=0, select bank0
   570  008A  0188               	clrf	8	;volatile
   571  008B                     l704:
   572                           
   573                           ;main.c: 48:     TRISE = 0b00000000;
   574  008B  1683               	bsf	3,5	;RP0=1, select bank1
   575  008C  1303               	bcf	3,6	;RP1=0, select bank1
   576  008D  0189               	clrf	9	;volatile
   577  008E                     l706:
   578                           
   579                           ;main.c: 51:     OPTION_REG = 0b10000001;
   580  008E  3081               	movlw	129
   581  008F  0081               	movwf	1	;volatile
   582  0090                     l708:
   583                           
   584                           ;main.c: 62:     INTCON = 0b01010000;
   585  0090  3050               	movlw	80
   586  0091  008B               	movwf	11	;volatile
   587  0092                     l710:
   588                           
   589                           ;main.c: 75:  TXSTA = 0b00100100;
   590  0092  3024               	movlw	36
   591  0093  0098               	movwf	24	;volatile
   592  0094                     l712:
   593                           
   594                           ;main.c: 87:  RCSTA = 0b10010000;
   595  0094  3090               	movlw	144
   596  0095  1283               	bcf	3,5	;RP0=0, select bank0
   597  0096  1303               	bcf	3,6	;RP1=0, select bank0
   598  0097  0098               	movwf	24	;volatile
   599  0098                     l714:
   600                           
   601                           ;main.c: 99:  SPBRG = 129;
   602  0098  3081               	movlw	129
   603  0099  1683               	bsf	3,5	;RP0=1, select bank1
   604  009A  1303               	bcf	3,6	;RP1=0, select bank1
   605  009B  0099               	movwf	25	;volatile
   606                           
   607                           ;main.c: 100:     flag_rx = 0;
   608  009C  01F5               	clrf	_flag_rx
   609  009D                     l716:
   610                           
   611                           ;main.c: 104:  PIE1 = 0b00100000;
   612  009D  3020               	movlw	32
   613  009E  008C               	movwf	12	;volatile
   614  009F                     l718:
   615                           
   616                           ;main.c: 117:     CMCON = 0x07;
   617  009F  3007               	movlw	7
   618  00A0  009C               	movwf	28	;volatile
   619  00A1                     l62:
   620  00A1  0008               	return
   621  00A2                     __end_of_init:
   622                           
   623                           	psect	text3
   624  0015                     __ptext3:	
   625 ;; *************** function _myIsr *****************
   626 ;; Defined at:
   627 ;;		line 18 in file "main.c"
   628 ;; Parameters:    Size  Location     Type
   629 ;;		None
   630 ;; Auto vars:     Size  Location     Type
   631 ;;		None
   632 ;; Return value:  Size  Location     Type
   633 ;;                  1    wreg      void 
   634 ;; Registers used:
   635 ;;		wreg, status,0
   636 ;; Tracked objects:
   637 ;;		On entry : 0/0
   638 ;;		On exit  : 0/0
   639 ;;		Unchanged: 0/0
   640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   641 ;;      Params:         0       0       0       0       0
   642 ;;      Locals:         0       0       0       0       0
   643 ;;      Temps:          3       0       0       0       0
   644 ;;      Totals:         3       0       0       0       0
   645 ;;Total ram usage:        3 bytes
   646 ;; Hardware stack levels used: 1
   647 ;; This function calls:
   648 ;;		Nothing
   649 ;; This function is called by:
   650 ;;		Interrupt level 1
   651 ;; This function uses a non-reentrant model
   652 ;;
   653                           
   654                           
   655                           ;psect for function _myIsr
   656  0015                     _myIsr:
   657  0015                     i1l730:
   658                           
   659                           ;main.c: 21:     if(INTCONbits.INTE && INTCONbits.INTF)
   660  0015  1E0B               	btfss	11,4	;volatile
   661  0016  2818               	goto	u3_21
   662  0017  2819               	goto	u3_20
   663  0018                     u3_21:
   664  0018  282D               	goto	i1l738
   665  0019                     u3_20:
   666  0019                     i1l732:
   667  0019  1C8B               	btfss	11,1	;volatile
   668  001A  281C               	goto	u4_21
   669  001B  281D               	goto	u4_20
   670  001C                     u4_21:
   671  001C  282D               	goto	i1l738
   672  001D                     u4_20:
   673  001D                     i1l734:
   674                           
   675                           ;main.c: 22:     {;main.c: 23:         INTCONbits.INTF = 0;
   676  001D  108B               	bcf	11,1	;volatile
   677  001E                     i1l736:
   678                           
   679                           ;main.c: 24:         PORTBbits.RB1 = ~PORTBbits.RB1;
   680  001E  1003               	clrc
   681  001F  1283               	bcf	3,5	;RP0=0, select bank0
   682  0020  1303               	bcf	3,6	;RP1=0, select bank0
   683  0021  1C86               	btfss	6,1	;volatile
   684  0022  1403               	setc
   685  0023  1803               	btfsc	3,0
   686  0024  2826               	goto	u5_21
   687  0025  282A               	goto	u5_20
   688  0026                     u5_21:
   689  0026  1283               	bcf	3,5	;RP0=0, select bank0
   690  0027  1303               	bcf	3,6	;RP1=0, select bank0
   691  0028  1486               	bsf	6,1	;volatile
   692  0029  282D               	goto	u6_24
   693  002A                     u5_20:
   694  002A  1283               	bcf	3,5	;RP0=0, select bank0
   695  002B  1303               	bcf	3,6	;RP1=0, select bank0
   696  002C  1086               	bcf	6,1	;volatile
   697  002D                     u6_24:
   698  002D                     i1l738:
   699                           
   700                           ;main.c: 27:     if(PIE1bits.RCIE && PIR1bits.RCIF)
   701  002D  1683               	bsf	3,5	;RP0=1, select bank1
   702  002E  1303               	bcf	3,6	;RP1=0, select bank1
   703  002F  1E8C               	btfss	12,5	;volatile
   704  0030  2832               	goto	u7_21
   705  0031  2833               	goto	u7_20
   706  0032                     u7_21:
   707  0032  283F               	goto	i1l59
   708  0033                     u7_20:
   709  0033                     i1l740:
   710  0033  1283               	bcf	3,5	;RP0=0, select bank0
   711  0034  1303               	bcf	3,6	;RP1=0, select bank0
   712  0035  1E8C               	btfss	12,5	;volatile
   713  0036  2838               	goto	u8_21
   714  0037  2839               	goto	u8_20
   715  0038                     u8_21:
   716  0038  283F               	goto	i1l59
   717  0039                     u8_20:
   718  0039                     i1l742:
   719                           
   720                           ;main.c: 28:     {;main.c: 29:         letra = RCREG;
   721  0039  081A               	movf	26,w	;volatile
   722  003A  00F0               	movwf	??_myIsr
   723  003B  0870               	movf	??_myIsr,w
   724  003C  00F4               	movwf	_letra
   725  003D                     i1l744:
   726                           
   727                           ;main.c: 30:         flag_rx = 1;
   728  003D  01F5               	clrf	_flag_rx
   729  003E  0AF5               	incf	_flag_rx,f
   730  003F                     i1l59:
   731  003F  0872               	movf	??_myIsr+2,w
   732  0040  008A               	movwf	10
   733  0041  0E71               	swapf	??_myIsr+1,w
   734  0042  0083               	movwf	3
   735  0043  0EFE               	swapf	btemp,f
   736  0044  0E7E               	swapf	btemp,w
   737  0045  0009               	retfie
   738  0046                     __end_of_myIsr:
   739  007E                     btemp	set	126	;btemp
   740  007E                     wtemp0	set	126
   741                           
   742                           	psect	intentry
   743  0004                     __pintentry:	
   744                           ;incstack = 0
   745                           ; Regs used in _myIsr: [wreg+status,0]
   746                           
   747  0004                     interrupt_function:
   748  007E                     saved_w	set	btemp
   749  0004  00FE               	movwf	btemp
   750  0005  0E03               	swapf	3,w
   751  0006  00F1               	movwf	??_myIsr+1
   752  0007  080A               	movf	10,w
   753  0008  00F2               	movwf	??_myIsr+2
   754  0009  120A  118A  2815   	ljmp	_myIsr
   755                           
   756                           	psect	config
   757                           
   758                           ;Config register CONFIG @ 0x2007
   759                           ;	Oscillator Selection bits
   760                           ;	FOSC = HS, HS oscillator
   761                           ;	Watchdog Timer Enable bit
   762                           ;	WDTE = OFF, WDT disabled
   763                           ;	Power-up Timer Enable bit
   764                           ;	PWRTE = ON, PWRT enabled
   765                           ;	Brown-out Reset Enable bit
   766                           ;	BOREN = ON, BOR enabled
   767                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   768                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
   769                           ;	Data EEPROM Memory Code Protection bit
   770                           ;	CPD = OFF, Data EEPROM code protection off
   771                           ;	Flash Program Memory Write Enable bits
   772                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   773                           ;	In-Circuit Debugger Mode bit
   774                           ;	DEBUG = 0x1, unprogrammed default
   775                           ;	Flash Program Memory Code Protection bit
   776                           ;	CP = OFF, Code protection off
   777  2007                     	org	8199
   778  2007  3FF2               	dw	16370

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       6
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_putch

Critical Paths under _myIsr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _myIsr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _myIsr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myIsr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myIsr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      15
                               _init
                              _putch
 ---------------------------------------------------------------------------------
 (1) _putch                                                1     1      0      15
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _myIsr                                                3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init
   _putch

 _myIsr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       6       1       42.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       6       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       6      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Jan 28 00:43:02 2022

                     l62 00A1                       l84 00A3                       l87 00AB  
                     u10 00A9                       u11 00A8                       u90 0052  
                     u91 0051                      l700 0086                      l710 0092  
                    l702 0088                      l712 0094                      l704 008B  
                    l720 00A3                      l714 0098                      l706 008E  
                    l722 00A9                      l716 009D                      l708 0090  
                    l718 009F                      l750 004C                      l760 0067  
                    l752 004D                      l762 006D                      l754 0052  
                    l746 0046                      l764 0070                      l756 005E  
                    l748 0047                      l694 0075                      l758 0064  
                    l696 0080                      l698 0084                      u100 0064  
                    u101 0063                      u110 006D                      u111 006C  
                   _PIE1 008C                     _RCIF 0065                     i1l59 003F  
                   u3_20 0019                     u3_21 0018                     u4_20 001D  
                   u4_21 001C                     u5_20 002A                     u5_21 0026  
                   u6_24 002D                     u7_20 0033                     u7_21 0032  
                   u8_20 0039                     u8_21 0038                     _main 0046  
                   _init 0075                     btemp 007E                     start 000C  
                  ?_main 0070                    ?_init 0070                    _CMCON 009C  
                  i1l730 0015                    i1l740 0033                    i1l732 0019  
                  i1l742 0039                    i1l734 001D                    i1l744 003D  
                  i1l736 001E                    i1l738 002D                    _RCREG 001A  
                  _RCSTA 0018                    _SPBRG 0099                    _PORTA 0005  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  _PORTE 0009                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    _TRISE 0089  
                  _TXREG 0019                    _TXSTA 0098                    _letra 0074  
                  _myIsr 0015                    _putch 00A2                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 0075             __end_of_init 00A2                   ??_main 0074  
                 ??_init 0073                   ?_myIsr 0070                   ?_putch 0070  
                 _INTCON 000B                   saved_w 007E  __end_of__initialization 0011  
         __pcstackCOMMON 0070            __end_of_myIsr 0046            __end_of_putch 00AC  
                ??_myIsr 0070                  ??_putch 0073               __pmaintext 0046  
             __pintentry 0004                  _flag_rx 0075                  __ptext1 00A2  
                __ptext2 0075                  __ptext3 0015     end_of_initialization 0011  
              _PORTBbits 0006                _PORTDbits 0008      start_initialization 000F  
            __pbssCOMMON 0074                ___latbits 0002           __size_of_myIsr 0031  
         __size_of_putch 000A        interrupt_function 0004                 _PIE1bits 008C  
               _PIR1bits 000C            __size_of_main 002F            __size_of_init 002D  
              putch@byte 0073               _INTCONbits 000B                 intlevel1 0000  
             _OPTION_REG 0081  
